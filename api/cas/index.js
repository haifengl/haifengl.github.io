Index.PACKAGES = {"smile" : [], "smile.cas" : [{"name" : "smile.cas.Abs", "shortDescription" : "abs(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Abs.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Abs) => Boolean, msg: => Any): Abs", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Abs.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Abs) => Boolean): Abs", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Abs.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Abs", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Abs.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Abs", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Abs.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Abs, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Abs.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Abs, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Abs.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Abs.simplify", "link" : "smile\/cas\/Abs.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Abs.d", "link" : "smile\/cas\/Abs.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Abs.d", "link" : "smile\/cas\/Abs.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Abs.apply", "link" : "smile\/cas\/Abs.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Abs.toString", "link" : "smile\/cas\/Abs.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Abs#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Abs.x", "link" : "smile\/cas\/Abs.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Abs.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Abs.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Abs.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Abs.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Abs.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Abs.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Abs.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Abs.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Abs.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Abs.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Abs.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Abs.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Abs.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Abs.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Abs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Abs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Abs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Abs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Abs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Abs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Abs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Abs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Abs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Abs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Abs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Abs.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Abs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Abs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Abs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Abs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Abs.html", "kind" : "case class"}, {"name" : "smile.cas.Add", "shortDescription" : "x + y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Add.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Add) => Boolean, msg: => Any): Add", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Add.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Add) => Boolean): Add", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Add.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Add", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Add.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Add", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Add.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Add, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Add.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Add, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Add.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Add.simplify", "link" : "smile\/cas\/Add.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Add.d", "link" : "smile\/cas\/Add.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Add.d", "link" : "smile\/cas\/Add.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Add.apply", "link" : "smile\/cas\/Add.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "smile.cas.Add.equals", "link" : "smile\/cas\/Add.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Add.toString", "link" : "smile\/cas\/Add.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Add#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Scalar", "member" : "smile.cas.Add.y", "link" : "smile\/cas\/Add.html#y:smile.cas.Scalar", "kind" : "val"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Add.x", "link" : "smile\/cas\/Add.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Add.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Add.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Add.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Add.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Add.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Add.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Add.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Add.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Add.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Add.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Add.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Add.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Add.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Add.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Add.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Add.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Add.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Add.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Add.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Add.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Add.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Add.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Add.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Add.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Add.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Add.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Add.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Add.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Add.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Add.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Add.html", "kind" : "case class"}, {"name" : "smile.cas.AddMatrix", "shortDescription" : "A + B", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/AddMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AddMatrix) => Boolean, msg: => Any): AddMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AddMatrix) => Boolean): AddMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): AddMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AddMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AddMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/AddMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AddMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/AddMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.AddMatrix.simplify", "link" : "smile\/cas\/AddMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.AddMatrix.d", "link" : "smile\/cas\/AddMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.AddMatrix.apply", "link" : "smile\/cas\/AddMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.AddMatrix.size", "link" : "smile\/cas\/AddMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "smile.cas.AddMatrix.equals", "link" : "smile\/cas\/AddMatrix.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.AddMatrix.toString", "link" : "smile\/cas\/AddMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.AddMatrix#<init>", "error" : "unsupported entity"}, {"label" : "B", "tail" : ": Matrix", "member" : "smile.cas.AddMatrix.B", "link" : "smile\/cas\/AddMatrix.html#B:smile.cas.Matrix", "kind" : "val"}, {"label" : "A", "tail" : ": Matrix", "member" : "smile.cas.AddMatrix.A", "link" : "smile\/cas\/AddMatrix.html#A:smile.cas.Matrix", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/AddMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/AddMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/AddMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/AddMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/AddMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/AddMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/AddMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/AddMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/AddMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/AddMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/AddMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/AddMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/AddMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/AddMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/AddMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/AddMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/AddMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/AddMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/AddMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/AddMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/AddMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/AddMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/AddMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/AddMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/AddMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/AddMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/AddMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/AddMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/AddMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/AddMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.AddVector", "shortDescription" : "x + y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/AddVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AddVector) => Boolean, msg: => Any): AddVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AddVector) => Boolean): AddVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): AddVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AddVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/AddVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AddVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/AddVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AddVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/AddVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.AddVector.simplify", "link" : "smile\/cas\/AddVector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.AddVector.d", "link" : "smile\/cas\/AddVector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.AddVector.d", "link" : "smile\/cas\/AddVector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.AddVector.apply", "link" : "smile\/cas\/AddVector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.AddVector.size", "link" : "smile\/cas\/AddVector.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "smile.cas.AddVector.equals", "link" : "smile\/cas\/AddVector.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.AddVector.toString", "link" : "smile\/cas\/AddVector.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.AddVector#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Vector", "member" : "smile.cas.AddVector.y", "link" : "smile\/cas\/AddVector.html#y:smile.cas.Vector", "kind" : "val"}, {"label" : "x", "tail" : ": Vector", "member" : "smile.cas.AddVector.x", "link" : "smile\/cas\/AddVector.html#x:smile.cas.Vector", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/AddVector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/AddVector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/AddVector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/AddVector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/AddVector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/AddVector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/AddVector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/AddVector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/AddVector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/AddVector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/AddVector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/AddVector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/AddVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/AddVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/AddVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/AddVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/AddVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/AddVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/AddVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/AddVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/AddVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/AddVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/AddVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/AddVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/AddVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/AddVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/AddVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/AddVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/AddVector.html", "kind" : "case class"}, {"name" : "smile.cas.ArcCos", "shortDescription" : "acos(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ArcCos.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcCos) => Boolean, msg: => Any): ArcCos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCos.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcCos) => Boolean): ArcCos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCos.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ArcCos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCos.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ArcCos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCos.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ArcCos, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ArcCos.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ArcCos, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ArcCos.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.ArcCos.simplify", "link" : "smile\/cas\/ArcCos.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.ArcCos.d", "link" : "smile\/cas\/ArcCos.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.ArcCos.d", "link" : "smile\/cas\/ArcCos.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.ArcCos.apply", "link" : "smile\/cas\/ArcCos.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ArcCos.toString", "link" : "smile\/cas\/ArcCos.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ArcCos#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.ArcCos.x", "link" : "smile\/cas\/ArcCos.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ArcCos.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcCos.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcCos.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/ArcCos.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/ArcCos.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/ArcCos.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/ArcCos.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcCos.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/ArcCos.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/ArcCos.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/ArcCos.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/ArcCos.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/ArcCos.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/ArcCos.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ArcCos.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ArcCos.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ArcCos.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ArcCos.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ArcCos.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ArcCos.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ArcCos.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcCos.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcCos.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcCos.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ArcCos.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ArcCos.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ArcCos.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ArcCos.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ArcCos.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ArcCos.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ArcCos.html", "kind" : "case class"}, {"name" : "smile.cas.ArcCot", "shortDescription" : "acot(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ArcCot.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcCot) => Boolean, msg: => Any): ArcCot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCot.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcCot) => Boolean): ArcCot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCot.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ArcCot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCot.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ArcCot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcCot.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ArcCot, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ArcCot.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ArcCot, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ArcCot.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.ArcCot.simplify", "link" : "smile\/cas\/ArcCot.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.ArcCot.d", "link" : "smile\/cas\/ArcCot.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.ArcCot.d", "link" : "smile\/cas\/ArcCot.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.ArcCot.apply", "link" : "smile\/cas\/ArcCot.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ArcCot.toString", "link" : "smile\/cas\/ArcCot.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ArcCot#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.ArcCot.x", "link" : "smile\/cas\/ArcCot.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ArcCot.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcCot.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcCot.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/ArcCot.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/ArcCot.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/ArcCot.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/ArcCot.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcCot.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/ArcCot.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/ArcCot.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/ArcCot.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/ArcCot.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/ArcCot.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/ArcCot.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ArcCot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ArcCot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ArcCot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ArcCot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ArcCot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ArcCot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ArcCot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcCot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcCot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcCot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ArcCot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ArcCot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ArcCot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ArcCot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ArcCot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ArcCot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ArcCot.html", "kind" : "case class"}, {"name" : "smile.cas.ArcSin", "shortDescription" : "asin(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ArcSin.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcSin) => Boolean, msg: => Any): ArcSin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcSin.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcSin) => Boolean): ArcSin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcSin.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ArcSin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcSin.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ArcSin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcSin.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ArcSin, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ArcSin.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ArcSin, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ArcSin.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.ArcSin.simplify", "link" : "smile\/cas\/ArcSin.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.ArcSin.d", "link" : "smile\/cas\/ArcSin.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.ArcSin.d", "link" : "smile\/cas\/ArcSin.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.ArcSin.apply", "link" : "smile\/cas\/ArcSin.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ArcSin.toString", "link" : "smile\/cas\/ArcSin.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ArcSin#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.ArcSin.x", "link" : "smile\/cas\/ArcSin.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ArcSin.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcSin.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcSin.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/ArcSin.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/ArcSin.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/ArcSin.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/ArcSin.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcSin.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/ArcSin.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/ArcSin.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/ArcSin.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/ArcSin.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/ArcSin.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/ArcSin.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ArcSin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ArcSin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ArcSin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ArcSin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ArcSin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ArcSin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ArcSin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcSin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcSin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcSin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ArcSin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ArcSin.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ArcSin.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ArcSin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ArcSin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ArcSin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ArcSin.html", "kind" : "case class"}, {"name" : "smile.cas.ArcTan", "shortDescription" : "atan(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ArcTan.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcTan) => Boolean, msg: => Any): ArcTan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcTan.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArcTan) => Boolean): ArcTan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcTan.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ArcTan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcTan.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ArcTan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ArcTan.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ArcTan, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ArcTan.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ArcTan, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ArcTan.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.ArcTan.simplify", "link" : "smile\/cas\/ArcTan.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.ArcTan.d", "link" : "smile\/cas\/ArcTan.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.ArcTan.d", "link" : "smile\/cas\/ArcTan.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.ArcTan.apply", "link" : "smile\/cas\/ArcTan.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ArcTan.toString", "link" : "smile\/cas\/ArcTan.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ArcTan#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.ArcTan.x", "link" : "smile\/cas\/ArcTan.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ArcTan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcTan.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcTan.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/ArcTan.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/ArcTan.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/ArcTan.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/ArcTan.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/ArcTan.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/ArcTan.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/ArcTan.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/ArcTan.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/ArcTan.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/ArcTan.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/ArcTan.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ArcTan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ArcTan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ArcTan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ArcTan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ArcTan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ArcTan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ArcTan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcTan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcTan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ArcTan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ArcTan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ArcTan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ArcTan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ArcTan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ArcTan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ArcTan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ArcTan.html", "kind" : "case class"}, {"name" : "smile.cas.Ceil", "shortDescription" : "ceil(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Ceil.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ceil) => Boolean, msg: => Any): Ceil", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Ceil.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ceil) => Boolean): Ceil", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Ceil.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Ceil", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Ceil.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Ceil", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Ceil.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Ceil, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Ceil.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Ceil, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Ceil.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.Ceil.simplify", "link" : "smile\/cas\/Ceil.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.Ceil.apply", "link" : "smile\/cas\/Ceil.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Ceil.toString", "link" : "smile\/cas\/Ceil.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Ceil#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Ceil.x", "link" : "smile\/cas\/Ceil.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Ceil.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/Ceil.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/Ceil.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/Ceil.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/Ceil.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/Ceil.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/Ceil.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/Ceil.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/Ceil.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/Ceil.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/Ceil.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/Ceil.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/Ceil.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Ceil.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Ceil.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Ceil.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Ceil.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Ceil.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Ceil.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Ceil.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Ceil.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Ceil.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Ceil.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Ceil.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Ceil.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Ceil.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Ceil.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Ceil.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Ceil.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Ceil.html", "kind" : "case class"}, {"name" : "smile.cas.Const", "shortDescription" : "Constant value.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Const.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Const) => Boolean, msg: => Any): Const", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Const.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Const) => Boolean): Const", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Const.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Const", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Const.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Const", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Const.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Const, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Const.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Const, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Const.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Const.d", "link" : "smile\/cas\/Const.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Const.d", "link" : "smile\/cas\/Const.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Const.apply", "link" : "smile\/cas\/Const.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Const.toString", "link" : "smile\/cas\/Const.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Const#<init>", "error" : "unsupported entity"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.Const.symbol", "link" : "smile\/cas\/Const.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Const.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Const.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Const.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Const.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Const.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Const.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Const.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Const.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Const.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Const.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Const.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.simplify", "link" : "smile\/cas\/Const.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Const.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Const.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Const.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Const.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Const.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Const.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Const.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Const.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Const.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Const.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Const.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Const.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Const.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Const.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Const.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Const.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Const.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Const.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Const.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Const.html", "kind" : "case class"}, {"name" : "smile.cas.ConstMatrix", "shortDescription" : "Constant matrix.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ConstMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstMatrix) => Boolean, msg: => Any): ConstMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstMatrix) => Boolean): ConstMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ConstMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConstMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConstMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ConstMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConstMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ConstMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.ConstMatrix.apply", "link" : "smile\/cas\/ConstMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.ConstMatrix.d", "link" : "smile\/cas\/ConstMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ConstMatrix.toString", "link" : "smile\/cas\/ConstMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ConstMatrix#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": (IntScalar, IntScalar)", "member" : "smile.cas.ConstMatrix.size", "link" : "smile\/cas\/ConstMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "val"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.ConstMatrix.symbol", "link" : "smile\/cas\/ConstMatrix.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ConstMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/ConstMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/ConstMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/ConstMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/ConstMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ConstMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ConstMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ConstMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/ConstMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/ConstMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/ConstMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/ConstMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/ConstMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/ConstMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ConstMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ConstMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ConstMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ConstMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ConstMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ConstMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ConstMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ConstMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ConstMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ConstMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ConstMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ConstMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ConstMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ConstMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ConstMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ConstMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ConstMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.ConstVector", "shortDescription" : "Constant vector.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ConstVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstVector) => Boolean, msg: => Any): ConstVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstVector) => Boolean): ConstVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ConstVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConstVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ConstVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConstVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ConstVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConstVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ConstVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.ConstVector.apply", "link" : "smile\/cas\/ConstVector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.ConstVector.d", "link" : "smile\/cas\/ConstVector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.ConstVector.d", "link" : "smile\/cas\/ConstVector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ConstVector.toString", "link" : "smile\/cas\/ConstVector.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ConstVector#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": IntScalar", "member" : "smile.cas.ConstVector.size", "link" : "smile\/cas\/ConstVector.html#size:smile.cas.IntScalar", "kind" : "val"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.ConstVector.symbol", "link" : "smile\/cas\/ConstVector.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ConstVector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/ConstVector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/ConstVector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/ConstVector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/ConstVector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/ConstVector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/ConstVector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/ConstVector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/ConstVector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vector.simplify", "link" : "smile\/cas\/ConstVector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/ConstVector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/ConstVector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/ConstVector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ConstVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ConstVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ConstVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ConstVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ConstVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ConstVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ConstVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ConstVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ConstVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ConstVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ConstVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ConstVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ConstVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ConstVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ConstVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ConstVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ConstVector.html", "kind" : "case class"}, {"name" : "smile.cas.Cos", "shortDescription" : "cos(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Cos.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Cos) => Boolean, msg: => Any): Cos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cos.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Cos) => Boolean): Cos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cos.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Cos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cos.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Cos", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cos.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Cos, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Cos.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Cos, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Cos.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Cos.simplify", "link" : "smile\/cas\/Cos.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Cos.d", "link" : "smile\/cas\/Cos.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Cos.d", "link" : "smile\/cas\/Cos.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Cos.apply", "link" : "smile\/cas\/Cos.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Cos.toString", "link" : "smile\/cas\/Cos.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Cos#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Cos.x", "link" : "smile\/cas\/Cos.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Cos.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Cos.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Cos.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Cos.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Cos.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Cos.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Cos.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Cos.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Cos.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Cos.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Cos.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Cos.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Cos.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Cos.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Cos.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Cos.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Cos.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Cos.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Cos.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Cos.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Cos.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Cos.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Cos.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Cos.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Cos.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Cos.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Cos.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Cos.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Cos.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Cos.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Cos.html", "kind" : "case class"}, {"name" : "smile.cas.Cot", "shortDescription" : "cot(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Cot.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Cot) => Boolean, msg: => Any): Cot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cot.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Cot) => Boolean): Cot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cot.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Cot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cot.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Cot", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Cot.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Cot, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Cot.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Cot, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Cot.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Cot.simplify", "link" : "smile\/cas\/Cot.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Cot.d", "link" : "smile\/cas\/Cot.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Cot.d", "link" : "smile\/cas\/Cot.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Cot.apply", "link" : "smile\/cas\/Cot.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Cot.toString", "link" : "smile\/cas\/Cot.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Cot#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Cot.x", "link" : "smile\/cas\/Cot.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Cot.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Cot.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Cot.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Cot.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Cot.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Cot.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Cot.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Cot.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Cot.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Cot.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Cot.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Cot.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Cot.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Cot.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Cot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Cot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Cot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Cot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Cot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Cot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Cot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Cot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Cot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Cot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Cot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Cot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Cot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Cot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Cot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Cot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Cot.html", "kind" : "case class"}, {"name" : "smile.cas.DiagonalMatrix", "shortDescription" : "Diagonal matrix", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/DiagonalMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DiagonalMatrix) => Boolean, msg: => Any): DiagonalMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/DiagonalMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DiagonalMatrix) => Boolean): DiagonalMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/DiagonalMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): DiagonalMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/DiagonalMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DiagonalMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/DiagonalMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DiagonalMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/DiagonalMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DiagonalMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/DiagonalMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.DiagonalMatrix.simplify", "link" : "smile\/cas\/DiagonalMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.DiagonalMatrix.apply", "link" : "smile\/cas\/DiagonalMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.DiagonalMatrix.d", "link" : "smile\/cas\/DiagonalMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.DiagonalMatrix.size", "link" : "smile\/cas\/DiagonalMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.DiagonalMatrix.toString", "link" : "smile\/cas\/DiagonalMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.DiagonalMatrix#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar*", "member" : "smile.cas.DiagonalMatrix.x", "link" : "smile\/cas\/DiagonalMatrix.html#x:smile.cas.Scalar*", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/DiagonalMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/DiagonalMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/DiagonalMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/DiagonalMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/DiagonalMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/DiagonalMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/DiagonalMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/DiagonalMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/DiagonalMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/DiagonalMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/DiagonalMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/DiagonalMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/DiagonalMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/DiagonalMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/DiagonalMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/DiagonalMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/DiagonalMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/DiagonalMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/DiagonalMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/DiagonalMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/DiagonalMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/DiagonalMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/DiagonalMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/DiagonalMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/DiagonalMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/DiagonalMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/DiagonalMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/DiagonalMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/DiagonalMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/DiagonalMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.Div", "shortDescription" : "x \/ y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Div.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Div) => Boolean, msg: => Any): Div", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Div.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Div) => Boolean): Div", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Div.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Div", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Div.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Div", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Div.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Div, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Div.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Div, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Div.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Div.simplify", "link" : "smile\/cas\/Div.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Div.d", "link" : "smile\/cas\/Div.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Div.d", "link" : "smile\/cas\/Div.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Div.apply", "link" : "smile\/cas\/Div.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Div.toString", "link" : "smile\/cas\/Div.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Div#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Scalar", "member" : "smile.cas.Div.y", "link" : "smile\/cas\/Div.html#y:smile.cas.Scalar", "kind" : "val"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Div.x", "link" : "smile\/cas\/Div.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Div.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Div.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Div.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Div.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Div.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Div.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Div.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Div.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Div.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Div.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Div.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Div.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Div.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Div.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Div.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Div.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Div.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Div.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Div.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Div.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Div.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Div.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Div.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Div.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Div.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Div.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Div.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Div.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Div.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Div.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Div.html", "kind" : "case class"}, {"name" : "smile.cas.Exp", "shortDescription" : "exp(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Exp.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Exp) => Boolean, msg: => Any): Exp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Exp.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Exp) => Boolean): Exp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Exp.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Exp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Exp.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Exp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Exp.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Exp, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Exp.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Exp, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Exp.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Exp.simplify", "link" : "smile\/cas\/Exp.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Exp.d", "link" : "smile\/cas\/Exp.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Exp.d", "link" : "smile\/cas\/Exp.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Exp.apply", "link" : "smile\/cas\/Exp.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Exp.toString", "link" : "smile\/cas\/Exp.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Exp#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Exp.x", "link" : "smile\/cas\/Exp.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Exp.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Exp.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Exp.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Exp.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Exp.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Exp.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Exp.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Exp.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Exp.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Exp.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Exp.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Exp.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Exp.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Exp.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Exp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Exp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Exp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Exp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Exp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Exp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Exp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Exp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Exp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Exp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Exp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Exp.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Exp.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Exp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Exp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Exp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Exp.html", "kind" : "case class"}, {"name" : "smile.cas.Floor", "shortDescription" : "floor(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Floor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Floor) => Boolean, msg: => Any): Floor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Floor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Floor) => Boolean): Floor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Floor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Floor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Floor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Floor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Floor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Floor, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Floor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Floor, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Floor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.Floor.simplify", "link" : "smile\/cas\/Floor.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.Floor.apply", "link" : "smile\/cas\/Floor.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Floor.toString", "link" : "smile\/cas\/Floor.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Floor#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Floor.x", "link" : "smile\/cas\/Floor.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Floor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/Floor.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/Floor.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/Floor.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/Floor.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/Floor.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/Floor.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/Floor.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/Floor.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/Floor.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/Floor.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/Floor.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/Floor.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Floor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Floor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Floor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Floor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Floor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Floor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Floor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Floor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Floor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Floor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Floor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Floor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Floor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Floor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Floor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Floor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Floor.html", "kind" : "case class"}, {"name" : "smile.cas.GradientVector", "shortDescription" : "The derivative of a scalar y with respect to a vector x.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/GradientVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GradientVector) => Boolean, msg: => Any): GradientVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/GradientVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GradientVector) => Boolean): GradientVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/GradientVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): GradientVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/GradientVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GradientVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/GradientVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GradientVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/GradientVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GradientVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/GradientVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.GradientVector.apply", "link" : "smile\/cas\/GradientVector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.GradientVector.d", "link" : "smile\/cas\/GradientVector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.GradientVector.d", "link" : "smile\/cas\/GradientVector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.GradientVector.size", "link" : "smile\/cas\/GradientVector.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.GradientVector.toString", "link" : "smile\/cas\/GradientVector.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.GradientVector#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": VectorVar", "member" : "smile.cas.GradientVector.x", "link" : "smile\/cas\/GradientVector.html#x:smile.cas.VectorVar", "kind" : "val"}, {"label" : "y", "tail" : ": Var", "member" : "smile.cas.GradientVector.y", "link" : "smile\/cas\/GradientVector.html#y:smile.cas.Var", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/GradientVector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/GradientVector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/GradientVector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/GradientVector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/GradientVector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/GradientVector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/GradientVector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/GradientVector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/GradientVector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vector.simplify", "link" : "smile\/cas\/GradientVector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/GradientVector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/GradientVector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/GradientVector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/GradientVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/GradientVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/GradientVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/GradientVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/GradientVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/GradientVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/GradientVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/GradientVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/GradientVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/GradientVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/GradientVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/GradientVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/GradientVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/GradientVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/GradientVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/GradientVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/GradientVector.html", "kind" : "case class"}, {"name" : "smile.cas.IdentityMatrix", "shortDescription" : "Identity matrix", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IdentityMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdentityMatrix) => Boolean, msg: => Any): IdentityMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IdentityMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdentityMatrix) => Boolean): IdentityMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IdentityMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IdentityMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IdentityMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IdentityMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IdentityMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IdentityMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IdentityMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IdentityMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IdentityMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.IdentityMatrix.apply", "link" : "smile\/cas\/IdentityMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.IdentityMatrix.d", "link" : "smile\/cas\/IdentityMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IdentityMatrix.toString", "link" : "smile\/cas\/IdentityMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IdentityMatrix#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": (IntScalar, IntScalar)", "member" : "smile.cas.IdentityMatrix.size", "link" : "smile\/cas\/IdentityMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IdentityMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/IdentityMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/IdentityMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/IdentityMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/IdentityMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/IdentityMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/IdentityMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/IdentityMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/IdentityMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/IdentityMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/IdentityMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/IdentityMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/IdentityMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/IdentityMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IdentityMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IdentityMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IdentityMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IdentityMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IdentityMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IdentityMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IdentityMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IdentityMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IdentityMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IdentityMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IdentityMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IdentityMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IdentityMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IdentityMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IdentityMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IdentityMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IdentityMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.InnerProduct", "shortDescription" : "Inner product (x * y)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/InnerProduct.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InnerProduct) => Boolean, msg: => Any): InnerProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/InnerProduct.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InnerProduct) => Boolean): InnerProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/InnerProduct.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): InnerProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/InnerProduct.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InnerProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/InnerProduct.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InnerProduct, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/InnerProduct.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InnerProduct, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/InnerProduct.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.InnerProduct.simplify", "link" : "smile\/cas\/InnerProduct.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.InnerProduct.d", "link" : "smile\/cas\/InnerProduct.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.InnerProduct.d", "link" : "smile\/cas\/InnerProduct.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.InnerProduct.apply", "link" : "smile\/cas\/InnerProduct.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.InnerProduct.toString", "link" : "smile\/cas\/InnerProduct.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.InnerProduct#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Vector", "member" : "smile.cas.InnerProduct.y", "link" : "smile\/cas\/InnerProduct.html#y:smile.cas.Vector", "kind" : "val"}, {"label" : "x", "tail" : ": Vector", "member" : "smile.cas.InnerProduct.x", "link" : "smile\/cas\/InnerProduct.html#x:smile.cas.Vector", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/InnerProduct.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/InnerProduct.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/InnerProduct.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/InnerProduct.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/InnerProduct.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/InnerProduct.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/InnerProduct.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/InnerProduct.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/InnerProduct.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/InnerProduct.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/InnerProduct.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/InnerProduct.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/InnerProduct.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/InnerProduct.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/InnerProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/InnerProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/InnerProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/InnerProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/InnerProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/InnerProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/InnerProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/InnerProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/InnerProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/InnerProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/InnerProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/InnerProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/InnerProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/InnerProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/InnerProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/InnerProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/InnerProduct.html", "kind" : "case class"}, {"name" : "smile.cas.Int2Scalar", "shortDescription" : "Explicit conversion of int to float.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Int2Scalar.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Int2Scalar) => Boolean, msg: => Any): Int2Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Int2Scalar.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Int2Scalar) => Boolean): Int2Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Int2Scalar.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Int2Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Int2Scalar.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Int2Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Int2Scalar.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Int2Scalar, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Int2Scalar.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Int2Scalar, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Int2Scalar.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Int2Scalar.d", "link" : "smile\/cas\/Int2Scalar.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Int2Scalar.d", "link" : "smile\/cas\/Int2Scalar.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Int2Scalar.simplify", "link" : "smile\/cas\/Int2Scalar.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Int2Scalar.apply", "link" : "smile\/cas\/Int2Scalar.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Int2Scalar.toString", "link" : "smile\/cas\/Int2Scalar.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Int2Scalar#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.Int2Scalar.x", "link" : "smile\/cas\/Int2Scalar.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Int2Scalar.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Int2Scalar.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Int2Scalar.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Int2Scalar.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Int2Scalar.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Int2Scalar.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Int2Scalar.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Int2Scalar.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Int2Scalar.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Int2Scalar.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Int2Scalar.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Int2Scalar.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Int2Scalar.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Int2Scalar.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Int2Scalar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Int2Scalar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Int2Scalar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Int2Scalar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Int2Scalar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Int2Scalar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Int2Scalar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Int2Scalar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Int2Scalar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Int2Scalar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Int2Scalar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Int2Scalar.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Int2Scalar.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Int2Scalar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Int2Scalar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Int2Scalar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Int2Scalar.html", "kind" : "case class"}, {"name" : "smile.cas.IntAdd", "shortDescription" : "x + y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntAdd.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntAdd) => Boolean, msg: => Any): IntAdd", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntAdd.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntAdd) => Boolean): IntAdd", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntAdd.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntAdd", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntAdd.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntAdd", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntAdd.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntAdd, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntAdd.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntAdd, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntAdd.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntAdd.simplify", "link" : "smile\/cas\/IntAdd.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntAdd.apply", "link" : "smile\/cas\/IntAdd.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntAdd.toString", "link" : "smile\/cas\/IntAdd.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntAdd#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": IntScalar", "member" : "smile.cas.IntAdd.y", "link" : "smile\/cas\/IntAdd.html#y:smile.cas.IntScalar", "kind" : "val"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.IntAdd.x", "link" : "smile\/cas\/IntAdd.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntAdd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntAdd.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntAdd.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntAdd.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntAdd.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntAdd.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntAdd.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntAdd.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntAdd.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntAdd.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntAdd.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntAdd.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntAdd.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntAdd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntAdd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntAdd.html", "kind" : "case class"}, {"name" : "smile.cas.IntConst", "shortDescription" : "Integer constant value.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntConst.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntConst) => Boolean, msg: => Any): IntConst", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntConst.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntConst) => Boolean): IntConst", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntConst.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntConst", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntConst.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntConst", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntConst.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntConst, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntConst.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntConst, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntConst.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntConst.apply", "link" : "smile\/cas\/IntConst.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntConst.toString", "link" : "smile\/cas\/IntConst.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntConst#<init>", "error" : "unsupported entity"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.IntConst.symbol", "link" : "smile\/cas\/IntConst.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntConst.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntConst.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntConst.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntConst.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntConst.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntConst.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntConst.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntConst.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntConst.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.simplify", "link" : "smile\/cas\/IntConst.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntConst.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntConst.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntConst.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntConst.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntConst.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntConst.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntConst.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntConst.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntConst.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntConst.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntConst.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntConst.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntConst.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntConst.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntConst.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntConst.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntConst.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntConst.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntConst.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntConst.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntConst.html", "kind" : "case class"}, {"name" : "smile.cas.IntDiv", "shortDescription" : "x \/ y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntDiv.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntDiv) => Boolean, msg: => Any): IntDiv", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntDiv.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntDiv) => Boolean): IntDiv", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntDiv.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntDiv", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntDiv.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntDiv", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntDiv.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntDiv, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntDiv.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntDiv, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntDiv.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntDiv.simplify", "link" : "smile\/cas\/IntDiv.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntDiv.apply", "link" : "smile\/cas\/IntDiv.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntDiv.toString", "link" : "smile\/cas\/IntDiv.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntDiv#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": IntScalar", "member" : "smile.cas.IntDiv.y", "link" : "smile\/cas\/IntDiv.html#y:smile.cas.IntScalar", "kind" : "val"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.IntDiv.x", "link" : "smile\/cas\/IntDiv.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntDiv.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntDiv.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntDiv.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntDiv.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntDiv.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntDiv.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntDiv.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntDiv.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntDiv.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntDiv.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntDiv.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntDiv.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntDiv.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntDiv.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntDiv.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntDiv.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntDiv.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntDiv.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntDiv.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntDiv.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntDiv.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntDiv.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntDiv.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntDiv.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntDiv.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntDiv.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntDiv.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntDiv.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntDiv.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntDiv.html", "kind" : "case class"}, {"name" : "smile.cas.IntMul", "shortDescription" : "x * y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntMul.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntMul) => Boolean, msg: => Any): IntMul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntMul.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntMul) => Boolean): IntMul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntMul.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntMul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntMul.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntMul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntMul.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntMul, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntMul.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntMul, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntMul.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntMul.simplify", "link" : "smile\/cas\/IntMul.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntMul.apply", "link" : "smile\/cas\/IntMul.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntMul.toString", "link" : "smile\/cas\/IntMul.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntMul#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": IntScalar", "member" : "smile.cas.IntMul.y", "link" : "smile\/cas\/IntMul.html#y:smile.cas.IntScalar", "kind" : "val"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.IntMul.x", "link" : "smile\/cas\/IntMul.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntMul.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntMul.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntMul.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntMul.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntMul.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntMul.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntMul.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntMul.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntMul.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntMul.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntMul.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntMul.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntMul.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntMul.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntMul.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntMul.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntMul.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntMul.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntMul.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntMul.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntMul.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntMul.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntMul.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntMul.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntMul.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntMul.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntMul.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntMul.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntMul.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntMul.html", "kind" : "case class"}, {"name" : "smile.cas.IntNeg", "shortDescription" : "-x", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntNeg.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntNeg) => Boolean, msg: => Any): IntNeg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntNeg.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntNeg) => Boolean): IntNeg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntNeg.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntNeg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntNeg.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntNeg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntNeg.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntNeg, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntNeg.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntNeg, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntNeg.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntNeg.simplify", "link" : "smile\/cas\/IntNeg.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntNeg.apply", "link" : "smile\/cas\/IntNeg.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntNeg.toString", "link" : "smile\/cas\/IntNeg.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntNeg#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.IntNeg.x", "link" : "smile\/cas\/IntNeg.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntNeg.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntNeg.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntNeg.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntNeg.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntNeg.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntNeg.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntNeg.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntNeg.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntNeg.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntNeg.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntNeg.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntNeg.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntNeg.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntNeg.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntNeg.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntNeg.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntNeg.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntNeg.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntNeg.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntNeg.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntNeg.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntNeg.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntNeg.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntNeg.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntNeg.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntNeg.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntNeg.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntNeg.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntNeg.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntNeg.html", "kind" : "case class"}, {"name" : "smile.cas.IntPower", "shortDescription" : "x ** y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntPower.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntPower) => Boolean, msg: => Any): IntPower", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntPower.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntPower) => Boolean): IntPower", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntPower.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntPower", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntPower.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntPower", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntPower.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntPower, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntPower.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntPower, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntPower.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntPower.simplify", "link" : "smile\/cas\/IntPower.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntPower.apply", "link" : "smile\/cas\/IntPower.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntPower.toString", "link" : "smile\/cas\/IntPower.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntPower#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": IntScalar", "member" : "smile.cas.IntPower.y", "link" : "smile\/cas\/IntPower.html#y:smile.cas.IntScalar", "kind" : "val"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.IntPower.x", "link" : "smile\/cas\/IntPower.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntPower.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntPower.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntPower.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntPower.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntPower.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntPower.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntPower.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntPower.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntPower.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntPower.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntPower.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntPower.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntPower.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntPower.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntPower.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntPower.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntPower.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntPower.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntPower.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntPower.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntPower.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntPower.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntPower.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntPower.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntPower.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntPower.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntPower.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntPower.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntPower.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntPower.html", "kind" : "case class"}, {"name" : "smile.cas.IntScalar", "trait" : "smile\/cas\/IntScalar.html", "kind" : "trait", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntScalar.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntScalar) => Boolean, msg: => Any): IntScalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntScalar.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntScalar) => Boolean): IntScalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntScalar.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntScalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntScalar.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntScalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntScalar.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntScalar, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntScalar.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntScalar, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntScalar.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntScalar.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntScalar.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntScalar.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntScalar.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntScalar.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntScalar.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntScalar.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntScalar.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.simplify", "link" : "smile\/cas\/IntScalar.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntScalar.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntScalar.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntScalar.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntScalar.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntScalar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntScalar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntScalar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntScalar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntScalar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntScalar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntScalar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntScalar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntScalar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntScalar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntScalar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntScalar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smile\/cas\/IntScalar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntScalar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "smile\/cas\/IntScalar.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smile\/cas\/IntScalar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntScalar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntScalar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntScalar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntScalar.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "abstract def"}], "shortDescription" : "Scalar: rank-0 tensor."}, {"name" : "smile.cas.IntSub", "shortDescription" : "x - y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntSub.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntSub) => Boolean, msg: => Any): IntSub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntSub.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntSub) => Boolean): IntSub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntSub.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntSub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntSub.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntSub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntSub.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntSub, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntSub.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntSub, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntSub.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntSub.simplify", "link" : "smile\/cas\/IntSub.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntSub.apply", "link" : "smile\/cas\/IntSub.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntSub.toString", "link" : "smile\/cas\/IntSub.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntSub#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": IntScalar", "member" : "smile.cas.IntSub.y", "link" : "smile\/cas\/IntSub.html#y:smile.cas.IntScalar", "kind" : "val"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.IntSub.x", "link" : "smile\/cas\/IntSub.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntSub.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntSub.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntSub.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntSub.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntSub.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntSub.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntSub.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntSub.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntSub.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntSub.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntSub.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntSub.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntSub.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntSub.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntSub.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntSub.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntSub.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntSub.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntSub.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntSub.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntSub.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntSub.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntSub.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntSub.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntSub.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntSub.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntSub.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntSub.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntSub.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntSub.html", "kind" : "case class"}, {"name" : "smile.cas.IntVal", "shortDescription" : "Integer scalar value.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntVal.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntVal) => Boolean, msg: => Any): IntVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVal.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntVal) => Boolean): IntVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVal.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVal.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVal.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntVal, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntVal.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntVal, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntVal.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntVal", "member" : "smile.cas.IntVal.apply", "link" : "smile\/cas\/IntVal.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntVal", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntVal.toScalar", "link" : "smile\/cas\/IntVal.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntVal.toString", "link" : "smile\/cas\/IntVal.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntVal#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Int", "member" : "smile.cas.IntVal.x", "link" : "smile\/cas\/IntVal.html#x:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntVal.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntVal.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntVal.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntVal.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntVal.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntVal.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntVal.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntVal.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntVal.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.simplify", "link" : "smile\/cas\/IntVal.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntVal.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntVal.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntVal.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntVal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntVal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntVal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntVal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntVal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntVal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntVal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntVal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntVal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntVal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntVal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntVal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntVal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntVal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntVal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntVal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntVal.html", "kind" : "case class"}, {"name" : "smile.cas.IntVar", "shortDescription" : "Integer scalar variable", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/IntVar.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntVar) => Boolean, msg: => Any): IntVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVar.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntVar) => Boolean): IntVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVar.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): IntVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVar.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/IntVar.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntVar, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/IntVar.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntVar, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/IntVar.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.IntVar.apply", "link" : "smile\/cas\/IntVar.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.IntVar.toString", "link" : "smile\/cas\/IntVar.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.IntVar#<init>", "error" : "unsupported entity"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.IntVar.symbol", "link" : "smile\/cas\/IntVar.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/IntVar.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/IntVar.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/IntVar.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/IntVar.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/IntVar.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/IntVar.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/IntVar.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/IntVar.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/IntVar.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.simplify", "link" : "smile\/cas\/IntVar.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/IntVar.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/IntVar.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/IntVar.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/IntVar.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/IntVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/IntVar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/IntVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/IntVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/IntVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/IntVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/IntVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntVar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/IntVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/IntVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/IntVar.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/IntVar.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/IntVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/IntVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/IntVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/IntVar.html", "kind" : "case class"}, {"name" : "smile.cas.Log", "shortDescription" : "log(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Log.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Log) => Boolean, msg: => Any): Log", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Log.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Log) => Boolean): Log", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Log.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Log", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Log.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Log", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Log.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Log, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Log.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Log, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Log.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Log.simplify", "link" : "smile\/cas\/Log.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Log.d", "link" : "smile\/cas\/Log.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Log.d", "link" : "smile\/cas\/Log.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Log.apply", "link" : "smile\/cas\/Log.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Log.toString", "link" : "smile\/cas\/Log.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Log#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Log.x", "link" : "smile\/cas\/Log.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Log.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Log.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Log.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Log.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Log.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Log.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Log.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Log.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Log.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Log.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Log.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Log.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Log.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Log.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Log.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Log.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Log.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Log.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Log.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Log.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Log.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Log.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Log.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Log.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Log.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Log.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Log.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Log.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Log.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Log.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Log.html", "kind" : "case class"}, {"name" : "smile.cas.Matrix", "trait" : "smile\/cas\/Matrix.html", "kind" : "trait", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Matrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Matrix) => Boolean, msg: => Any): Matrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Matrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Matrix) => Boolean): Matrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Matrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Matrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Matrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Matrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Matrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Matrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Matrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Matrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Matrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/Matrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/Matrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/Matrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/Matrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/Matrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/Matrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/Matrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/Matrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/Matrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/Matrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/Matrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/Matrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/Matrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Matrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Matrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Matrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Matrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Matrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Matrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Matrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Matrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Matrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Matrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Matrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Matrix.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smile\/cas\/Matrix.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Matrix.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "smile\/cas\/Matrix.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smile\/cas\/Matrix.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Matrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Matrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Matrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/Matrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "abstract def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.Matrix.d", "link" : "smile\/cas\/Matrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.Matrix.size", "link" : "smile\/cas\/Matrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "abstract def"}], "shortDescription" : "Matrix: rank-2 tensor."}, {"name" : "smile.cas.MatrixInverse", "shortDescription" : "inv(A)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/MatrixInverse.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixInverse) => Boolean, msg: => Any): MatrixInverse", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixInverse.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixInverse) => Boolean): MatrixInverse", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixInverse.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MatrixInverse", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixInverse.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MatrixInverse", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixInverse.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MatrixInverse, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/MatrixInverse.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MatrixInverse, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/MatrixInverse.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.MatrixInverse.d", "link" : "smile\/cas\/MatrixInverse.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.MatrixInverse.apply", "link" : "smile\/cas\/MatrixInverse.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.MatrixInverse.size", "link" : "smile\/cas\/MatrixInverse.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.MatrixInverse.toString", "link" : "smile\/cas\/MatrixInverse.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.MatrixInverse#<init>", "error" : "unsupported entity"}, {"label" : "A", "tail" : ": Matrix", "member" : "smile.cas.MatrixInverse.A", "link" : "smile\/cas\/MatrixInverse.html#A:smile.cas.Matrix", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/MatrixInverse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/MatrixInverse.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/MatrixInverse.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/MatrixInverse.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/MatrixInverse.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixInverse.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixInverse.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixInverse.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/MatrixInverse.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/MatrixInverse.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/MatrixInverse.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/MatrixInverse.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/MatrixInverse.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/MatrixInverse.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/MatrixInverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/MatrixInverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/MatrixInverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/MatrixInverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/MatrixInverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/MatrixInverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/MatrixInverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixInverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixInverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixInverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/MatrixInverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/MatrixInverse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/MatrixInverse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/MatrixInverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/MatrixInverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/MatrixInverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/MatrixInverse.html", "kind" : "case class"}, {"name" : "smile.cas.MatrixProduct", "shortDescription" : "Matrix multiplication (A * B)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/MatrixProduct.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixProduct) => Boolean, msg: => Any): MatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixProduct.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixProduct) => Boolean): MatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixProduct.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixProduct.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixProduct.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MatrixProduct, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/MatrixProduct.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MatrixProduct, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/MatrixProduct.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.MatrixProduct.simplify", "link" : "smile\/cas\/MatrixProduct.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.MatrixProduct.d", "link" : "smile\/cas\/MatrixProduct.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.MatrixProduct.apply", "link" : "smile\/cas\/MatrixProduct.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.MatrixProduct.size", "link" : "smile\/cas\/MatrixProduct.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.MatrixProduct.toString", "link" : "smile\/cas\/MatrixProduct.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.MatrixProduct#<init>", "error" : "unsupported entity"}, {"label" : "B", "tail" : ": Matrix", "member" : "smile.cas.MatrixProduct.B", "link" : "smile\/cas\/MatrixProduct.html#B:smile.cas.Matrix", "kind" : "val"}, {"label" : "A", "tail" : ": Matrix", "member" : "smile.cas.MatrixProduct.A", "link" : "smile\/cas\/MatrixProduct.html#A:smile.cas.Matrix", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/MatrixProduct.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/MatrixProduct.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/MatrixProduct.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/MatrixProduct.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/MatrixProduct.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixProduct.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixProduct.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixProduct.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/MatrixProduct.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/MatrixProduct.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/MatrixProduct.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/MatrixProduct.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/MatrixProduct.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/MatrixProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/MatrixProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/MatrixProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/MatrixProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/MatrixProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/MatrixProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/MatrixProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/MatrixProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/MatrixProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/MatrixProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/MatrixProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/MatrixProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/MatrixProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/MatrixProduct.html", "kind" : "case class"}, {"name" : "smile.cas.MatrixTranspose", "shortDescription" : "A'", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/MatrixTranspose.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixTranspose) => Boolean, msg: => Any): MatrixTranspose", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixTranspose.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixTranspose) => Boolean): MatrixTranspose", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixTranspose.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MatrixTranspose", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixTranspose.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MatrixTranspose", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixTranspose.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MatrixTranspose, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/MatrixTranspose.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MatrixTranspose, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/MatrixTranspose.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.MatrixTranspose.simplify", "link" : "smile\/cas\/MatrixTranspose.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.MatrixTranspose.d", "link" : "smile\/cas\/MatrixTranspose.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.MatrixTranspose.apply", "link" : "smile\/cas\/MatrixTranspose.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.MatrixTranspose.size", "link" : "smile\/cas\/MatrixTranspose.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.MatrixTranspose.toString", "link" : "smile\/cas\/MatrixTranspose.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.MatrixTranspose#<init>", "error" : "unsupported entity"}, {"label" : "A", "tail" : ": Matrix", "member" : "smile.cas.MatrixTranspose.A", "link" : "smile\/cas\/MatrixTranspose.html#A:smile.cas.Matrix", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/MatrixTranspose.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/MatrixTranspose.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/MatrixTranspose.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/MatrixTranspose.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/MatrixTranspose.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixTranspose.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixTranspose.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixTranspose.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/MatrixTranspose.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/MatrixTranspose.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/MatrixTranspose.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/MatrixTranspose.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/MatrixTranspose.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/MatrixTranspose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/MatrixTranspose.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/MatrixTranspose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/MatrixTranspose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/MatrixTranspose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/MatrixTranspose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/MatrixTranspose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixTranspose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixTranspose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixTranspose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/MatrixTranspose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/MatrixTranspose.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/MatrixTranspose.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/MatrixTranspose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/MatrixTranspose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/MatrixTranspose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/MatrixTranspose.html", "kind" : "case class"}, {"name" : "smile.cas.MatrixVar", "shortDescription" : "Abstract matrix variable", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/MatrixVar.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixVar) => Boolean, msg: => Any): MatrixVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVar.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixVar) => Boolean): MatrixVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVar.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MatrixVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVar.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MatrixVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVar.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MatrixVar, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/MatrixVar.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MatrixVar, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/MatrixVar.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.MatrixVar.apply", "link" : "smile\/cas\/MatrixVar.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.MatrixVar.d", "link" : "smile\/cas\/MatrixVar.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.MatrixVar.toString", "link" : "smile\/cas\/MatrixVar.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.MatrixVar#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": (IntScalar, IntScalar)", "member" : "smile.cas.MatrixVar.size", "link" : "smile\/cas\/MatrixVar.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "val"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.MatrixVar.symbol", "link" : "smile\/cas\/MatrixVar.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/MatrixVar.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/MatrixVar.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/MatrixVar.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/MatrixVar.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/MatrixVar.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixVar.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixVar.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/MatrixVar.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/MatrixVar.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/MatrixVar.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/MatrixVar.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/MatrixVar.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/MatrixVar.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/MatrixVar.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/MatrixVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/MatrixVar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/MatrixVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/MatrixVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/MatrixVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/MatrixVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/MatrixVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixVar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/MatrixVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/MatrixVar.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/MatrixVar.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/MatrixVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/MatrixVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/MatrixVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/MatrixVar.html", "kind" : "case class"}, {"name" : "smile.cas.MatrixVectorProduct", "shortDescription" : "Matrix vector multiplication (A * x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/MatrixVectorProduct.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixVectorProduct) => Boolean, msg: => Any): MatrixVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVectorProduct.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MatrixVectorProduct) => Boolean): MatrixVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVectorProduct.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MatrixVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVectorProduct.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MatrixVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/MatrixVectorProduct.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MatrixVectorProduct, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/MatrixVectorProduct.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MatrixVectorProduct, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/MatrixVectorProduct.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.MatrixVectorProduct.simplify", "link" : "smile\/cas\/MatrixVectorProduct.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.MatrixVectorProduct.d", "link" : "smile\/cas\/MatrixVectorProduct.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.MatrixVectorProduct.d", "link" : "smile\/cas\/MatrixVectorProduct.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.MatrixVectorProduct.apply", "link" : "smile\/cas\/MatrixVectorProduct.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.MatrixVectorProduct.size", "link" : "smile\/cas\/MatrixVectorProduct.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.MatrixVectorProduct.toString", "link" : "smile\/cas\/MatrixVectorProduct.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.MatrixVectorProduct#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Vector", "member" : "smile.cas.MatrixVectorProduct.x", "link" : "smile\/cas\/MatrixVectorProduct.html#x:smile.cas.Vector", "kind" : "val"}, {"label" : "A", "tail" : ": Matrix", "member" : "smile.cas.MatrixVectorProduct.A", "link" : "smile\/cas\/MatrixVectorProduct.html#A:smile.cas.Matrix", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/MatrixVectorProduct.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/MatrixVectorProduct.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/MatrixVectorProduct.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/MatrixVectorProduct.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/MatrixVectorProduct.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/MatrixVectorProduct.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/MatrixVectorProduct.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/MatrixVectorProduct.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/MatrixVectorProduct.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/MatrixVectorProduct.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/MatrixVectorProduct.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/MatrixVectorProduct.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/MatrixVectorProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/MatrixVectorProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/MatrixVectorProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/MatrixVectorProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/MatrixVectorProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/MatrixVectorProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/MatrixVectorProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixVectorProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixVectorProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/MatrixVectorProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/MatrixVectorProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/MatrixVectorProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/MatrixVectorProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/MatrixVectorProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/MatrixVectorProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/MatrixVectorProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/MatrixVectorProduct.html", "kind" : "case class"}, {"name" : "smile.cas.Mod", "shortDescription" : "x % y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Mod.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Mod) => Boolean, msg: => Any): Mod", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mod.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Mod) => Boolean): Mod", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mod.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Mod", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mod.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Mod", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mod.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Mod, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Mod.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Mod, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Mod.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.Mod.simplify", "link" : "smile\/cas\/Mod.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.Mod.apply", "link" : "smile\/cas\/Mod.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Mod.toString", "link" : "smile\/cas\/Mod.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Mod#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": IntScalar", "member" : "smile.cas.Mod.y", "link" : "smile\/cas\/Mod.html#y:smile.cas.IntScalar", "kind" : "val"}, {"label" : "x", "tail" : ": IntScalar", "member" : "smile.cas.Mod.x", "link" : "smile\/cas\/Mod.html#x:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Mod.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/Mod.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/Mod.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/Mod.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/Mod.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/Mod.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/Mod.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/Mod.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/Mod.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/Mod.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/Mod.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/Mod.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/Mod.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Mod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Mod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Mod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Mod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Mod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Mod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Mod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Mod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Mod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Mod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Mod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Mod.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Mod.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Mod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Mod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Mod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Mod.html", "kind" : "case class"}, {"name" : "smile.cas.Mul", "shortDescription" : "x * y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Mul.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Mul) => Boolean, msg: => Any): Mul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mul.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Mul) => Boolean): Mul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mul.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Mul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mul.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Mul", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Mul.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Mul, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Mul.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Mul, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Mul.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Mul.simplify", "link" : "smile\/cas\/Mul.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Mul.d", "link" : "smile\/cas\/Mul.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Mul.d", "link" : "smile\/cas\/Mul.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Mul.apply", "link" : "smile\/cas\/Mul.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Mul.toString", "link" : "smile\/cas\/Mul.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Mul#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Scalar", "member" : "smile.cas.Mul.y", "link" : "smile\/cas\/Mul.html#y:smile.cas.Scalar", "kind" : "val"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Mul.x", "link" : "smile\/cas\/Mul.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Mul.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Mul.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Mul.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Mul.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Mul.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Mul.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Mul.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Mul.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Mul.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Mul.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Mul.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Mul.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Mul.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Mul.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Mul.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Mul.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Mul.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Mul.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Mul.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Mul.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Mul.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Mul.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Mul.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Mul.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Mul.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Mul.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Mul.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Mul.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Mul.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Mul.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Mul.html", "kind" : "case class"}, {"name" : "smile.cas.Neg", "shortDescription" : "-x", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Neg.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Neg) => Boolean, msg: => Any): Neg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Neg.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Neg) => Boolean): Neg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Neg.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Neg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Neg.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Neg", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Neg.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Neg, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Neg.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Neg, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Neg.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Neg.simplify", "link" : "smile\/cas\/Neg.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Neg.d", "link" : "smile\/cas\/Neg.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Neg.d", "link" : "smile\/cas\/Neg.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Neg.apply", "link" : "smile\/cas\/Neg.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Neg.toString", "link" : "smile\/cas\/Neg.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Neg#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Neg.x", "link" : "smile\/cas\/Neg.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Neg.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Neg.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Neg.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Neg.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Neg.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Neg.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Neg.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Neg.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Neg.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Neg.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Neg.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Neg.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Neg.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Neg.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Neg.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Neg.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Neg.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Neg.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Neg.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Neg.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Neg.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Neg.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Neg.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Neg.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Neg.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Neg.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Neg.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Neg.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Neg.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Neg.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Neg.html", "kind" : "case class"}, {"name" : "smile.cas.NegMatrix", "shortDescription" : "-A", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/NegMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NegMatrix) => Boolean, msg: => Any): NegMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NegMatrix) => Boolean): NegMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): NegMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NegMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NegMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/NegMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NegMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/NegMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.NegMatrix.simplify", "link" : "smile\/cas\/NegMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.NegMatrix.d", "link" : "smile\/cas\/NegMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.NegMatrix.apply", "link" : "smile\/cas\/NegMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.NegMatrix.size", "link" : "smile\/cas\/NegMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.NegMatrix.toString", "link" : "smile\/cas\/NegMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.NegMatrix#<init>", "error" : "unsupported entity"}, {"label" : "A", "tail" : ": Matrix", "member" : "smile.cas.NegMatrix.A", "link" : "smile\/cas\/NegMatrix.html#A:smile.cas.Matrix", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/NegMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/NegMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/NegMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/NegMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/NegMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/NegMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/NegMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/NegMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/NegMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/NegMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/NegMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/NegMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/NegMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/NegMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/NegMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/NegMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/NegMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/NegMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/NegMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/NegMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/NegMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/NegMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/NegMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/NegMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/NegMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/NegMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/NegMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/NegMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/NegMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/NegMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.NegVector", "shortDescription" : "-x", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/NegVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NegVector) => Boolean, msg: => Any): NegVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NegVector) => Boolean): NegVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): NegVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NegVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/NegVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NegVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/NegVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NegVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/NegVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.NegVector.simplify", "link" : "smile\/cas\/NegVector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.NegVector.d", "link" : "smile\/cas\/NegVector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.NegVector.d", "link" : "smile\/cas\/NegVector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.NegVector.apply", "link" : "smile\/cas\/NegVector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.NegVector.size", "link" : "smile\/cas\/NegVector.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.NegVector.toString", "link" : "smile\/cas\/NegVector.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.NegVector#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Vector", "member" : "smile.cas.NegVector.x", "link" : "smile\/cas\/NegVector.html#x:smile.cas.Vector", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/NegVector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/NegVector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/NegVector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/NegVector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/NegVector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/NegVector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/NegVector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/NegVector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/NegVector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/NegVector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/NegVector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/NegVector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/NegVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/NegVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/NegVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/NegVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/NegVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/NegVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/NegVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/NegVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/NegVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/NegVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/NegVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/NegVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/NegVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/NegVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/NegVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/NegVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/NegVector.html", "kind" : "case class"}, {"name" : "smile.cas.OneMatrix", "shortDescription" : "Matrix of all 1's", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/OneMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OneMatrix) => Boolean, msg: => Any): OneMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OneMatrix) => Boolean): OneMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): OneMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): OneMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (OneMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/OneMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (OneMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/OneMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.OneMatrix.apply", "link" : "smile\/cas\/OneMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.OneMatrix.d", "link" : "smile\/cas\/OneMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.OneMatrix.toString", "link" : "smile\/cas\/OneMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.OneMatrix#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": (IntScalar, IntScalar)", "member" : "smile.cas.OneMatrix.size", "link" : "smile\/cas\/OneMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/OneMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/OneMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/OneMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/OneMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/OneMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/OneMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/OneMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/OneMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/OneMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/OneMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/OneMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/OneMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/OneMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/OneMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/OneMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/OneMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/OneMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/OneMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/OneMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/OneMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/OneMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OneMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OneMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OneMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/OneMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/OneMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/OneMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/OneMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/OneMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/OneMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/OneMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.OneVector", "shortDescription" : "Vector of all 1's", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/OneVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OneVector) => Boolean, msg: => Any): OneVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OneVector) => Boolean): OneVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): OneVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): OneVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OneVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (OneVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/OneVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (OneVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/OneVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.OneVector.apply", "link" : "smile\/cas\/OneVector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.OneVector.d", "link" : "smile\/cas\/OneVector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.OneVector.d", "link" : "smile\/cas\/OneVector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.OneVector.toString", "link" : "smile\/cas\/OneVector.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.OneVector#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": IntScalar", "member" : "smile.cas.OneVector.size", "link" : "smile\/cas\/OneVector.html#size:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/OneVector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/OneVector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/OneVector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/OneVector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/OneVector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/OneVector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/OneVector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/OneVector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/OneVector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vector.simplify", "link" : "smile\/cas\/OneVector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/OneVector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/OneVector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/OneVector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/OneVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/OneVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/OneVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/OneVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/OneVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/OneVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/OneVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OneVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OneVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OneVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/OneVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/OneVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/OneVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/OneVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/OneVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/OneVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/OneVector.html", "kind" : "case class"}, {"name" : "smile.cas.OuterProduct", "shortDescription" : "Outer product (x ** y)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/OuterProduct.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OuterProduct) => Boolean, msg: => Any): OuterProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OuterProduct.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OuterProduct) => Boolean): OuterProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OuterProduct.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): OuterProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OuterProduct.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): OuterProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/OuterProduct.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (OuterProduct, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/OuterProduct.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (OuterProduct, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/OuterProduct.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.OuterProduct.simplify", "link" : "smile\/cas\/OuterProduct.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.OuterProduct.d", "link" : "smile\/cas\/OuterProduct.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.OuterProduct.apply", "link" : "smile\/cas\/OuterProduct.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.OuterProduct.size", "link" : "smile\/cas\/OuterProduct.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.OuterProduct.toString", "link" : "smile\/cas\/OuterProduct.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.OuterProduct#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Vector", "member" : "smile.cas.OuterProduct.y", "link" : "smile\/cas\/OuterProduct.html#y:smile.cas.Vector", "kind" : "val"}, {"label" : "x", "tail" : ": Vector", "member" : "smile.cas.OuterProduct.x", "link" : "smile\/cas\/OuterProduct.html#x:smile.cas.Vector", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/OuterProduct.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/OuterProduct.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/OuterProduct.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/OuterProduct.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/OuterProduct.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/OuterProduct.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/OuterProduct.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/OuterProduct.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/OuterProduct.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/OuterProduct.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/OuterProduct.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/OuterProduct.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/OuterProduct.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/OuterProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/OuterProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/OuterProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/OuterProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/OuterProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/OuterProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/OuterProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OuterProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OuterProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/OuterProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/OuterProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/OuterProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/OuterProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/OuterProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/OuterProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/OuterProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/OuterProduct.html", "kind" : "case class"}, {"name" : "smile.cas.Power", "shortDescription" : "x ** y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Power.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Power) => Boolean, msg: => Any): Power", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Power.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Power) => Boolean): Power", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Power.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Power", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Power.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Power", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Power.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Power, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Power.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Power, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Power.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Power.simplify", "link" : "smile\/cas\/Power.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Power.d", "link" : "smile\/cas\/Power.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Power.d", "link" : "smile\/cas\/Power.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Power.apply", "link" : "smile\/cas\/Power.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Power.toString", "link" : "smile\/cas\/Power.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Power#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Scalar", "member" : "smile.cas.Power.y", "link" : "smile\/cas\/Power.html#y:smile.cas.Scalar", "kind" : "val"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Power.x", "link" : "smile\/cas\/Power.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Power.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Power.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Power.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Power.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Power.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Power.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Power.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Power.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Power.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Power.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Power.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Power.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Power.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Power.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Power.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Power.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Power.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Power.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Power.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Power.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Power.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Power.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Power.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Power.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Power.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Power.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Power.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Power.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Power.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Power.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Power.html", "kind" : "case class"}, {"name" : "smile.cas.Round", "shortDescription" : "round(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Round.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Round) => Boolean, msg: => Any): Round", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Round.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Round) => Boolean): Round", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Round.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Round", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Round.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Round", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Round.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Round, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Round.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Round, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Round.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): IntScalar", "member" : "smile.cas.Round.simplify", "link" : "smile\/cas\/Round.html#simplify:smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): IntScalar", "member" : "smile.cas.Round.apply", "link" : "smile\/cas\/Round.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Round.toString", "link" : "smile\/cas\/Round.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Round#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Round.x", "link" : "smile\/cas\/Round.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Round.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_-", "link" : "smile\/cas\/Round.html#unary_-:smile.cas.IntScalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): IntScalar", "member" : "smile.cas.IntScalar.unary_+", "link" : "smile\/cas\/Round.html#unary_+:smile.cas.IntScalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.**", "link" : "smile\/cas\/Round.html#**(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "%", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.%", "link" : "smile\/cas\/Round.html#%(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.\/", "link" : "smile\/cas\/Round.html#\/(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.*", "link" : "smile\/cas\/Round.html#*(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.-", "link" : "smile\/cas\/Round.html#-(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: IntScalar): IntScalar", "member" : "smile.cas.IntScalar.+", "link" : "smile\/cas\/Round.html#+(y:smile.cas.IntScalar):smile.cas.IntScalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): IntScalar", "member" : "smile.cas.IntScalar.apply", "link" : "smile\/cas\/Round.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.IntScalar", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar", "member" : "smile.cas.IntScalar.toScalar", "link" : "smile\/cas\/Round.html#toScalar:smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.IntScalar.shape", "link" : "smile\/cas\/Round.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.IntScalar.rank", "link" : "smile\/cas\/Round.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Round.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Round.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Round.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Round.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Round.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Round.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Round.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Round.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Round.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Round.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Round.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Round.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Round.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Round.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Round.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Round.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Round.html", "kind" : "case class"}, {"name" : "smile.cas.RowMatrix", "shortDescription" : "Row-wise matrix", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/RowMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RowMatrix) => Boolean, msg: => Any): RowMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/RowMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RowMatrix) => Boolean): RowMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/RowMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): RowMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/RowMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RowMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/RowMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RowMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/RowMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RowMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/RowMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.RowMatrix.simplify", "link" : "smile\/cas\/RowMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.RowMatrix.apply", "link" : "smile\/cas\/RowMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.RowMatrix.d", "link" : "smile\/cas\/RowMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.RowMatrix.size", "link" : "smile\/cas\/RowMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.RowMatrix.toString", "link" : "smile\/cas\/RowMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.RowMatrix#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Vector*", "member" : "smile.cas.RowMatrix.x", "link" : "smile\/cas\/RowMatrix.html#x:smile.cas.Vector*", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/RowMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/RowMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/RowMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/RowMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/RowMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/RowMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/RowMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/RowMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/RowMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/RowMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/RowMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/RowMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/RowMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/RowMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/RowMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/RowMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/RowMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/RowMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/RowMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/RowMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/RowMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/RowMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/RowMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/RowMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/RowMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/RowMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/RowMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/RowMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/RowMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/RowMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.Scalar", "trait" : "smile\/cas\/Scalar.html", "kind" : "trait", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Scalar.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Scalar) => Boolean, msg: => Any): Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Scalar.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Scalar) => Boolean): Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Scalar.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Scalar.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Scalar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Scalar.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Scalar, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Scalar.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Scalar, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Scalar.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Scalar.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Scalar.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Scalar.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Scalar.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Scalar.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Scalar.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Scalar.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Scalar.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Scalar.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Scalar.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.simplify", "link" : "smile\/cas\/Scalar.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Scalar.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Scalar.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Scalar.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Scalar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Scalar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Scalar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Scalar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Scalar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Scalar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Scalar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Scalar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Scalar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Scalar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Scalar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Scalar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smile\/cas\/Scalar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Scalar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "smile\/cas\/Scalar.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smile\/cas\/Scalar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Scalar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Scalar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Scalar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Scalar.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "abstract def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Scalar.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Scalar.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "abstract def"}], "shortDescription" : "Scalar: rank-0 tensor."}, {"name" : "smile.cas.ScalarMatrixProduct", "shortDescription" : "a * A", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ScalarMatrixProduct.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalarMatrixProduct) => Boolean, msg: => Any): ScalarMatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarMatrixProduct.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalarMatrixProduct) => Boolean): ScalarMatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarMatrixProduct.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ScalarMatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarMatrixProduct.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ScalarMatrixProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarMatrixProduct.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ScalarMatrixProduct, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ScalarMatrixProduct.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ScalarMatrixProduct, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ScalarMatrixProduct.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.ScalarMatrixProduct.simplify", "link" : "smile\/cas\/ScalarMatrixProduct.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.ScalarMatrixProduct.d", "link" : "smile\/cas\/ScalarMatrixProduct.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.ScalarMatrixProduct.apply", "link" : "smile\/cas\/ScalarMatrixProduct.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.ScalarMatrixProduct.size", "link" : "smile\/cas\/ScalarMatrixProduct.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ScalarMatrixProduct.toString", "link" : "smile\/cas\/ScalarMatrixProduct.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ScalarMatrixProduct#<init>", "error" : "unsupported entity"}, {"label" : "A", "tail" : ": Matrix", "member" : "smile.cas.ScalarMatrixProduct.A", "link" : "smile\/cas\/ScalarMatrixProduct.html#A:smile.cas.Matrix", "kind" : "val"}, {"label" : "a", "tail" : ": Scalar", "member" : "smile.cas.ScalarMatrixProduct.a", "link" : "smile\/cas\/ScalarMatrixProduct.html#a:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ScalarMatrixProduct.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/ScalarMatrixProduct.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/ScalarMatrixProduct.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/ScalarMatrixProduct.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/ScalarMatrixProduct.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ScalarMatrixProduct.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ScalarMatrixProduct.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ScalarMatrixProduct.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/ScalarMatrixProduct.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/ScalarMatrixProduct.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/ScalarMatrixProduct.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/ScalarMatrixProduct.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/ScalarMatrixProduct.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ScalarMatrixProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ScalarMatrixProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ScalarMatrixProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ScalarMatrixProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ScalarMatrixProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ScalarMatrixProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ScalarMatrixProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ScalarMatrixProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ScalarMatrixProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ScalarMatrixProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ScalarMatrixProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ScalarMatrixProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ScalarMatrixProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ScalarMatrixProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ScalarMatrixProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ScalarMatrixProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ScalarMatrixProduct.html", "kind" : "case class"}, {"name" : "smile.cas.ScalarVectorProduct", "shortDescription" : "a * x", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ScalarVectorProduct.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalarVectorProduct) => Boolean, msg: => Any): ScalarVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarVectorProduct.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalarVectorProduct) => Boolean): ScalarVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarVectorProduct.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ScalarVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarVectorProduct.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ScalarVectorProduct", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ScalarVectorProduct.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ScalarVectorProduct, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ScalarVectorProduct.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ScalarVectorProduct, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ScalarVectorProduct.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.ScalarVectorProduct.simplify", "link" : "smile\/cas\/ScalarVectorProduct.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.ScalarVectorProduct.d", "link" : "smile\/cas\/ScalarVectorProduct.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.ScalarVectorProduct.d", "link" : "smile\/cas\/ScalarVectorProduct.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.ScalarVectorProduct.apply", "link" : "smile\/cas\/ScalarVectorProduct.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.ScalarVectorProduct.size", "link" : "smile\/cas\/ScalarVectorProduct.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ScalarVectorProduct.toString", "link" : "smile\/cas\/ScalarVectorProduct.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ScalarVectorProduct#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Vector", "member" : "smile.cas.ScalarVectorProduct.x", "link" : "smile\/cas\/ScalarVectorProduct.html#x:smile.cas.Vector", "kind" : "val"}, {"label" : "a", "tail" : ": Scalar", "member" : "smile.cas.ScalarVectorProduct.a", "link" : "smile\/cas\/ScalarVectorProduct.html#a:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ScalarVectorProduct.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/ScalarVectorProduct.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/ScalarVectorProduct.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/ScalarVectorProduct.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/ScalarVectorProduct.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/ScalarVectorProduct.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/ScalarVectorProduct.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/ScalarVectorProduct.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/ScalarVectorProduct.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/ScalarVectorProduct.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/ScalarVectorProduct.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/ScalarVectorProduct.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ScalarVectorProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ScalarVectorProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ScalarVectorProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ScalarVectorProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ScalarVectorProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ScalarVectorProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ScalarVectorProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ScalarVectorProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ScalarVectorProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ScalarVectorProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ScalarVectorProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ScalarVectorProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ScalarVectorProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ScalarVectorProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ScalarVectorProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ScalarVectorProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ScalarVectorProduct.html", "kind" : "case class"}, {"name" : "smile.cas.Sin", "shortDescription" : "sin(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Sin.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sin) => Boolean, msg: => Any): Sin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sin.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sin) => Boolean): Sin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sin.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Sin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sin.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Sin", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sin.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Sin, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Sin.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Sin, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Sin.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Sin.simplify", "link" : "smile\/cas\/Sin.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Sin.d", "link" : "smile\/cas\/Sin.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Sin.d", "link" : "smile\/cas\/Sin.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Sin.apply", "link" : "smile\/cas\/Sin.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Sin.toString", "link" : "smile\/cas\/Sin.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Sin#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Sin.x", "link" : "smile\/cas\/Sin.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Sin.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Sin.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Sin.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Sin.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Sin.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Sin.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Sin.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Sin.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Sin.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Sin.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Sin.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Sin.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Sin.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Sin.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Sin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Sin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Sin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Sin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Sin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Sin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Sin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Sin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Sin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Sin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Sin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Sin.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Sin.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Sin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Sin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Sin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Sin.html", "kind" : "case class"}, {"name" : "smile.cas.Sub", "shortDescription" : "x - y", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Sub.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sub) => Boolean, msg: => Any): Sub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sub.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sub) => Boolean): Sub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sub.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Sub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sub.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Sub", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Sub.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Sub, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Sub.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Sub, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Sub.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Sub.simplify", "link" : "smile\/cas\/Sub.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Sub.d", "link" : "smile\/cas\/Sub.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Sub.d", "link" : "smile\/cas\/Sub.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Sub.apply", "link" : "smile\/cas\/Sub.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Sub.toString", "link" : "smile\/cas\/Sub.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Sub#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Scalar", "member" : "smile.cas.Sub.y", "link" : "smile\/cas\/Sub.html#y:smile.cas.Scalar", "kind" : "val"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Sub.x", "link" : "smile\/cas\/Sub.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Sub.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Sub.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Sub.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Sub.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Sub.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Sub.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Sub.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Sub.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Sub.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Sub.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Sub.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Sub.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Sub.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Sub.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Sub.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Sub.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Sub.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Sub.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Sub.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Sub.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Sub.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Sub.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Sub.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Sub.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Sub.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Sub.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Sub.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Sub.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Sub.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Sub.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Sub.html", "kind" : "case class"}, {"name" : "smile.cas.Tan", "shortDescription" : "tan(x)", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Tan.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Tan) => Boolean, msg: => Any): Tan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tan.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Tan) => Boolean): Tan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tan.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Tan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tan.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Tan", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tan.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Tan, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Tan.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Tan, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Tan.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Tan.simplify", "link" : "smile\/cas\/Tan.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Tan.d", "link" : "smile\/cas\/Tan.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Tan.d", "link" : "smile\/cas\/Tan.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Tan.apply", "link" : "smile\/cas\/Tan.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Tan.toString", "link" : "smile\/cas\/Tan.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Tan#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar", "member" : "smile.cas.Tan.x", "link" : "smile\/cas\/Tan.html#x:smile.cas.Scalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Tan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Tan.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Tan.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Tan.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Tan.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Tan.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Tan.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Tan.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Tan.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Tan.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Tan.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Tan.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Tan.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Tan.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Tan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Tan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Tan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Tan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Tan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Tan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Tan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Tan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Tan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Tan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Tan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Tan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Tan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Tan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Tan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Tan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Tan.html", "kind" : "case class"}, {"name" : "smile.cas.TangentMatrix", "shortDescription" : "The derivative of a matrix y with respect to a scalar x.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/TangentMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TangentMatrix) => Boolean, msg: => Any): TangentMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TangentMatrix) => Boolean): TangentMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): TangentMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TangentMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TangentMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/TangentMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TangentMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/TangentMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.TangentMatrix.apply", "link" : "smile\/cas\/TangentMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.TangentMatrix.d", "link" : "smile\/cas\/TangentMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "size", "tail" : "(): (IntScalar, IntScalar)", "member" : "smile.cas.TangentMatrix.size", "link" : "smile\/cas\/TangentMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.TangentMatrix.toString", "link" : "smile\/cas\/TangentMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.TangentMatrix#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Var", "member" : "smile.cas.TangentMatrix.x", "link" : "smile\/cas\/TangentMatrix.html#x:smile.cas.Var", "kind" : "val"}, {"label" : "y", "tail" : ": MatrixVar", "member" : "smile.cas.TangentMatrix.y", "link" : "smile\/cas\/TangentMatrix.html#y:smile.cas.MatrixVar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/TangentMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/TangentMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/TangentMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/TangentMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/TangentMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/TangentMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/TangentMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/TangentMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/TangentMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/TangentMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/TangentMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/TangentMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/TangentMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/TangentMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/TangentMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/TangentMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/TangentMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/TangentMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/TangentMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/TangentMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/TangentMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/TangentMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/TangentMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/TangentMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/TangentMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/TangentMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/TangentMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/TangentMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/TangentMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/TangentMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/TangentMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.TangentVector", "shortDescription" : "The derivative of a vector y with respect to a scalar x.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/TangentVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TangentVector) => Boolean, msg: => Any): TangentVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TangentVector) => Boolean): TangentVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): TangentVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TangentVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/TangentVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TangentVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/TangentVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TangentVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/TangentVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.TangentVector.apply", "link" : "smile\/cas\/TangentVector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.TangentVector.d", "link" : "smile\/cas\/TangentVector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.TangentVector.d", "link" : "smile\/cas\/TangentVector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.TangentVector.size", "link" : "smile\/cas\/TangentVector.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.TangentVector.toString", "link" : "smile\/cas\/TangentVector.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.TangentVector#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Var", "member" : "smile.cas.TangentVector.x", "link" : "smile\/cas\/TangentVector.html#x:smile.cas.Var", "kind" : "val"}, {"label" : "y", "tail" : ": VectorVar", "member" : "smile.cas.TangentVector.y", "link" : "smile\/cas\/TangentVector.html#y:smile.cas.VectorVar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/TangentVector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/TangentVector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/TangentVector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/TangentVector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/TangentVector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/TangentVector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/TangentVector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/TangentVector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/TangentVector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vector.simplify", "link" : "smile\/cas\/TangentVector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/TangentVector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/TangentVector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/TangentVector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/TangentVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/TangentVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/TangentVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/TangentVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/TangentVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/TangentVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/TangentVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/TangentVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/TangentVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/TangentVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/TangentVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/TangentVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/TangentVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/TangentVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/TangentVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/TangentVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/TangentVector.html", "kind" : "case class"}, {"name" : "smile.cas.Tensor", "trait" : "smile\/cas\/Tensor.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "smile\/cas\/Tensor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Tensor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Tensor) => Boolean, msg: => Any): Tensor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tensor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Tensor) => Boolean): Tensor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tensor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Tensor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tensor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Tensor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Tensor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Tensor, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Tensor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Tensor, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Tensor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Tensor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Tensor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Tensor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Tensor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Tensor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Tensor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Tensor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Tensor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Tensor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Tensor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Tensor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Tensor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smile\/cas\/Tensor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Tensor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "smile\/cas\/Tensor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smile\/cas\/Tensor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Tensor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Tensor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Tensor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Tensor.shape", "link" : "smile\/cas\/Tensor.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "abstract def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Tensor.rank", "link" : "smile\/cas\/Tensor.html#rank:Option[Int]", "kind" : "abstract def"}], "shortDescription" : "A tensor is an algebraic object that describes a (multilinear)relationship between sets of algebraic objects related to a vectorspace."}, {"name" : "smile.cas.Val", "shortDescription" : "Scalar value.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Val.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Val) => Boolean, msg: => Any): Val", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Val.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Val) => Boolean): Val", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Val.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Val", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Val.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Val", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Val.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Val, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Val.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Val, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Val.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Val.d", "link" : "smile\/cas\/Val.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Val.d", "link" : "smile\/cas\/Val.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Val", "member" : "smile.cas.Val.apply", "link" : "smile\/cas\/Val.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Val", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Val.toString", "link" : "smile\/cas\/Val.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Val#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Double", "member" : "smile.cas.Val.x", "link" : "smile\/cas\/Val.html#x:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Val.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Val.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Val.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Val.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Val.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Val.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Val.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Val.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Val.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Val.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Val.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.simplify", "link" : "smile\/cas\/Val.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Val.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Val.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Val.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Val.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Val.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Val.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Val.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Val.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Val.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Val.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Val.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Val.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Val.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Val.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Val.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Val.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Val.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Val.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Val.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Val.html", "kind" : "case class"}, {"name" : "smile.cas.Var", "shortDescription" : "Scalar variable", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Var.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Var) => Boolean, msg: => Any): Var", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Var.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Var) => Boolean): Var", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Var.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Var", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Var.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Var", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Var.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Var, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Var.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Var, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Var.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Scalar", "member" : "smile.cas.Var.apply", "link" : "smile\/cas\/Var.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Vector", "member" : "smile.cas.Var.d", "link" : "smile\/cas\/Var.html#d(dx:smile.cas.VectorVar):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Scalar", "member" : "smile.cas.Var.d", "link" : "smile\/cas\/Var.html#d(dx:smile.cas.Var):smile.cas.Scalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Var.toString", "link" : "smile\/cas\/Var.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Var#<init>", "error" : "unsupported entity"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.Var.symbol", "link" : "smile\/cas\/Var.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Var.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Var.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Var.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_-", "link" : "smile\/cas\/Var.html#unary_-:smile.cas.Scalar", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.unary_+", "link" : "smile\/cas\/Var.html#unary_+:smile.cas.Scalar", "kind" : "def"}, {"label" : "**", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.**", "link" : "smile\/cas\/Var.html#**(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.\/", "link" : "smile\/cas\/Var.html#\/(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.*", "link" : "smile\/cas\/Var.html#*(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "-", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.-", "link" : "smile\/cas\/Var.html#-(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "+", "tail" : "(y: Scalar): Scalar", "member" : "smile.cas.Scalar.+", "link" : "smile\/cas\/Var.html#+(y:smile.cas.Scalar):smile.cas.Scalar", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var*): Vector", "member" : "smile.cas.Scalar.d", "link" : "smile\/cas\/Var.html#d(dx:smile.cas.Var*):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Scalar", "member" : "smile.cas.Scalar.simplify", "link" : "smile\/cas\/Var.html#simplify:smile.cas.Scalar", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Scalar", "member" : "smile.cas.Scalar.apply", "link" : "smile\/cas\/Var.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Scalar", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Scalar.shape", "link" : "smile\/cas\/Var.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Scalar.rank", "link" : "smile\/cas\/Var.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Var.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Var.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Var.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Var.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Var.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Var.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Var.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Var.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Var.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Var.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Var.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Var.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Var.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Var.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Var.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Var.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Var.html", "kind" : "case class"}, {"name" : "smile.cas.Vars", "shortDescription" : "Vector variable", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Vars.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Vars) => Boolean, msg: => Any): Vars", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vars.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Vars) => Boolean): Vars", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vars.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Vars", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vars.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Vars", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vars.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Vars, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Vars.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Vars, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Vars.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vars.simplify", "link" : "smile\/cas\/Vars.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.Vars.apply", "link" : "smile\/cas\/Vars.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.Vars.d", "link" : "smile\/cas\/Vars.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.Vars.d", "link" : "smile\/cas\/Vars.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.Vars.size", "link" : "smile\/cas\/Vars.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.Vars.toString", "link" : "smile\/cas\/Vars.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.Vars#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Scalar*", "member" : "smile.cas.Vars.x", "link" : "smile\/cas\/Vars.html#x:smile.cas.Scalar*", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/Vars.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/Vars.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/Vars.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/Vars.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/Vars.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/Vars.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/Vars.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/Vars.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/Vars.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/Vars.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/Vars.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/Vars.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Vars.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Vars.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Vars.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Vars.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Vars.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Vars.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Vars.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Vars.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Vars.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Vars.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Vars.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Vars.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Vars.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Vars.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Vars.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Vars.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/Vars.html", "kind" : "case class"}, {"name" : "smile.cas.Vector", "trait" : "smile\/cas\/Vector.html", "kind" : "trait", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/Vector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Vector) => Boolean, msg: => Any): Vector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Vector) => Boolean): Vector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Vector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Vector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/Vector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Vector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/Vector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Vector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/Vector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/Vector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/Vector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/Vector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/Vector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/Vector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/Vector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/Vector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/Vector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vector.simplify", "link" : "smile\/cas\/Vector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/Vector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/Vector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/Vector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/Vector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/Vector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/Vector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/Vector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/Vector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/Vector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/Vector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Vector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Vector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/Vector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/Vector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/Vector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smile\/cas\/Vector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/Vector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "smile\/cas\/Vector.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smile\/cas\/Vector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/Vector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/Vector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/Vector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.Vector.d", "link" : "smile\/cas\/Vector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "abstract def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.Vector.d", "link" : "smile\/cas\/Vector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/Vector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.Vector.size", "link" : "smile\/cas\/Vector.html#size:smile.cas.IntScalar", "kind" : "abstract def"}], "shortDescription" : "Vector: rank-1 tensor."}, {"name" : "smile.cas.VectorVal", "shortDescription" : "Vector value.", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/VectorVal.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VectorVal) => Boolean, msg: => Any): VectorVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVal.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VectorVal) => Boolean): VectorVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVal.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): VectorVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVal.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): VectorVal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVal.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (VectorVal, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/VectorVal.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (VectorVal, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/VectorVal.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.VectorVal.simplify", "link" : "smile\/cas\/VectorVal.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): VectorVal", "member" : "smile.cas.VectorVal.apply", "link" : "smile\/cas\/VectorVal.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.VectorVal", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.VectorVal.d", "link" : "smile\/cas\/VectorVal.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.VectorVal.d", "link" : "smile\/cas\/VectorVal.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "size", "tail" : "(): IntScalar", "member" : "smile.cas.VectorVal.size", "link" : "smile\/cas\/VectorVal.html#size:smile.cas.IntScalar", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "smile.cas.VectorVal.equals", "link" : "smile\/cas\/VectorVal.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.VectorVal.toString", "link" : "smile\/cas\/VectorVal.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.VectorVal#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Array[Double]", "member" : "smile.cas.VectorVal.x", "link" : "smile\/cas\/VectorVal.html#x:Array[Double]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/VectorVal.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/VectorVal.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/VectorVal.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/VectorVal.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/VectorVal.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/VectorVal.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/VectorVal.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/VectorVal.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/VectorVal.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/VectorVal.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/VectorVal.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/VectorVal.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/VectorVal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/VectorVal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/VectorVal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/VectorVal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/VectorVal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/VectorVal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/VectorVal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/VectorVal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/VectorVal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/VectorVal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/VectorVal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/VectorVal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/VectorVal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/VectorVal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/VectorVal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/VectorVal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/VectorVal.html", "kind" : "case class"}, {"name" : "smile.cas.VectorVar", "shortDescription" : "Abstract vector variable", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/VectorVar.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VectorVar) => Boolean, msg: => Any): VectorVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVar.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VectorVar) => Boolean): VectorVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVar.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): VectorVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVar.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): VectorVar", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/VectorVar.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (VectorVar, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/VectorVar.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (VectorVar, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/VectorVar.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.VectorVar.apply", "link" : "smile\/cas\/VectorVar.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.VectorVar.d", "link" : "smile\/cas\/VectorVar.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.VectorVar.d", "link" : "smile\/cas\/VectorVar.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.VectorVar.toString", "link" : "smile\/cas\/VectorVar.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.VectorVar#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": IntScalar", "member" : "smile.cas.VectorVar.size", "link" : "smile\/cas\/VectorVar.html#size:smile.cas.IntScalar", "kind" : "val"}, {"label" : "symbol", "tail" : ": String", "member" : "smile.cas.VectorVar.symbol", "link" : "smile\/cas\/VectorVar.html#symbol:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/VectorVar.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/VectorVar.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/VectorVar.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/VectorVar.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/VectorVar.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/VectorVar.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/VectorVar.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/VectorVar.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/VectorVar.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vector.simplify", "link" : "smile\/cas\/VectorVar.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/VectorVar.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/VectorVar.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/VectorVar.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/VectorVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/VectorVar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/VectorVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/VectorVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/VectorVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/VectorVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/VectorVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/VectorVar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/VectorVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/VectorVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/VectorVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/VectorVar.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/VectorVar.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/VectorVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/VectorVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/VectorVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/VectorVar.html", "kind" : "case class"}, {"name" : "smile.cas.ZeroMatrix", "shortDescription" : "Matrix of all 0's", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ZeroMatrix.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ZeroMatrix) => Boolean, msg: => Any): ZeroMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroMatrix.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ZeroMatrix) => Boolean): ZeroMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroMatrix.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ZeroMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroMatrix.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ZeroMatrix", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroMatrix.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ZeroMatrix, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ZeroMatrix.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ZeroMatrix, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ZeroMatrix.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Matrix", "member" : "smile.cas.ZeroMatrix.apply", "link" : "smile\/cas\/ZeroMatrix.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Matrix", "member" : "smile.cas.ZeroMatrix.d", "link" : "smile\/cas\/ZeroMatrix.html#d(dx:smile.cas.Var):smile.cas.Matrix", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ZeroMatrix.toString", "link" : "smile\/cas\/ZeroMatrix.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ZeroMatrix#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": (IntScalar, IntScalar)", "member" : "smile.cas.ZeroMatrix.size", "link" : "smile\/cas\/ZeroMatrix.html#size:(smile.cas.IntScalar,smile.cas.IntScalar)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ZeroMatrix.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "inv", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.inv", "link" : "smile\/cas\/ZeroMatrix.html#inv:smile.cas.Matrix", "kind" : "def"}, {"label" : "t", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.t", "link" : "smile\/cas\/ZeroMatrix.html#t:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_-", "link" : "smile\/cas\/ZeroMatrix.html#unary_-:smile.cas.Matrix", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.unary_+", "link" : "smile\/cas\/ZeroMatrix.html#unary_+:smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ZeroMatrix.html#*(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ZeroMatrix.html#*(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Matrix", "member" : "smile.cas.Matrix.*", "link" : "smile\/cas\/ZeroMatrix.html#*(y:smile.cas.Scalar):smile.cas.Matrix", "kind" : "def"}, {"label" : "-", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.-", "link" : "smile\/cas\/ZeroMatrix.html#-(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "+", "tail" : "(y: Matrix): Matrix", "member" : "smile.cas.Matrix.+", "link" : "smile\/cas\/ZeroMatrix.html#+(y:smile.cas.Matrix):smile.cas.Matrix", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Matrix", "member" : "smile.cas.Matrix.simplify", "link" : "smile\/cas\/ZeroMatrix.html#simplify:smile.cas.Matrix", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Matrix", "member" : "smile.cas.Matrix.apply", "link" : "smile\/cas\/ZeroMatrix.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Matrix", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Matrix.shape", "link" : "smile\/cas\/ZeroMatrix.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Matrix.rank", "link" : "smile\/cas\/ZeroMatrix.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ZeroMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ZeroMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ZeroMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ZeroMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ZeroMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ZeroMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ZeroMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ZeroMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ZeroMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ZeroMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ZeroMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ZeroMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ZeroMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ZeroMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ZeroMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ZeroMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ZeroMatrix.html", "kind" : "case class"}, {"name" : "smile.cas.ZeroVector", "shortDescription" : "Vector of all 0's", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "smile\/cas\/ZeroVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ZeroVector) => Boolean, msg: => Any): ZeroVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ZeroVector) => Boolean): ZeroVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ZeroVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ZeroVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "smile\/cas\/ZeroVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ZeroVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "smile\/cas\/ZeroVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ZeroVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "smile\/cas\/ZeroVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(env: Map[String, Tensor]): Vector", "member" : "smile.cas.ZeroVector.apply", "link" : "smile\/cas\/ZeroVector.html#apply(env:Map[String,smile.cas.Tensor]):smile.cas.Vector", "kind" : "def"}, {"label" : "d", "tail" : "(dx: VectorVar): Matrix", "member" : "smile.cas.ZeroVector.d", "link" : "smile\/cas\/ZeroVector.html#d(dx:smile.cas.VectorVar):smile.cas.Matrix", "kind" : "def"}, {"label" : "d", "tail" : "(dx: Var): Vector", "member" : "smile.cas.ZeroVector.d", "link" : "smile\/cas\/ZeroVector.html#d(dx:smile.cas.Var):smile.cas.Vector", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "smile.cas.ZeroVector.toString", "link" : "smile\/cas\/ZeroVector.html#toString():String", "kind" : "def"}, {"member" : "smile.cas.ZeroVector#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": IntScalar", "member" : "smile.cas.ZeroVector.size", "link" : "smile\/cas\/ZeroVector.html#size:smile.cas.IntScalar", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "smile\/cas\/ZeroVector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_-", "link" : "smile\/cas\/ZeroVector.html#unary_-:smile.cas.Vector", "kind" : "def"}, {"label" : "unary_+", "tail" : "(): Vector", "member" : "smile.cas.Vector.unary_+", "link" : "smile\/cas\/ZeroVector.html#unary_+:smile.cas.Vector", "kind" : "def"}, {"label" : "*~", "tail" : "(y: Vector): Matrix", "member" : "smile.cas.Vector.*~", "link" : "smile\/cas\/ZeroVector.html#*~(y:smile.cas.Vector):smile.cas.Matrix", "kind" : "def"}, {"label" : "*", "tail" : "(y: Vector): Scalar", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/ZeroVector.html#*(y:smile.cas.Vector):smile.cas.Scalar", "kind" : "def"}, {"label" : "\/", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.\/", "link" : "smile\/cas\/ZeroVector.html#\/(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "*", "tail" : "(y: Scalar): Vector", "member" : "smile.cas.Vector.*", "link" : "smile\/cas\/ZeroVector.html#*(y:smile.cas.Scalar):smile.cas.Vector", "kind" : "def"}, {"label" : "-", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.-", "link" : "smile\/cas\/ZeroVector.html#-(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "+", "tail" : "(y: Vector): Vector", "member" : "smile.cas.Vector.+", "link" : "smile\/cas\/ZeroVector.html#+(y:smile.cas.Vector):smile.cas.Vector", "kind" : "def"}, {"label" : "simplify", "tail" : "(): Vector", "member" : "smile.cas.Vector.simplify", "link" : "smile\/cas\/ZeroVector.html#simplify:smile.cas.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(env: (String, Tensor)*): Vector", "member" : "smile.cas.Vector.apply", "link" : "smile\/cas\/ZeroVector.html#apply(env:(String,smile.cas.Tensor)*):smile.cas.Vector", "kind" : "def"}, {"label" : "shape", "tail" : "(): Option[Array[IntScalar]]", "member" : "smile.cas.Vector.shape", "link" : "smile\/cas\/ZeroVector.html#shape:Option[Array[smile.cas.IntScalar]]", "kind" : "def"}, {"label" : "rank", "tail" : "(): Option[Int]", "member" : "smile.cas.Vector.rank", "link" : "smile\/cas\/ZeroVector.html#rank:Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smile\/cas\/ZeroVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smile\/cas\/ZeroVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smile\/cas\/ZeroVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smile\/cas\/ZeroVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smile\/cas\/ZeroVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smile\/cas\/ZeroVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smile\/cas\/ZeroVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ZeroVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ZeroVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smile\/cas\/ZeroVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smile\/cas\/ZeroVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smile\/cas\/ZeroVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smile\/cas\/ZeroVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "smile\/cas\/ZeroVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smile\/cas\/ZeroVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smile\/cas\/ZeroVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smile\/cas\/ZeroVector.html", "kind" : "case class"}]};