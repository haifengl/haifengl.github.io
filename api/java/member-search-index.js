memberSearchIndex = [{"p":"smile.util","c":"IntPair","l":"_1()"},{"p":"smile.util","c":"Tuple2","l":"_1()"},{"p":"smile.util","c":"IntPair","l":"_2()"},{"p":"smile.util","c":"Tuple2","l":"_2()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"$"},{"p":"smile.data.formula","c":"Terms","l":"$(String)","u":"$(java.lang.String)"},{"p":"smile.validation.metric","c":"ContingencyTable","l":"a"},{"p":"smile.math.matrix","c":"BigMatrix","l":"aat()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"aat()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"aat()"},{"p":"smile.math.matrix","c":"Matrix","l":"aat()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"aat()"},{"p":"smile.math","c":"Complex","l":"abs()"},{"p":"smile.data.formula","c":"Terms","l":"abs(String)","u":"abs(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"abs(Term)","u":"abs(smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Abs","l":"Abs(Term)","u":"%3Cinit%3E(smile.data.formula.Term)"},{"p":"smile.data.formula","c":"AbstractBiFunction","l":"AbstractBiFunction(String, Term, Term)","u":"%3Cinit%3E(java.lang.String,smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.classification","c":"AbstractClassifier","l":"AbstractClassifier(BaseVector<?, ?, ?>)","u":"%3Cinit%3E(smile.data.vector.BaseVector)"},{"p":"smile.classification","c":"AbstractClassifier","l":"AbstractClassifier(int[])","u":"%3Cinit%3E(int[])"},{"p":"smile.classification","c":"AbstractClassifier","l":"AbstractClassifier(IntSet)","u":"%3Cinit%3E(smile.util.IntSet)"},{"p":"smile.data.formula","c":"AbstractFunction","l":"AbstractFunction(String, Term)","u":"%3Cinit%3E(java.lang.String,smile.data.formula.Term)"},{"p":"smile.interpolation","c":"AbstractInterpolation","l":"AbstractInterpolation(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.data","c":"AbstractTuple","l":"AbstractTuple()","u":"%3Cinit%3E()"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"accept(File)","u":"accept(java.io.File)"},{"p":"smile.math.matrix","c":"DoubleConsumer","l":"accept(int, int, double)","u":"accept(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"FloatConsumer","l":"accept(int, int, float)","u":"accept(int,int,float)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"accuracy"},{"p":"smile.deep.metric","c":"Accuracy","l":"Accuracy()","u":"%3Cinit%3E()"},{"p":"smile.validation.metric","c":"Accuracy","l":"Accuracy()","u":"%3Cinit%3E()"},{"p":"smile.deep.metric","c":"Accuracy","l":"Accuracy(double)","u":"%3Cinit%3E(double)"},{"p":"smile.timeseries","c":"TimeSeries","l":"acf(double[], int)","u":"acf(double[],int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"acos_()"},{"p":"smile.deep.tensor","c":"Tensor","l":"acos()"},{"p":"smile.data.formula","c":"Terms","l":"acos(String)","u":"acos(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"acos(Term)","u":"acos(smile.data.formula.Term)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"smile.swing.table","c":"ColorCellEditor","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"smile.swing.table","c":"FontCellEditor","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"smile.swing.table","c":"TableCopyPasteAdapter","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"smile.llm","c":"Transformer.Options","l":"activation()"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"activation()"},{"p":"smile.deep.activation","c":"ActivationFunction","l":"ActivationFunction(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"smile.classification","c":"AdaBoost","l":"AdaBoost(Formula, int, DecisionTree[], double[], double[], double[])","u":"%3Cinit%3E(smile.data.formula.Formula,int,smile.classification.DecisionTree[],double[],double[],double[])"},{"p":"smile.classification","c":"AdaBoost","l":"AdaBoost(Formula, int, DecisionTree[], double[], double[], double[], IntSet)","u":"%3Cinit%3E(smile.data.formula.Formula,int,smile.classification.DecisionTree[],double[],double[],double[],smile.util.IntSet)"},{"p":"smile.base.mlp.optimizer","c":"Adam","l":"Adam()","u":"%3Cinit%3E()"},{"p":"smile.deep","c":"Optimizer","l":"Adam(Model, double)","u":"Adam(smile.deep.Model,double)"},{"p":"smile.deep","c":"Optimizer","l":"Adam(Model, double, double, double, double, double, boolean)","u":"Adam(smile.deep.Model,double,double,double,double,double,boolean)"},{"p":"smile.base.mlp.optimizer","c":"Adam","l":"Adam(TimeFunction)","u":"%3Cinit%3E(smile.math.TimeFunction)"},{"p":"smile.base.mlp.optimizer","c":"Adam","l":"Adam(TimeFunction, double, double)","u":"%3Cinit%3E(smile.math.TimeFunction,double,double)"},{"p":"smile.base.mlp.optimizer","c":"Adam","l":"Adam(TimeFunction, double, double, double)","u":"%3Cinit%3E(smile.math.TimeFunction,double,double,double)"},{"p":"smile.deep","c":"Optimizer","l":"AdamW(Model, double)","u":"AdamW(smile.deep.Model,double)"},{"p":"smile.deep","c":"Optimizer","l":"AdamW(Model, double, double, double, double, double, boolean)","u":"AdamW(smile.deep.Model,double,double,double,double,double,boolean)"},{"p":"smile.deep.layer","c":"Layer","l":"adaptiveAvgPool2d(int)"},{"p":"smile.deep.layer","c":"AdaptiveAvgPool2dLayer","l":"AdaptiveAvgPool2dLayer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.deep.layer","c":"AdaptiveAvgPool2dLayer","l":"AdaptiveAvgPool2dLayer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"adb(Transpose, BigMatrix, double[], Transpose, BigMatrix)","u":"adb(smile.math.blas.Transpose,smile.math.matrix.BigMatrix,double[],smile.math.blas.Transpose,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"adb(Transpose, Matrix, double[], Transpose, Matrix)","u":"adb(smile.math.blas.Transpose,smile.math.matrix.Matrix,double[],smile.math.blas.Transpose,smile.math.matrix.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"adb(Transpose, Matrix, float[], Transpose, Matrix)","u":"adb(smile.math.blas.Transpose,smile.math.matrix.fp32.Matrix,float[],smile.math.blas.Transpose,smile.math.matrix.fp32.Matrix)"},{"p":"smile.deep.tensor","c":"Tensor","l":"add_(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"add_(float)"},{"p":"smile.deep.tensor","c":"Tensor","l":"add_(Tensor)","u":"add_(smile.deep.tensor.Tensor)"},{"p":"smile.deep.tensor","c":"Tensor","l":"add_(Tensor, double)","u":"add_(smile.deep.tensor.Tensor,double)"},{"p":"smile.util","c":"Array2D","l":"add(Array2D)","u":"add(smile.util.Array2D)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add(BigMatrix)","u":"add(smile.math.matrix.BigMatrix)"},{"p":"smile.math","c":"Complex","l":"add(Complex)","u":"add(smile.math.Complex)"},{"p":"smile.deep.tensor","c":"Tensor","l":"add(double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add(double)"},{"p":"smile.math.matrix","c":"Matrix","l":"add(double)"},{"p":"smile.sort","c":"DoubleHeapSelect","l":"add(double)"},{"p":"smile.sort","c":"IQAgent","l":"add(double)"},{"p":"smile.util","c":"Array2D","l":"add(double)"},{"p":"smile.util","c":"DoubleArrayList","l":"add(double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add(double, BigMatrix)","u":"add(double,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add(double, BigMatrix, double, BigMatrix)","u":"add(double,smile.math.matrix.BigMatrix,double,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add(double, double, BigMatrix)","u":"add(double,double,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"add(double, double, Matrix)","u":"add(double,double,smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add(double, double[], double[])","u":"add(double,double[],double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"add(double, double[], double[])","u":"add(double,double[],double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"add(double, Matrix)","u":"add(double,smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"add(double, Matrix, double, Matrix)","u":"add(double,smile.math.matrix.Matrix,double,smile.math.matrix.Matrix)"},{"p":"smile.plot.swing","c":"Isoline","l":"add(double...)"},{"p":"smile.util","c":"DoubleArrayList","l":"add(double[])"},{"p":"smile.math","c":"MathEx","l":"add(double[], double[])","u":"add(double[],double[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"add(float)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add(float)"},{"p":"smile.sort","c":"FloatHeapSelect","l":"add(float)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add(float, float, Matrix)","u":"add(float,float,smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add(float, float[], float[])","u":"add(float,float[],float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add(float, Matrix)","u":"add(float,smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add(float, Matrix, float, Matrix)","u":"add(float,smile.math.matrix.fp32.Matrix,float,smile.math.matrix.fp32.Matrix)"},{"p":"smile.neighbor.lsh","c":"Bucket","l":"add(int)"},{"p":"smile.sort","c":"IntHeapSelect","l":"add(int)"},{"p":"smile.util","c":"IntArray2D","l":"add(int)"},{"p":"smile.util","c":"IntArrayList","l":"add(int)"},{"p":"smile.util","c":"IntHashSet","l":"add(int)"},{"p":"smile.neighbor.lsh","c":"Hash","l":"add(int, double[])","u":"add(int,double[])"},{"p":"smile.neighbor.lsh","c":"MultiProbeHash","l":"add(int, double[])","u":"add(int,double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add(int, int, double)","u":"add(int,int,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"add(int, int, double)","u":"add(int,int,double)"},{"p":"smile.util","c":"Array2D","l":"add(int, int, double)","u":"add(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add(int, int, float)","u":"add(int,int,float)"},{"p":"smile.util","c":"IntArray2D","l":"add(int, int, int)","u":"add(int,int,int)"},{"p":"smile.util","c":"IntArrayList","l":"add(int...)"},{"p":"smile.util","c":"IntArray2D","l":"add(IntArray2D)","u":"add(smile.util.IntArray2D)"},{"p":"smile.util","c":"IntArrayList","l":"add(IntArrayList)","u":"add(smile.util.IntArrayList)"},{"p":"smile.neighbor","c":"BKTree","l":"add(K, V)","u":"add(K,V)"},{"p":"smile.deep.layer","c":"SequentialBlock","l":"add(Layer)","u":"add(smile.deep.layer.Layer)"},{"p":"smile.neighbor","c":"BKTree","l":"add(Map<K, V>)","u":"add(java.util.Map)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add(Matrix)","u":"add(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"add(Matrix)","u":"add(smile.math.matrix.Matrix)"},{"p":"smile.plot.swing","c":"Canvas","l":"add(Plot)","u":"add(smile.plot.swing.Plot)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"add(PlotPanel)","u":"add(smile.plot.swing.PlotPanel)"},{"p":"smile.plot.swing","c":"Canvas","l":"add(Shape)","u":"add(smile.plot.swing.Shape)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, double)","u":"add(java.lang.String,double)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, double, double)","u":"add(java.lang.String,double,double)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, double, double, double)","u":"add(java.lang.String,double,double,double)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, double[])","u":"add(java.lang.String,double[])"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, int)","u":"add(java.lang.String,int)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, int, int)","u":"add(java.lang.String,int,int)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, int, int, int)","u":"add(java.lang.String,int,int,int)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, int[])","u":"add(java.lang.String,int[])"},{"p":"smile.deep.layer","c":"LayerBlock","l":"add(String, Layer)","u":"add(java.lang.String,smile.deep.layer.Layer)"},{"p":"smile.deep.layer","c":"LayerBlock","l":"add(String, Module)","u":"add(java.lang.String,org.bytedeco.pytorch.Module)"},{"p":"smile.data.formula","c":"Terms","l":"add(String, String)","u":"add(java.lang.String,java.lang.String)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, String)","u":"add(java.lang.String,java.lang.String)"},{"p":"smile.hpo","c":"Hyperparameters","l":"add(String, String[])","u":"add(java.lang.String,java.lang.String[])"},{"p":"smile.hash","c":"PerfectMap.Builder","l":"add(String, T)","u":"add(java.lang.String,T)"},{"p":"smile.data.formula","c":"Terms","l":"add(String, Term)","u":"add(java.lang.String,smile.data.formula.Term)"},{"p":"smile.sort","c":"HeapSelect","l":"add(T)"},{"p":"smile.deep.tensor","c":"Tensor","l":"add(Tensor)","u":"add(smile.deep.tensor.Tensor)"},{"p":"smile.deep.tensor","c":"Tensor","l":"add(Tensor, double)","u":"add(smile.deep.tensor.Tensor,double)"},{"p":"smile.data.formula","c":"Terms","l":"add(Term, String)","u":"add(smile.data.formula.Term,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"add(Term, Term)","u":"add(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Add","l":"Add(Term, Term)","u":"%3Cinit%3E(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.nlp","c":"SimpleCorpus","l":"add(Text)","u":"add(smile.nlp.Text)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"add2(double, double, BigMatrix)","u":"add2(double,double,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"add2(double, double, Matrix)","u":"add2(double,double,smile.math.matrix.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"add2(float, float, Matrix)","u":"add2(float,float,smile.math.matrix.fp32.Matrix)"},{"p":"smile.nlp","c":"AnchorText","l":"addAnchor(String)","u":"addAnchor(java.lang.String)"},{"p":"smile.nlp","c":"SimpleText","l":"addAnchor(String)","u":"addAnchor(java.lang.String)"},{"p":"smile.taxonomy","c":"Concept","l":"addChild(Concept)","u":"addChild(smile.taxonomy.Concept)"},{"p":"smile.nlp","c":"Trie.Node","l":"addChild(K[], V, int)","u":"addChild(K[],V,int)"},{"p":"smile.taxonomy","c":"Concept","l":"addChild(String)","u":"addChild(java.lang.String)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"addDiag(double)"},{"p":"smile.math.matrix","c":"Matrix","l":"addDiag(double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"addDiag(double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"addDiag(double[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"addDiag(float)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"addDiag(float[])"},{"p":"smile.graph","c":"AdjacencyList","l":"addEdge(int, int)","u":"addEdge(int,int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"addEdge(int, int)","u":"addEdge(int,int)"},{"p":"smile.graph","c":"Graph","l":"addEdge(int, int)","u":"addEdge(int,int)"},{"p":"smile.graph","c":"AdjacencyList","l":"addEdge(int, int, double)","u":"addEdge(int,int,double)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"addEdge(int, int, double)","u":"addEdge(int,int,double)"},{"p":"smile.graph","c":"Graph","l":"addEdge(int, int, double)","u":"addEdge(int,int,double)"},{"p":"smile.vq.hebb","c":"Neuron","l":"addEdge(Neuron)","u":"addEdge(smile.vq.hebb.Neuron)"},{"p":"smile.vq.hebb","c":"Neuron","l":"addEdge(Neuron, int)","u":"addEdge(smile.vq.hebb.Neuron,int)"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"addExtension(String)","u":"addExtension(java.lang.String)"},{"p":"smile.taxonomy","c":"Concept","l":"addKeywords(String...)","u":"addKeywords(java.lang.String...)"},{"p":"smile.swing","c":"Table.RowHeader","l":"addNotify()"},{"p":"smile.plot.swing","c":"Canvas","l":"addPropertyChangeListener(PropertyChangeListener)","u":"addPropertyChangeListener(java.beans.PropertyChangeListener)"},{"p":"smile.graph","c":"AdjacencyList","l":"AdjacencyList(int)","u":"%3Cinit%3E(int)"},{"p":"smile.graph","c":"AdjacencyList","l":"AdjacencyList(int, boolean)","u":"%3Cinit%3E(int,boolean)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"AdjacencyMatrix(int)","u":"%3Cinit%3E(int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"AdjacencyMatrix(int, boolean)","u":"%3Cinit%3E(int,boolean)"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"AdjustedMutualInformation(AdjustedMutualInformation.Method)","u":"%3Cinit%3E(smile.validation.metric.AdjustedMutualInformation.Method)"},{"p":"smile.timeseries","c":"AR","l":"adjustedR2()"},{"p":"smile.timeseries","c":"ARMA","l":"adjustedR2()"},{"p":"smile.validation.metric","c":"AdjustedRandIndex","l":"AdjustedRandIndex()","u":"%3Cinit%3E()"},{"p":"smile.regression","c":"LinearModel","l":"adjustedRSquared()"},{"p":"smile.vq.hebb","c":"Edge","l":"age"},{"p":"smile.vq.hebb","c":"Neuron","l":"age()"},{"p":"smile.plot.vega","c":"Field","l":"aggregate(String)","u":"aggregate(java.lang.String)"},{"p":"smile.plot.vega","c":"Transform","l":"aggregate(String, String, String, String...)","u":"aggregate(java.lang.String,java.lang.String,java.lang.String,java.lang.String...)"},{"p":"smile.classification","c":"LogisticRegression","l":"AIC()"},{"p":"smile.classification","c":"Maxent","l":"AIC()"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"AIC()"},{"p":"smile.glm","c":"GLM","l":"AIC()"},{"p":"smile.validation","c":"ModelSelection","l":"AIC(double, int)","u":"AIC(double,int)"},{"p":"smile.plot.vega","c":"Concat","l":"align(String)","u":"align(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"align(String)","u":"align(java.lang.String)"},{"p":"smile.plot.vega","c":"FacetField","l":"align(String)","u":"align(java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"align(String)","u":"align(java.lang.String)"},{"p":"smile.plot.vega","c":"ViewLayoutComposition","l":"align(String)","u":"align(java.lang.String)"},{"p":"smile.plot.vega","c":"Concat","l":"align(String, String)","u":"align(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"align(String, String)","u":"align(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"align(String, String)","u":"align(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"ViewLayoutComposition","l":"align(String, String)","u":"align(java.lang.String,java.lang.String)"},{"p":"smile.math.blas","c":"EigenRange","l":"ALL"},{"p":"smile.math.blas","c":"SVDJob","l":"ALL"},{"p":"smile.io","c":"Arrow","l":"allocate(long)"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"allowSpecialTokens(boolean)"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"alpha"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"alpha()"},{"p":"smile.swing","c":"AlphaIcon","l":"AlphaIcon(Icon, float)","u":"%3Cinit%3E(javax.swing.Icon,float)"},{"p":"smile.plot.vega","c":"BinParams","l":"anchor(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"and_(Tensor)","u":"and_(smile.deep.tensor.Tensor)"},{"p":"smile.plot.vega","c":"Predicate","l":"and(Predicate...)","u":"and(smile.plot.vega.Predicate...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"and(Tensor)","u":"and(smile.deep.tensor.Tensor)"},{"p":"smile.data.transform","c":"Transform","l":"andThen(Transform)","u":"andThen(smile.data.transform.Transform)"},{"p":"smile.association","c":"AssociationRule","l":"antecedent"},{"p":"smile.data","c":"Tuple","l":"anyNull()"},{"p":"smile.data.vector","c":"Vector","l":"anyNull()"},{"p":"smile.util","c":"SparseArray","l":"append(int, double)","u":"append(int,double)"},{"p":"smile.gap","c":"Crossover","l":"apply(BitString, BitString)","u":"apply(smile.gap.BitString,smile.gap.BitString)"},{"p":"smile.data.formula","c":"Feature","l":"apply(DataFrame)","u":"apply(smile.data.DataFrame)"},{"p":"smile.data.transform","c":"ColumnTransform","l":"apply(DataFrame)","u":"apply(smile.data.DataFrame)"},{"p":"smile.data.transform","c":"Transform","l":"apply(DataFrame)","u":"apply(smile.data.DataFrame)"},{"p":"smile.feature.extraction","c":"BinaryEncoder","l":"apply(DataFrame)","u":"apply(smile.data.DataFrame)"},{"p":"smile.feature.extraction","c":"Projection","l":"apply(DataFrame)","u":"apply(smile.data.DataFrame)"},{"p":"smile.feature.extraction","c":"SparseEncoder","l":"apply(DataFrame)","u":"apply(smile.data.DataFrame)"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"apply(DataFrame)","u":"apply(smile.data.DataFrame)"},{"p":"smile.math","c":"Function","l":"apply(double)"},{"p":"smile.math.kernel","c":"DotProductKernel","l":"apply(double)"},{"p":"smile.math.kernel","c":"IsotropicKernel","l":"apply(double)"},{"p":"smile.association","c":"ARM","l":"apply(double, FPTree)","u":"apply(double,smile.association.FPTree)"},{"p":"smile.math","c":"MultivariateFunction","l":"apply(double...)"},{"p":"smile.feature.extraction","c":"KernelPCA","l":"apply(double[])"},{"p":"smile.feature.extraction","c":"Projection","l":"apply(double[])"},{"p":"smile.feature.extraction","c":"Projection","l":"apply(double[][])"},{"p":"smile.data","c":"DataFrame","l":"apply(Enum<?>)","u":"apply(java.lang.Enum)"},{"p":"smile.association","c":"FPGrowth","l":"apply(FPTree)","u":"apply(smile.association.FPTree)"},{"p":"smile.data","c":"DataFrame","l":"apply(int)"},{"p":"smile.data","c":"Dataset","l":"apply(int)"},{"p":"smile.data","c":"Tuple","l":"apply(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"apply(int)"},{"p":"smile.math","c":"Complex.Array","l":"apply(int)"},{"p":"smile.math","c":"IntFunction","l":"apply(int)"},{"p":"smile.math","c":"TimeFunction","l":"apply(int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"apply(int, int)","u":"apply(int,int)"},{"p":"smile.math.matrix","c":"IMatrix","l":"apply(int, int)","u":"apply(int,int)"},{"p":"smile.util","c":"Array2D","l":"apply(int, int)","u":"apply(int,int)"},{"p":"smile.util","c":"IntArray2D","l":"apply(int, int)","u":"apply(int,int)"},{"p":"smile.feature.selection","c":"GAFE","l":"apply(int, int, int, Fitness<BitString>)","u":"apply(int,int,int,smile.gap.Fitness)"},{"p":"smile.data.vector","c":"BaseVector","l":"apply(int...)"},{"p":"smile.swing.table","c":"TableColumnSettings","l":"apply(JTable)","u":"apply(javax.swing.JTable)"},{"p":"smile.swing.table","c":"TableCopyPasteAdapter","l":"apply(JTable)","u":"apply(javax.swing.JTable)"},{"p":"smile.data","c":"DataFrame","l":"apply(String)","u":"apply(java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"apply(String)","u":"apply(java.lang.String)"},{"p":"smile.feature.extraction","c":"BagOfWords","l":"apply(String)","u":"apply(java.lang.String)"},{"p":"smile.feature.extraction","c":"HashEncoder","l":"apply(String)","u":"apply(java.lang.String)"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"apply(String)","u":"apply(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"Tokenizer","l":"apply(String)","u":"apply(java.lang.String)"},{"p":"smile.manifold","c":"KPCA","l":"apply(T)"},{"p":"smile.math.distance","c":"Distance","l":"apply(T, T)","u":"apply(T,T)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"apply(T, T)","u":"apply(T,T)"},{"p":"smile.gap","c":"Selection","l":"apply(T[])"},{"p":"smile.manifold","c":"KPCA","l":"apply(T[])"},{"p":"smile.deep.layer","c":"Layer","l":"apply(Tensor)","u":"apply(smile.deep.tensor.Tensor)"},{"p":"smile.deep","c":"Model","l":"apply(Tensor)","u":"apply(smile.deep.tensor.Tensor)"},{"p":"smile.data.formula","c":"Feature","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.data.formula","c":"Formula","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.data.transform","c":"ColumnTransform","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.extraction","c":"BagOfWords","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.extraction","c":"BinaryEncoder","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.extraction","c":"Projection","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.extraction","c":"SparseEncoder","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.imputation","c":"KMedoidsImputer","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.imputation","c":"KNNImputer","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.feature.transform","c":"Normalizer","l":"apply(Tuple)","u":"apply(smile.data.Tuple)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsBoolean(Tuple)","u":"applyAsBoolean(smile.data.Tuple)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsByte(Tuple)","u":"applyAsByte(smile.data.Tuple)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsChar(Tuple)","u":"applyAsChar(smile.data.Tuple)"},{"p":"smile.math","c":"MultivariateFunction","l":"applyAsDouble(double[])"},{"p":"smile.classification","c":"Classifier","l":"applyAsDouble(T)"},{"p":"smile.regression","c":"Regression","l":"applyAsDouble(T)"},{"p":"smile.math.distance","c":"Distance","l":"applyAsDouble(T, T)","u":"applyAsDouble(T,T)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"applyAsDouble(T, T)","u":"applyAsDouble(T,T)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsDouble(Tuple)","u":"applyAsDouble(smile.data.Tuple)"},{"p":"smile.util","c":"ToFloatFunction","l":"applyAsFloat(T)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsFloat(Tuple)","u":"applyAsFloat(smile.data.Tuple)"},{"p":"smile.classification","c":"Classifier","l":"applyAsInt(T)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsInt(Tuple)","u":"applyAsInt(smile.data.Tuple)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsLong(Tuple)","u":"applyAsLong(smile.data.Tuple)"},{"p":"smile.data.formula","c":"Feature","l":"applyAsShort(Tuple)","u":"applyAsShort(smile.data.Tuple)"},{"p":"smile.timeseries","c":"AR","l":"ar()"},{"p":"smile.timeseries","c":"ARMA","l":"ar()"},{"p":"smile.timeseries","c":"AR","l":"AR(double[], double[], double, AR.Method)","u":"%3Cinit%3E(double[],double[],double,smile.timeseries.AR.Method)"},{"p":"smile.deep.tensor","c":"Tensor","l":"arange(double, double, double)","u":"arange(double,double,double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"arange(float, float, float)","u":"arange(float,float,float)"},{"p":"smile.deep.tensor","c":"Tensor","l":"arange(int, int, int)","u":"arange(int,int,int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"arange(long, long, long)","u":"arange(long,long,long)"},{"p":"smile.io","c":"Write","l":"arff(DataFrame, Path, String)","u":"arff(smile.data.DataFrame,java.nio.file.Path,java.lang.String)"},{"p":"smile.io","c":"Read","l":"arff(Path)","u":"arff(java.nio.file.Path)"},{"p":"smile.io","c":"Arff","l":"Arff(Path)","u":"%3Cinit%3E(java.nio.file.Path)"},{"p":"smile.io","c":"Arff","l":"Arff(Path, Charset)","u":"%3Cinit%3E(java.nio.file.Path,java.nio.charset.Charset)"},{"p":"smile.io","c":"Arff","l":"Arff(Reader)","u":"%3Cinit%3E(java.io.Reader)"},{"p":"smile.io","c":"Read","l":"arff(String)","u":"arff(java.lang.String)"},{"p":"smile.io","c":"Arff","l":"Arff(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.io","c":"Arff","l":"Arff(String, Charset)","u":"%3Cinit%3E(java.lang.String,java.nio.charset.Charset)"},{"p":"smile.deep.tensor","c":"Tensor","l":"argmax(int, boolean)","u":"argmax(int,boolean)"},{"p":"smile.plot.vega","c":"Axis","l":"aria(boolean)"},{"p":"smile.plot.vega","c":"Legend","l":"aria(boolean)"},{"p":"smile.plot.vega","c":"Mark","l":"aria(boolean)"},{"p":"smile.timeseries","c":"ARMA","l":"ARMA(double[], double[], double[], double, double[], double[])","u":"%3Cinit%3E(double[],double[],double[],double,double[],double[])"},{"p":"smile.data.type","c":"DataType.ID","l":"Array"},{"p":"smile.data.vector","c":"BaseVector","l":"array()"},{"p":"smile.data.vector","c":"BooleanVector","l":"array()"},{"p":"smile.data.vector","c":"ByteVector","l":"array()"},{"p":"smile.data.vector","c":"CharVector","l":"array()"},{"p":"smile.data.vector","c":"DoubleVector","l":"array()"},{"p":"smile.data.vector","c":"FloatVector","l":"array()"},{"p":"smile.data.vector","c":"IntVector","l":"array()"},{"p":"smile.data.vector","c":"LongVector","l":"array()"},{"p":"smile.data.vector","c":"ShortVector","l":"array()"},{"p":"smile.util","c":"Bytes","l":"array()"},{"p":"smile.data.type","c":"DataTypes","l":"array(DataType)","u":"array(smile.data.type.DataType)"},{"p":"smile.math","c":"Complex.Array","l":"Array(int)","u":"%3Cinit%3E(int)"},{"p":"smile.util","c":"Array2D","l":"Array2D(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.util","c":"Array2D","l":"Array2D(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.util","c":"Array2D","l":"Array2D(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"smile.util","c":"Array2D","l":"Array2D(int, int, double[])","u":"%3Cinit%3E(int,int,double[])"},{"p":"smile.io","c":"Arrow","l":"Arrow()","u":"%3Cinit%3E()"},{"p":"smile.io","c":"Write","l":"arrow(DataFrame, Path)","u":"arrow(smile.data.DataFrame,java.nio.file.Path)"},{"p":"smile.io","c":"Arrow","l":"Arrow(int)","u":"%3Cinit%3E(int)"},{"p":"smile.io","c":"Read","l":"arrow(Path)","u":"arrow(java.nio.file.Path)"},{"p":"smile.io","c":"Read","l":"arrow(String)","u":"arrow(java.lang.String)"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"as()"},{"p":"smile.plot.vega","c":"DensityTransform","l":"as(String...)","u":"as(java.lang.String...)"},{"p":"smile.plot.vega","c":"LoessTransform","l":"as(String...)","u":"as(java.lang.String...)"},{"p":"smile.plot.vega","c":"QuantileTransform","l":"as(String...)","u":"as(java.lang.String...)"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"as(String...)","u":"as(java.lang.String...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"asin_()"},{"p":"smile.deep.tensor","c":"Tensor","l":"asin()"},{"p":"smile.data.formula","c":"Terms","l":"asin(String)","u":"asin(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"asin(Term)","u":"asin(smile.data.formula.Term)"},{"p":"smile.math.matrix","c":"IMatrix.Preconditioner","l":"asolve(double[], double[])","u":"asolve(double[],double[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix.Preconditioner","l":"asolve(float[], float[])","u":"asolve(float[],float[])"},{"p":"smile.association","c":"AssociationRule","l":"AssociationRule(int[], int[], double, double, double, double)","u":"%3Cinit%3E(int[],int[],double,double,double,double)"},{"p":"smile.deep.activation","c":"ActivationFunction","l":"asTorch()"},{"p":"smile.deep.layer","c":"AdaptiveAvgPool2dLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"AvgPool2dLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"BatchNorm1dLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"BatchNorm2dLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"Conv2dLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"DropoutLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"EmbeddingLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"FullyConnectedLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"GroupNormLayer","l":"asTorch()"},{"p":"smile.deep.layer","c":"Layer","l":"asTorch()"},{"p":"smile.deep.layer","c":"LayerBlock","l":"asTorch()"},{"p":"smile.deep.layer","c":"MaxPool2dLayer","l":"asTorch()"},{"p":"smile.deep","c":"Model","l":"asTorch()"},{"p":"smile.deep.tensor","c":"Device","l":"asTorch()"},{"p":"smile.deep.tensor","c":"Tensor","l":"asTorch()"},{"p":"smile.llm","c":"PositionalEncoding","l":"asTorch()"},{"p":"smile.vision.layer","c":"StochasticDepth","l":"asTorch()"},{"p":"smile.math.blas","c":"BLAS","l":"asum(double[])"},{"p":"smile.math.blas","c":"BLAS","l":"asum(float[])"},{"p":"smile.math.blas","c":"BLAS","l":"asum(int, double[], int)","u":"asum(int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"asum(int, double[], int)","u":"asum(int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"asum(int, float[], int)","u":"asum(int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"asum(int, float[], int)","u":"asum(int,float[],int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"ata()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"ata()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"ata()"},{"p":"smile.math.matrix","c":"Matrix","l":"ata()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"ata()"},{"p":"smile.data.formula","c":"Terms","l":"atan(String)","u":"atan(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"atan(Term)","u":"atan(smile.data.formula.Term)"},{"p":"smile.util","c":"AutoScope","l":"attach(AutoCloseable...)","u":"attach(java.lang.AutoCloseable...)"},{"p":"smile.clustering","c":"DENCLUE","l":"attractors"},{"p":"smile.validation","c":"ClassificationMetrics","l":"auc"},{"p":"smile.validation.metric","c":"AUC","l":"AUC()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"AutoScope","l":"AutoScope(AutoCloseable...)","u":"%3Cinit%3E(java.lang.AutoCloseable...)"},{"p":"smile.plot.vega","c":"Concat","l":"autosize()"},{"p":"smile.plot.vega","c":"Config","l":"autosize()"},{"p":"smile.plot.vega","c":"Facet","l":"autosize()"},{"p":"smile.plot.vega","c":"Repeat","l":"autosize()"},{"p":"smile.plot.vega","c":"VegaLite","l":"autosize()"},{"p":"smile.plot.vega","c":"View","l":"autosize()"},{"p":"smile.plot.vega","c":"Concat","l":"autosize(String, boolean, String)","u":"autosize(java.lang.String,boolean,java.lang.String)"},{"p":"smile.plot.vega","c":"Config","l":"autosize(String, boolean, String)","u":"autosize(java.lang.String,boolean,java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"autosize(String, boolean, String)","u":"autosize(java.lang.String,boolean,java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"autosize(String, boolean, String)","u":"autosize(java.lang.String,boolean,java.lang.String)"},{"p":"smile.plot.vega","c":"VegaLite","l":"autosize(String, boolean, String)","u":"autosize(java.lang.String,boolean,java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"autosize(String, boolean, String)","u":"autosize(java.lang.String,boolean,java.lang.String)"},{"p":"smile.validation","c":"ClassificationValidations","l":"avg"},{"p":"smile.validation","c":"RegressionValidations","l":"avg"},{"p":"smile.nlp","c":"Corpus","l":"avgDocSize()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"avgDocSize()"},{"p":"smile.deep.layer","c":"Layer","l":"avgPool2d(int)"},{"p":"smile.deep.layer","c":"AvgPool2dLayer","l":"AvgPool2dLayer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.deep.layer","c":"AvgPool2dLayer","l":"AvgPool2dLayer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.io","c":"Avro","l":"Avro(InputStream)","u":"%3Cinit%3E(java.io.InputStream)"},{"p":"smile.io","c":"Avro","l":"Avro(Path)","u":"%3Cinit%3E(java.nio.file.Path)"},{"p":"smile.io","c":"Read","l":"avro(Path, InputStream)","u":"avro(java.nio.file.Path,java.io.InputStream)"},{"p":"smile.io","c":"Read","l":"avro(Path, Path)","u":"avro(java.nio.file.Path,java.nio.file.Path)"},{"p":"smile.io","c":"Avro","l":"Avro(Schema)","u":"%3Cinit%3E(org.apache.avro.Schema)"},{"p":"smile.io","c":"Read","l":"avro(String, InputStream)","u":"avro(java.lang.String,java.io.InputStream)"},{"p":"smile.io","c":"Read","l":"avro(String, String)","u":"avro(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Config","l":"axis()"},{"p":"smile.plot.vega","c":"Field","l":"axis()"},{"p":"smile.plot.vega","c":"ViewConfig","l":"axis()"},{"p":"smile.plot.swing","c":"Axis","l":"Axis(Base, int)","u":"%3Cinit%3E(smile.plot.swing.Base,int)"},{"p":"smile.math.blas","c":"BLAS","l":"axpy(double, double[], double[])","u":"axpy(double,double[],double[])"},{"p":"smile.math","c":"MathEx","l":"axpy(double, double[], double[])","u":"axpy(double,double[],double[])"},{"p":"smile.math.blas","c":"BLAS","l":"axpy(float, float[], float[])","u":"axpy(float,float[],float[])"},{"p":"smile.math.blas","c":"BLAS","l":"axpy(int, double, double[], int, double[], int)","u":"axpy(int,double,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"axpy(int, double, double[], int, double[], int)","u":"axpy(int,double,double[],int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"axpy(int, float, float[], int, float[], int)","u":"axpy(int,float,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"axpy(int, float, float[], int, float[], int)","u":"axpy(int,float,float[],int,float[],int)"},{"p":"smile.validation.metric","c":"ContingencyTable","l":"b"},{"p":"smile.vq","c":"BIRCH","l":"B"},{"p":"smile.plot.vega","c":"View","l":"background()"},{"p":"smile.plot.vega","c":"Concat","l":"background(String)","u":"background(java.lang.String)"},{"p":"smile.plot.vega","c":"Config","l":"background(String)","u":"background(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"background(String)","u":"background(java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"background(String)","u":"background(java.lang.String)"},{"p":"smile.plot.vega","c":"VegaLite","l":"background(String)","u":"background(java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"background(String)","u":"background(java.lang.String)"},{"p":"smile.base.mlp","c":"Layer","l":"backpopagateDropout()"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"backpropagate(boolean)"},{"p":"smile.base.mlp","c":"HiddenLayer","l":"backpropagate(double[])"},{"p":"smile.base.mlp","c":"InputLayer","l":"backpropagate(double[])"},{"p":"smile.base.mlp","c":"Layer","l":"backpropagate(double[])"},{"p":"smile.base.mlp","c":"OutputLayer","l":"backpropagate(double[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"backward()"},{"p":"smile.validation","c":"Bag","l":"Bag(int[], int[])","u":"%3Cinit%3E(int[],int[])"},{"p":"smile.feature.extraction","c":"BagOfWords","l":"BagOfWords(Function<String, String[]>, String[])","u":"%3Cinit%3E(java.util.function.Function,java.lang.String[])"},{"p":"smile.feature.extraction","c":"BagOfWords","l":"BagOfWords(String[], Function<String, String[]>, String[], boolean)","u":"%3Cinit%3E(java.lang.String[],java.util.function.Function,java.lang.String[],boolean)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"BandMatrix(int, int, int, int)","u":"%3Cinit%3E(int,int,int,int)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"BandMatrix(int, int, int, int)","u":"%3Cinit%3E(int,int,int,int)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"BandMatrix(int, int, int, int, double[][])","u":"%3Cinit%3E(int,int,int,int,double[][])"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"BandMatrix(int, int, int, int, float[][])","u":"%3Cinit%3E(int,int,int,int,float[][])"},{"p":"smile.plot.vega","c":"Axis","l":"bandPosition(double)"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"bandwidth()"},{"p":"smile.plot.vega","c":"DensityTransform","l":"bandwidth(double)"},{"p":"smile.plot.vega","c":"LoessTransform","l":"bandwidth(double)"},{"p":"smile.plot.swing","c":"Bar","l":"Bar(double[][], double, Color)","u":"%3Cinit%3E(double[][],double,java.awt.Color)"},{"p":"smile.plot.swing","c":"BarPlot","l":"BarPlot(Bar...)","u":"%3Cinit%3E(smile.plot.swing.Bar...)"},{"p":"smile.plot.swing","c":"BarPlot","l":"BarPlot(Bar[], Legend[])","u":"%3Cinit%3E(smile.plot.swing.Bar[],smile.plot.swing.Legend[])"},{"p":"smile.plot.swing","c":"Base","l":"Base(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.plot.swing","c":"Base","l":"Base(double[], double[], boolean)","u":"%3Cinit%3E(double[],double[],boolean)"},{"p":"smile.plot.vega","c":"BinParams","l":"base(int)"},{"p":"smile.data","c":"Dataset","l":"batch(int)"},{"p":"smile.deep.layer","c":"Layer","l":"batchNorm1d(int)"},{"p":"smile.deep.layer","c":"Layer","l":"batchNorm1d(int, double, double, boolean)","u":"batchNorm1d(int,double,double,boolean)"},{"p":"smile.deep.layer","c":"BatchNorm1dLayer","l":"BatchNorm1dLayer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.deep.layer","c":"BatchNorm1dLayer","l":"BatchNorm1dLayer(int, double, double, boolean)","u":"%3Cinit%3E(int,double,double,boolean)"},{"p":"smile.deep.layer","c":"Layer","l":"batchNorm2d(int)"},{"p":"smile.deep.layer","c":"Layer","l":"batchNorm2d(int, double, double, boolean)","u":"batchNorm2d(int,double,double,boolean)"},{"p":"smile.deep.layer","c":"BatchNorm2dLayer","l":"BatchNorm2dLayer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.deep.layer","c":"BatchNorm2dLayer","l":"BatchNorm2dLayer(int, double, double, boolean)","u":"%3Cinit%3E(int,double,double,boolean)"},{"p":"smile.clustering","c":"BBDTree","l":"BBDTree(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.math.matrix","c":"ARPACK.SymmOption","l":"BE"},{"p":"smile.math.matrix.fp32","c":"ARPACK.SymmOption","l":"BE"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"BERNOULLI"},{"p":"smile.deep.tensor","c":"Tensor","l":"bernoulli_(double)"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"BernoulliDistribution(boolean[])","u":"%3Cinit%3E(boolean[])"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"BernoulliDistribution(double)","u":"%3Cinit%3E(double)"},{"p":"smile.llm","c":"BERT","l":"BERT()","u":"%3Cinit%3E()"},{"p":"smile.wavelet","c":"BestLocalizedWavelet","l":"BestLocalizedWavelet(int)","u":"%3Cinit%3E(int)"},{"p":"smile.glm","c":"GLM","l":"beta"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"beta"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"beta()"},{"p":"smile.math.special","c":"Beta","l":"beta(double, double)","u":"beta(double,double)"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"BetaDistribution(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math","c":"BFGS","l":"BFGS()","u":"%3Cinit%3E()"},{"p":"smile.deep.tensor","c":"ScalarType","l":"BFloat16"},{"p":"smile.graph","c":"AdjacencyList","l":"bfs()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"bfs()"},{"p":"smile.graph","c":"Graph","l":"bfs()"},{"p":"smile.graph","c":"AdjacencyList","l":"bfs(Visitor)","u":"bfs(smile.graph.Visitor)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"bfs(Visitor)","u":"bfs(smile.graph.Visitor)"},{"p":"smile.graph","c":"Graph","l":"bfs(Visitor)","u":"bfs(smile.graph.Visitor)"},{"p":"smile.base.mlp","c":"Layer","l":"bias"},{"p":"smile.base.mlp","c":"Layer","l":"biasGradient"},{"p":"smile.base.mlp","c":"Layer","l":"biasGradientMoment1"},{"p":"smile.base.mlp","c":"Layer","l":"biasGradientMoment2"},{"p":"smile.base.mlp","c":"Layer","l":"biasUpdate"},{"p":"smile.stat.distribution","c":"DiscreteExponentialFamilyMixture","l":"bic"},{"p":"smile.stat.distribution","c":"ExponentialFamilyMixture","l":"bic"},{"p":"smile.stat.distribution","c":"MultivariateExponentialFamilyMixture","l":"bic"},{"p":"smile.glm","c":"GLM","l":"BIC()"},{"p":"smile.validation","c":"ModelSelection","l":"BIC(double, int, int)","u":"BIC(double,int,int)"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"bic(double[])"},{"p":"smile.stat.distribution","c":"Mixture","l":"bic(double[])"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"bic(double[][])"},{"p":"smile.interpolation","c":"BicubicInterpolation","l":"BicubicInterpolation(double[], double[], double[][])","u":"%3Cinit%3E(double[],double[],double[][])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"BigMatrix(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"BigMatrix(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"BigMatrix(int, int, int, DoublePointer)","u":"%3Cinit%3E(int,int,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.nlp","c":"Bigram","l":"Bigram(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"smile.nlp.collocation","c":"Bigram","l":"Bigram(String, String, int, double)","u":"%3Cinit%3E(java.lang.String,java.lang.String,int,double)"},{"p":"smile.nlp","c":"Corpus","l":"bigrams()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"bigrams()"},{"p":"smile.interpolation","c":"BilinearInterpolation","l":"BilinearInterpolation(double[], double[], double[][])","u":"%3Cinit%3E(double[],double[],double[][])"},{"p":"smile.plot.vega","c":"Field","l":"bin(BinParams)","u":"bin(smile.plot.vega.BinParams)"},{"p":"smile.plot.vega","c":"FacetField","l":"bin(boolean)"},{"p":"smile.plot.vega","c":"Field","l":"bin(boolean)"},{"p":"smile.plot.vega","c":"FacetField","l":"bin(String)","u":"bin(java.lang.String)"},{"p":"smile.plot.vega","c":"Field","l":"bin(String)","u":"bin(java.lang.String)"},{"p":"smile.plot.vega","c":"Transform","l":"bin(String, String)","u":"bin(java.lang.String,java.lang.String)"},{"p":"smile.base.svm","c":"LinearKernelMachine","l":"binary(int, KernelMachine<int[]>)","u":"binary(int,smile.base.svm.KernelMachine)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"binary(String)","u":"binary(java.lang.String)"},{"p":"smile.feature.extraction","c":"BinaryEncoder","l":"BinaryEncoder(StructType, String...)","u":"%3Cinit%3E(smile.data.type.StructType,java.lang.String...)"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"BinarySparseGaussianKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"BinarySparseGaussianKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"BinarySparseHyperbolicTangentKernel()","u":"%3Cinit%3E()"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"BinarySparseHyperbolicTangentKernel(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"BinarySparseHyperbolicTangentKernel(double, double, double[], double[])","u":"%3Cinit%3E(double,double,double[],double[])"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"BinarySparseLaplacianKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"BinarySparseLaplacianKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"BinarySparseLinearKernel()","u":"%3Cinit%3E()"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"BinarySparseMaternKernel(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"BinarySparseMaternKernel(double, double, double, double)","u":"%3Cinit%3E(double,double,double,double)"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"BinarySparsePolynomialKernel(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"BinarySparsePolynomialKernel(int, double, double)","u":"%3Cinit%3E(int,double,double)"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"BinarySparsePolynomialKernel(int, double, double, double[], double[])","u":"%3Cinit%3E(int,double,double,double[],double[])"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"BinarySparseThinPlateSplineKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"BinarySparseThinPlateSplineKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.data.formula","c":"Abs","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"Add","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"Date","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"Div","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"DoubleFunction","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"FactorCrossing","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"FactorInteraction","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"Formula","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"IntFunction","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"Mul","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"Sub","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.data.formula","c":"Term","l":"bind(StructType)","u":"bind(smile.data.type.StructType)"},{"p":"smile.classification","c":"LogisticRegression.Binomial","l":"Binomial(double[], double, double, IntSet)","u":"%3Cinit%3E(double[],double,double,smile.util.IntSet)"},{"p":"smile.classification","c":"Maxent.Binomial","l":"Binomial(double[], double, double, IntSet)","u":"%3Cinit%3E(double[],double,double,smile.util.IntSet)"},{"p":"smile.classification","c":"SparseLogisticRegression.Binomial","l":"Binomial(double[], double, double, IntSet)","u":"%3Cinit%3E(double[],double,double,smile.util.IntSet)"},{"p":"smile.classification","c":"LogisticRegression","l":"binomial(double[][], int[])","u":"binomial(double[][],int[])"},{"p":"smile.classification","c":"LogisticRegression","l":"binomial(double[][], int[], double, double, int)","u":"binomial(double[][],int[],double,double,int)"},{"p":"smile.classification","c":"LogisticRegression","l":"binomial(double[][], int[], Properties)","u":"binomial(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"Maxent","l":"binomial(int, int[][], int[])","u":"binomial(int,int[][],int[])"},{"p":"smile.classification","c":"Maxent","l":"binomial(int, int[][], int[], double, double, int)","u":"binomial(int,int[][],int[],double,double,int)"},{"p":"smile.classification","c":"Maxent","l":"binomial(int, int[][], int[], Properties)","u":"binomial(int,int[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"binomial(SparseDataset<Integer>)","u":"binomial(smile.data.SparseDataset)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"binomial(SparseDataset<Integer>, double, double, int)","u":"binomial(smile.data.SparseDataset,double,double,int)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"binomial(SparseDataset<Integer>, Properties)","u":"binomial(smile.data.SparseDataset,java.util.Properties)"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"BinomialDistribution(int, double)","u":"%3Cinit%3E(int,double)"},{"p":"smile.plot.vega","c":"BinParams","l":"BinParams()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"Histogram","l":"bins(double[], double)","u":"bins(double[],double)"},{"p":"smile.math","c":"Histogram","l":"bins(int)"},{"p":"smile.vq","c":"BIRCH","l":"BIRCH(int, int, int, double)","u":"%3Cinit%3E(int,int,int,double)"},{"p":"smile.gap","c":"BitString","l":"bits()"},{"p":"smile.gap","c":"BitString","l":"BitString(byte[], Fitness<BitString>)","u":"%3Cinit%3E(byte[],smile.gap.Fitness)"},{"p":"smile.gap","c":"BitString","l":"BitString(byte[], Fitness<BitString>, Crossover, double, double)","u":"%3Cinit%3E(byte[],smile.gap.Fitness,smile.gap.Crossover,double,double)"},{"p":"smile.gap","c":"BitString","l":"BitString(int, Fitness<BitString>)","u":"%3Cinit%3E(int,smile.gap.Fitness)"},{"p":"smile.gap","c":"BitString","l":"BitString(int, Fitness<BitString>, Crossover, double, double)","u":"%3Cinit%3E(int,smile.gap.Fitness,smile.gap.Crossover,double,double)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"bk()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"bk()"},{"p":"smile.neighbor","c":"BKTree","l":"BKTree(Metric<K>)","u":"%3Cinit%3E(smile.math.distance.Metric)"},{"p":"smile.plot.swing","c":"Palette","l":"BLACK"},{"p":"smile.math.blas","c":"Diag","l":"blas()"},{"p":"smile.math.blas","c":"Layout","l":"blas()"},{"p":"smile.math.blas","c":"Side","l":"blas()"},{"p":"smile.math.blas","c":"Transpose","l":"blas()"},{"p":"smile.math.blas","c":"UPLO","l":"blas()"},{"p":"smile.plot.vega","c":"Mark","l":"blend(String)","u":"blend(java.lang.String)"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"block()"},{"p":"smile.plot.swing","c":"Palette","l":"BLUE"},{"p":"smile.nlp.relevance","c":"BM25","l":"BM25()","u":"%3Cinit%3E()"},{"p":"smile.nlp.relevance","c":"BM25","l":"BM25(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.nlp","c":"Text","l":"body"},{"p":"smile.data.type","c":"DataType.ID","l":"Boolean"},{"p":"smile.util","c":"Regex","l":"BOOLEAN"},{"p":"smile.util","c":"Regex","l":"BOOLEAN_REGEX"},{"p":"smile.data.type","c":"DataTypes","l":"BooleanArrayType"},{"p":"smile.data.type","c":"DataTypes","l":"BooleanObjectType"},{"p":"smile.data.type","c":"DataTypes","l":"BooleanType"},{"p":"smile.data","c":"DataFrame","l":"booleanVector(Enum<?>)","u":"booleanVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"booleanVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"booleanVector(int)"},{"p":"smile.data","c":"DataFrame","l":"booleanVector(String)","u":"booleanVector(java.lang.String)"},{"p":"smile.plot.vega","c":"Concat","l":"bounds(String)","u":"bounds(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"bounds(String)","u":"bounds(java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"bounds(String)","u":"bounds(java.lang.String)"},{"p":"smile.plot.vega","c":"ViewLayoutComposition","l":"bounds(String)","u":"bounds(java.lang.String)"},{"p":"smile.timeseries","c":"BoxTest.Type","l":"Box_Pierce"},{"p":"smile.data.type","c":"DataType","l":"boxed()"},{"p":"smile.data.type","c":"StructType","l":"boxed(Collection<Tuple>)","u":"boxed(java.util.Collection)"},{"p":"smile.plot.swing","c":"BoxPlot","l":"BoxPlot(double[][], String[])","u":"%3Cinit%3E(double[][],java.lang.String[])"},{"p":"smile.base.cart","c":"InternalNode","l":"branch(Tuple)","u":"branch(smile.data.Tuple)"},{"p":"smile.base.cart","c":"NominalNode","l":"branch(Tuple)","u":"branch(smile.data.Tuple)"},{"p":"smile.base.cart","c":"OrdinalNode","l":"branch(Tuple)","u":"branch(smile.data.Tuple)"},{"p":"smile.nlp.tokenizer","c":"BreakIteratorSentenceSplitter","l":"BreakIteratorSentenceSplitter()","u":"%3Cinit%3E()"},{"p":"smile.nlp.tokenizer","c":"BreakIteratorSentenceSplitter","l":"BreakIteratorSentenceSplitter(Locale)","u":"%3Cinit%3E(java.util.Locale)"},{"p":"smile.nlp.tokenizer","c":"BreakIteratorTokenizer","l":"BreakIteratorTokenizer()","u":"%3Cinit%3E()"},{"p":"smile.nlp.tokenizer","c":"BreakIteratorTokenizer","l":"BreakIteratorTokenizer(Locale)","u":"%3Cinit%3E(java.util.Locale)"},{"p":"smile.feature.selection","c":"InformationValue","l":"breaks"},{"p":"smile.math","c":"Histogram","l":"breaks(double, double, double)","u":"breaks(double,double,double)"},{"p":"smile.math","c":"Histogram","l":"breaks(double, double, int)","u":"breaks(double,double,int)"},{"p":"smile.math","c":"Histogram","l":"breaks(double[], double)","u":"breaks(double[],double)"},{"p":"smile.math","c":"Histogram","l":"breaks(double[], int)","u":"breaks(double[],int)"},{"p":"smile.plot.swing","c":"Palette","l":"BROWN"},{"p":"smile.vq","c":"Neighborhood","l":"bubble(int)"},{"p":"smile.neighbor.lsh","c":"Bucket","l":"bucket"},{"p":"smile.neighbor.lsh","c":"Bucket","l":"Bucket(int)","u":"%3Cinit%3E(int)"},{"p":"smile.hash","c":"PerfectMap.Builder","l":"build()"},{"p":"smile.base.mlp","c":"HiddenLayerBuilder","l":"build(int)"},{"p":"smile.base.mlp","c":"LayerBuilder","l":"build(int)"},{"p":"smile.base.mlp","c":"OutputLayerBuilder","l":"build(int)"},{"p":"smile.hash","c":"PerfectMap.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"smile.hash","c":"PerfectMap.Builder","l":"Builder(Map<String, T>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"smile.base.mlp","c":"Layer","l":"builder(String, int, double, double)","u":"builder(java.lang.String,int,double,double)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"BunchKaufman(SymmMatrix, int[], int)","u":"%3Cinit%3E(smile.math.matrix.fp32.SymmMatrix,int[],int)"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"BunchKaufman(SymmMatrix, int[], int)","u":"%3Cinit%3E(smile.math.matrix.SymmMatrix,int[],int)"},{"p":"smile.plot.swing","c":"Palette","l":"BURGUNDY"},{"p":"smile.swing","c":"Button","l":"Button(Action)","u":"%3Cinit%3E(javax.swing.Action)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"ButtonCellRenderer(JTable, Action, int)","u":"%3Cinit%3E(javax.swing.JTable,javax.swing.Action,int)"},{"p":"smile.data.type","c":"DataType.ID","l":"Byte"},{"p":"smile.swing.table","c":"ByteArrayCellRenderer","l":"ByteArrayCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.data.type","c":"DataTypes","l":"ByteArrayType"},{"p":"smile.data.type","c":"DataTypes","l":"ByteObjectType"},{"p":"smile.util","c":"Bytes","l":"Bytes(byte[])","u":"%3Cinit%3E(byte[])"},{"p":"smile.util","c":"Bytes","l":"Bytes(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.data.type","c":"DataTypes","l":"ByteType"},{"p":"smile.deep.tensor","c":"Tensor","l":"byteValue()"},{"p":"smile.data","c":"DataFrame","l":"byteVector(Enum<?>)","u":"byteVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"byteVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"byteVector(int)"},{"p":"smile.data","c":"DataFrame","l":"byteVector(String)","u":"byteVector(java.lang.String)"},{"p":"smile.math","c":"MathEx","l":"c(double...)"},{"p":"smile.math","c":"MathEx","l":"c(double[]...)"},{"p":"smile.math","c":"MathEx","l":"c(float...)"},{"p":"smile.math","c":"MathEx","l":"c(float[]...)"},{"p":"smile.math","c":"MathEx","l":"c(int...)"},{"p":"smile.math","c":"MathEx","l":"c(int[]...)"},{"p":"smile.math","c":"MathEx","l":"c(String...)","u":"c(java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"c(String[]...)","u":"c(java.lang.String[]...)"},{"p":"smile.plot.swing","c":"Palette","l":"CADET_BLUE"},{"p":"smile.plot.vega","c":"Transform","l":"calculate(String, String)","u":"calculate(java.lang.String,java.lang.String)"},{"p":"smile.swing","c":"FontChooser","l":"CANCEL_OPTION"},{"p":"smile.plot.swing","c":"BarPlot","l":"canvas()"},{"p":"smile.plot.swing","c":"BoxPlot","l":"canvas()"},{"p":"smile.plot.swing","c":"Contour","l":"canvas()"},{"p":"smile.plot.swing","c":"Dendrogram","l":"canvas()"},{"p":"smile.plot.swing","c":"Heatmap","l":"canvas()"},{"p":"smile.plot.swing","c":"Hexmap","l":"canvas()"},{"p":"smile.plot.swing","c":"LinePlot","l":"canvas()"},{"p":"smile.plot.swing","c":"Plot","l":"canvas()"},{"p":"smile.plot.swing","c":"ScreePlot","l":"canvas()"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"canvas()"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"canvas()"},{"p":"smile.plot.swing","c":"Canvas","l":"Canvas(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.plot.swing","c":"Canvas","l":"Canvas(double[], double[], boolean)","u":"%3Cinit%3E(double[],double[],boolean)"},{"p":"smile.util","c":"Regex","l":"CARDINAL_NUMBER"},{"p":"smile.util","c":"Regex","l":"CARDINAL_NUMBER_WITH_COMMA"},{"p":"smile.base.cart","c":"CART","l":"CART(DataFrame, StructField, int, int, int, int, int[], int[][])","u":"%3Cinit%3E(smile.data.DataFrame,smile.data.type.StructField,int,int,int,int,int[],int[][])"},{"p":"smile.base.cart","c":"CART","l":"CART(Formula, StructType, StructField, Node, double[])","u":"%3Cinit%3E(smile.data.formula.Formula,smile.data.type.StructType,smile.data.type.StructField,smile.base.cart.Node,double[])"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"CategoricalMeasure(int[])","u":"%3Cinit%3E(int[])"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"CategoricalMeasure(int[], String[])","u":"%3Cinit%3E(int[],java.lang.String[])"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"CategoricalMeasure(List<String>)","u":"%3Cinit%3E(java.util.List)"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"CategoricalMeasure(String...)","u":"%3Cinit%3E(java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"cbind(double[]...)"},{"p":"smile.math","c":"MathEx","l":"cbind(float[]...)"},{"p":"smile.math","c":"MathEx","l":"cbind(int[]...)"},{"p":"smile.math","c":"MathEx","l":"cbind(String[]...)","u":"cbind(java.lang.String[]...)"},{"p":"smile.data.formula","c":"Terms","l":"cbrt(String)","u":"cbrt(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"cbrt(Term)","u":"cbrt(smile.data.formula.Term)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"CC"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"CD"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"FDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"Mixture","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"TDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"cdf(double)"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"cdf(double[])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"cdf(double[])"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"cdf(double[])"},{"p":"smile.stat.distribution","c":"TDistribution","l":"cdf2tailed(double)"},{"p":"smile.data.formula","c":"Terms","l":"ceil(String)","u":"ceil(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"ceil(Term)","u":"ceil(smile.data.formula.Term)"},{"p":"smile.feature.extraction","c":"PCA","l":"center()"},{"p":"smile.feature.extraction","c":"ProbabilisticPCA","l":"center()"},{"p":"smile.plot.vega","c":"Concat","l":"center(boolean)"},{"p":"smile.plot.vega","c":"Facet","l":"center(boolean)"},{"p":"smile.plot.vega","c":"FacetField","l":"center(boolean)"},{"p":"smile.plot.vega","c":"Repeat","l":"center(boolean)"},{"p":"smile.plot.vega","c":"ViewLayoutComposition","l":"center(boolean)"},{"p":"smile.plot.vega","c":"Projection","l":"center(double, double)","u":"center(double,double)"},{"p":"smile.plot.vega","c":"Concat","l":"center(int, int)","u":"center(int,int)"},{"p":"smile.plot.vega","c":"Facet","l":"center(int, int)","u":"center(int,int)"},{"p":"smile.plot.vega","c":"Repeat","l":"center(int, int)","u":"center(int,int)"},{"p":"smile.plot.vega","c":"ViewLayoutComposition","l":"center(int, int)","u":"center(int,int)"},{"p":"smile.clustering","c":"CentroidClustering","l":"CentroidClustering(double, T[], int[])","u":"%3Cinit%3E(double,T[],int[])"},{"p":"smile.clustering","c":"CentroidClustering","l":"centroids"},{"p":"smile.vq","c":"BIRCH","l":"centroids()"},{"p":"smile.util","c":"PriorityQueue","l":"change(int)"},{"p":"smile.data.type","c":"DataType.ID","l":"Char"},{"p":"smile.data.type","c":"DataTypes","l":"CharArrayType"},{"p":"smile.data.type","c":"DataTypes","l":"CharObjectType"},{"p":"smile.io","c":"CSV","l":"charset(Charset)","u":"charset(java.nio.charset.Charset)"},{"p":"smile.io","c":"JSON","l":"charset(Charset)","u":"charset(java.nio.charset.Charset)"},{"p":"smile.data.type","c":"DataTypes","l":"CharType"},{"p":"smile.data","c":"DataFrame","l":"charVector(Enum<?>)","u":"charVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"charVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"charVector(int)"},{"p":"smile.data","c":"DataFrame","l":"charVector(String)","u":"charVector(java.lang.String)"},{"p":"smile.math.distance","c":"ChebyshevDistance","l":"ChebyshevDistance()","u":"%3Cinit%3E()"},{"p":"smile.taxonomy","c":"Concept","l":"children()"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"chisq"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"ChiSqTest(String, double, double, double)","u":"%3Cinit%3E(java.lang.String,double,double,double)"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"ChiSqTest(String, double, double, double, double)","u":"%3Cinit%3E(java.lang.String,double,double,double,double)"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"ChiSquareDistribution(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"cholesky()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"cholesky()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"cholesky()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"cholesky()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"cholesky()"},{"p":"smile.math.matrix","c":"Matrix","l":"cholesky()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"cholesky()"},{"p":"smile.math.matrix","c":"BandMatrix.Cholesky","l":"Cholesky(BandMatrix)","u":"%3Cinit%3E(smile.math.matrix.BandMatrix)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.Cholesky","l":"Cholesky(BandMatrix)","u":"%3Cinit%3E(smile.math.matrix.fp32.BandMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix.Cholesky","l":"Cholesky(BigMatrix)","u":"%3Cinit%3E(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"cholesky(boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"cholesky(boolean)"},{"p":"smile.math.matrix","c":"Matrix","l":"cholesky(boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix.Cholesky","l":"Cholesky(Matrix)","u":"%3Cinit%3E(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix.Cholesky","l":"Cholesky(Matrix)","u":"%3Cinit%3E(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.Cholesky","l":"Cholesky(SymmMatrix)","u":"%3Cinit%3E(smile.math.matrix.fp32.SymmMatrix)"},{"p":"smile.math.matrix","c":"SymmMatrix.Cholesky","l":"Cholesky(SymmMatrix)","u":"%3Cinit%3E(smile.math.matrix.SymmMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"CholeskyOfAtA()"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"CholeskyOfAtA()"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"CholeskyOfAtA()"},{"p":"smile.math","c":"MathEx","l":"choose(int, int)","u":"choose(int,int)"},{"p":"smile.clustering","c":"CLARANS","l":"CLARANS(double, T[], int[], Distance<T>)","u":"%3Cinit%3E(double,T[],int[],smile.math.distance.Distance)"},{"p":"smile.classification","c":"AbstractClassifier","l":"classes"},{"p":"smile.classification","c":"ClassLabels","l":"classes"},{"p":"smile.classification","c":"AbstractClassifier","l":"classes()"},{"p":"smile.classification","c":"Classifier","l":"classes()"},{"p":"smile.classification","c":"DecisionTree","l":"classes()"},{"p":"smile.classification","c":"MLP","l":"classes()"},{"p":"smile.classification","c":"SVM","l":"classes()"},{"p":"smile.base.cart","c":"SplitRule","l":"CLASSIFICATION_ERROR"},{"p":"smile.validation","c":"LOOCV","l":"classification(Formula, DataFrame, BiFunction<Formula, DataFrame, DataFrameClassifier>)","u":"classification(smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"Bootstrap","l":"classification(int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"classification(int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"classification(int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"classification(int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.vision.transform","c":"Transform","l":"classification(int, int)","u":"classification(int,int)"},{"p":"smile.vision.transform","c":"Transform","l":"classification(int, int, float[], float[], int)","u":"classification(int,int,float[],float[],int)"},{"p":"smile.validation","c":"CrossValidation","l":"classification(int, int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"classification(int,int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"classification(int, int, T[], int[], BiFunction<T[], int[], M>)","u":"classification(int,int,T[],int[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"Bootstrap","l":"classification(int, T[], int[], BiFunction<T[], int[], M>)","u":"classification(int,T[],int[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"classification(int, T[], int[], BiFunction<T[], int[], M>)","u":"classification(int,T[],int[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"LOOCV","l":"classification(T[], int[], BiFunction<T[], int[], M>)","u":"classification(T[],int[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"ClassificationMetrics(double, double, int, int, double)","u":"%3Cinit%3E(double,double,int,int,double)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"ClassificationMetrics(double, double, int, int, double, double)","u":"%3Cinit%3E(double,double,int,int,double,double)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"ClassificationMetrics(double, double, int, int, double, double, double, double, double, double)","u":"%3Cinit%3E(double,double,int,int,double,double,double,double,double,double)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"ClassificationMetrics(double, double, int, int, double, double, double, double, double, double, double, double)","u":"%3Cinit%3E(double,double,int,int,double,double,double,double,double,double,double,double)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"ClassificationMetrics(double, double, int, int, double, double, double, double, double, double, double, double, double)","u":"%3Cinit%3E(double,double,int,int,double,double,double,double,double,double,double,double,double)"},{"p":"smile.validation","c":"ClassificationValidation","l":"ClassificationValidation(M, double, double, int[], int[])","u":"%3Cinit%3E(M,double,double,int[],int[])"},{"p":"smile.validation","c":"ClassificationValidation","l":"ClassificationValidation(M, double, double, int[], int[], double[][])","u":"%3Cinit%3E(M,double,double,int[],int[],double[][])"},{"p":"smile.validation","c":"ClassificationValidations","l":"ClassificationValidations(List<ClassificationValidation<M>>)","u":"%3Cinit%3E(java.util.List)"},{"p":"smile.classification","c":"ClassLabels","l":"ClassLabels(int, int[], IntSet)","u":"%3Cinit%3E(int,int[],smile.util.IntSet)"},{"p":"smile.util","c":"CacheFiles","l":"clean()"},{"p":"smile.base.cart","c":"CART","l":"clear()"},{"p":"smile.plot.swing","c":"Canvas","l":"clear()"},{"p":"smile.util","c":"DoubleArrayList","l":"clear()"},{"p":"smile.util","c":"IntArrayList","l":"clear()"},{"p":"smile.vq","c":"NeuralMap","l":"clear(double)"},{"p":"smile.plot.swing","c":"Graphics","l":"clearClip()"},{"p":"smile.plot.swing","c":"Graphics","l":"clip()"},{"p":"smile.plot.vega","c":"Mark","l":"clip(boolean)"},{"p":"smile.plot.vega","c":"Projection","l":"clipAngle(double)"},{"p":"smile.plot.vega","c":"Projection","l":"clipExtent(double, double, double, double)","u":"clipExtent(double,double,double,double)"},{"p":"smile.plot.vega","c":"Legend","l":"clipHeight(double)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"clipNorm"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"clipValue"},{"p":"smile.deep.tensor","c":"Tensor","l":"clone()"},{"p":"smile.math.matrix","c":"BandMatrix","l":"clone()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"clone()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"clone()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"clone()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"clone()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"clone()"},{"p":"smile.math.matrix","c":"Matrix","l":"clone()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"clone()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"clone()"},{"p":"smile.neighbor.lsh","c":"Probe","l":"clone()"},{"p":"smile.math","c":"MathEx","l":"clone(double[][])"},{"p":"smile.math","c":"MathEx","l":"clone(float[][])"},{"p":"smile.math","c":"MathEx","l":"clone(int[][])"},{"p":"smile.data","c":"SQL","l":"close()"},{"p":"smile.deep","c":"SampleBatch","l":"close()"},{"p":"smile.deep.tensor","c":"Tensor","l":"close()"},{"p":"smile.io","c":"Arff","l":"close()"},{"p":"smile.util","c":"AutoScope","l":"close()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"CLOSING_PARENTHESIS"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"CLOSING_QUOTATION"},{"p":"smile.clustering","c":"BBDTree","l":"clustering(double[][], double[][], int[], int[])","u":"clustering(double[][],double[][],int[],int[])"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"CNB"},{"p":"smile.classification","c":"LogisticRegression.Binomial","l":"coefficients()"},{"p":"smile.classification","c":"LogisticRegression.Multinomial","l":"coefficients()"},{"p":"smile.classification","c":"Maxent.Binomial","l":"coefficients()"},{"p":"smile.classification","c":"Maxent.Multinomial","l":"coefficients()"},{"p":"smile.classification","c":"SparseLogisticRegression.Binomial","l":"coefficients()"},{"p":"smile.classification","c":"SparseLogisticRegression.Multinomial","l":"coefficients()"},{"p":"smile.glm","c":"GLM","l":"coefficients()"},{"p":"smile.regression","c":"LinearModel","l":"coefficients()"},{"p":"smile.data.type","c":"DataType","l":"coerce(DataType, DataType)","u":"coerce(smile.data.type.DataType,smile.data.type.DataType)"},{"p":"smile.wavelet","c":"CoifletWavelet","l":"CoifletWavelet(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.blas","c":"Layout","l":"COL_MAJOR"},{"p":"smile.math.matrix","c":"BigMatrix","l":"col(int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"col(int)"},{"p":"smile.math.matrix","c":"Matrix","l":"col(int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"col(int...)"},{"p":"smile.data","c":"DataFrame.Collectors","l":"collect()"},{"p":"smile.data","c":"DataFrame.Collectors","l":"collect(Class<T>)","u":"collect(java.lang.Class)"},{"p":"smile.data","c":"Dataset","l":"collector()"},{"p":"smile.math.matrix","c":"Matrix","l":"collector()"},{"p":"smile.math","c":"MathEx","l":"colMax(double[][])"},{"p":"smile.math","c":"MathEx","l":"colMax(int[][])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"colMeans()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"colMeans()"},{"p":"smile.math.matrix","c":"Matrix","l":"colMeans()"},{"p":"smile.math","c":"MathEx","l":"colMeans(double[][])"},{"p":"smile.math","c":"MathEx","l":"colMin(double[][])"},{"p":"smile.math","c":"MathEx","l":"colMin(int[][])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"colName(int)"},{"p":"smile.math.matrix","c":"IMatrix","l":"colName(int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"colNames()"},{"p":"smile.math.matrix","c":"IMatrix","l":"colNames()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"colNames(String[])","u":"colNames(java.lang.String[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"colNames(String[])","u":"colNames(java.lang.String[])"},{"p":"smile.deep.tensor","c":"Index","l":"Colon"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"COLON"},{"p":"smile.plot.vega","c":"Mark","l":"color(String)","u":"color(java.lang.String)"},{"p":"smile.swing.table","c":"ColorCellEditor","l":"ColorCellEditor()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"ColorCellRenderer","l":"ColorCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"ColorCellRenderer","l":"ColorCellRenderer(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.plot.swing","c":"Palette","l":"COLORS"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"cols(int...)"},{"p":"smile.math.matrix","c":"Matrix","l":"cols(int...)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"colSds()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"colSds()"},{"p":"smile.math.matrix","c":"Matrix","l":"colSds()"},{"p":"smile.math","c":"MathEx","l":"colSds(double[][])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"colSums()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"colSums()"},{"p":"smile.math.matrix","c":"Matrix","l":"colSums()"},{"p":"smile.math","c":"MathEx","l":"colSums(double[][])"},{"p":"smile.math","c":"MathEx","l":"colSums(int[][])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"column(double[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"column(double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"column(double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"column(double[], int, int)","u":"column(double[],int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"column(double[], int, int)","u":"column(double[],int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"column(double[], int, int)","u":"column(double[],int,int)"},{"p":"smile.data","c":"DataFrame","l":"column(Enum<?>)","u":"column(java.lang.Enum)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"column(float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"column(float[], int, int)","u":"column(float[],int,int)"},{"p":"smile.data","c":"DataFrame","l":"column(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"column(int)"},{"p":"smile.data","c":"DataFrame","l":"column(String)","u":"column(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"column(String)","u":"column(java.lang.String)"},{"p":"smile.swing.table","c":"TableColumnSettings","l":"columnAdded(TableColumnModelEvent)","u":"columnAdded(javax.swing.event.TableColumnModelEvent)"},{"p":"smile.swing.table","c":"TableColumnSettings","l":"columnMarginChanged(ChangeEvent)","u":"columnMarginChanged(javax.swing.event.ChangeEvent)"},{"p":"smile.swing.table","c":"TableColumnSettings","l":"columnMoved(TableColumnModelEvent)","u":"columnMoved(javax.swing.event.TableColumnModelEvent)"},{"p":"smile.plot.vega","c":"Legend","l":"columnPadding(double)"},{"p":"smile.swing.table","c":"TableColumnSettings","l":"columnRemoved(TableColumnModelEvent)","u":"columnRemoved(javax.swing.event.TableColumnModelEvent)"},{"p":"smile.feature.extraction","c":"Projection","l":"columns"},{"p":"smile.plot.vega","c":"Facet","l":"columns(int)"},{"p":"smile.plot.vega","c":"Legend","l":"columns(int)"},{"p":"smile.plot.vega","c":"Repeat","l":"columns(int)"},{"p":"smile.swing.table","c":"TableColumnSettings","l":"columnSelectionChanged(ListSelectionEvent)","u":"columnSelectionChanged(javax.swing.event.ListSelectionEvent)"},{"p":"smile.data.transform","c":"ColumnTransform","l":"ColumnTransform(String, Map<String, Function>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"COMMA"},{"p":"smile.math.blas","c":"SVDJob","l":"COMPACT"},{"p":"smile.base.cart","c":"Split","l":"comparator"},{"p":"smile.nlp.collocation","c":"Bigram","l":"compareTo(Bigram)","u":"compareTo(smile.nlp.collocation.Bigram)"},{"p":"smile.clustering","c":"CentroidClustering","l":"compareTo(CentroidClustering<T, U>)","u":"compareTo(smile.clustering.CentroidClustering)"},{"p":"smile.gap","c":"BitString","l":"compareTo(Chromosome)","u":"compareTo(smile.gap.Chromosome)"},{"p":"smile.feature.selection","c":"InformationValue","l":"compareTo(InformationValue)","u":"compareTo(smile.feature.selection.InformationValue)"},{"p":"smile.clustering","c":"MEC","l":"compareTo(MEC<T>)","u":"compareTo(smile.clustering.MEC)"},{"p":"smile.neighbor","c":"Neighbor","l":"compareTo(Neighbor<K, V>)","u":"compareTo(smile.neighbor.Neighbor)"},{"p":"smile.vq.hebb","c":"Neuron","l":"compareTo(Neuron)","u":"compareTo(smile.vq.hebb.Neuron)"},{"p":"smile.nlp.collocation","c":"NGram","l":"compareTo(NGram)","u":"compareTo(smile.nlp.collocation.NGram)"},{"p":"smile.neighbor.lsh","c":"PrH","l":"compareTo(PrH)","u":"compareTo(smile.neighbor.lsh.PrH)"},{"p":"smile.neighbor.lsh","c":"Probe","l":"compareTo(Probe)","u":"compareTo(smile.neighbor.lsh.Probe)"},{"p":"smile.neighbor.lsh","c":"PrZ","l":"compareTo(PrZ)","u":"compareTo(smile.neighbor.lsh.PrZ)"},{"p":"smile.nlp.relevance","c":"Relevance","l":"compareTo(Relevance)","u":"compareTo(smile.nlp.relevance.Relevance)"},{"p":"smile.feature.selection","c":"SignalNoiseRatio","l":"compareTo(SignalNoiseRatio)","u":"compareTo(smile.feature.selection.SignalNoiseRatio)"},{"p":"smile.feature.selection","c":"SumSquaresRatio","l":"compareTo(SumSquaresRatio)","u":"compareTo(smile.feature.selection.SumSquaresRatio)"},{"p":"smile.clustering.linkage","c":"CompleteLinkage","l":"CompleteLinkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"CompleteLinkage","l":"CompleteLinkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.math","c":"Complex","l":"Complex(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.stat.distribution","c":"DiscreteMixture.Component","l":"Component(double, DiscreteDistribution)","u":"%3Cinit%3E(double,smile.stat.distribution.DiscreteDistribution)"},{"p":"smile.stat.distribution","c":"Mixture.Component","l":"Component(double, Distribution)","u":"%3Cinit%3E(double,smile.stat.distribution.Distribution)"},{"p":"smile.stat.distribution","c":"MultivariateMixture.Component","l":"Component(double, MultivariateDistribution)","u":"%3Cinit%3E(double,smile.stat.distribution.MultivariateDistribution)"},{"p":"smile.ica","c":"ICA","l":"components"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"components"},{"p":"smile.stat.distribution","c":"Mixture","l":"components"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"components"},{"p":"smile.data.transform","c":"Transform","l":"compose(Transform)","u":"compose(smile.data.transform.Transform)"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"COMPREHENSIVE"},{"p":"smile.deep.metric","c":"Accuracy","l":"compute()"},{"p":"smile.deep.metric","c":"Metric","l":"compute()"},{"p":"smile.deep.metric","c":"Precision","l":"compute()"},{"p":"smile.deep.metric","c":"Recall","l":"compute()"},{"p":"smile.base.mlp","c":"InputLayer","l":"computeGradient(double[])"},{"p":"smile.base.mlp","c":"Layer","l":"computeGradient(double[])"},{"p":"smile.base.mlp","c":"InputLayer","l":"computeGradientUpdate(double[], double, double, double)","u":"computeGradientUpdate(double[],double,double,double)"},{"p":"smile.base.mlp","c":"Layer","l":"computeGradientUpdate(double[], double, double, double)","u":"computeGradientUpdate(double[],double,double,double)"},{"p":"smile.base.mlp","c":"OutputLayer","l":"computeOutputGradient(double[], double)","u":"computeOutputGradient(double[],double)"},{"p":"smile.plot.vega","c":"Concat","l":"Concat(int, VegaLite...)","u":"%3Cinit%3E(int,smile.plot.vega.VegaLite...)"},{"p":"smile.taxonomy","c":"Concept","l":"Concept(Concept, String...)","u":"%3Cinit%3E(smile.taxonomy.Concept,java.lang.String...)"},{"p":"smile.nlp.dictionary","c":"EnglishDictionary","l":"CONCISE"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"condition()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"condition()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"condition()"},{"p":"smile.association","c":"AssociationRule","l":"confidence"},{"p":"smile.plot.vega","c":"VegaLite","l":"config()"},{"p":"smile.validation","c":"ClassificationValidation","l":"confusion"},{"p":"smile.validation.metric","c":"ConfusionMatrix","l":"ConfusionMatrix(int[][])","u":"%3Cinit%3E(int[][])"},{"p":"smile.math.blas","c":"Transpose","l":"CONJUGATE_TRANSPOSE"},{"p":"smile.math","c":"Complex","l":"conjugate()"},{"p":"smile.association","c":"AssociationRule","l":"consequent"},{"p":"smile.data.formula","c":"Constant","l":"Constant()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"TimeFunction","l":"constant(double)"},{"p":"smile.math","c":"MathEx","l":"contains(double[][], double, double)","u":"contains(double[][],double,double)"},{"p":"smile.math","c":"MathEx","l":"contains(double[][], double[])","u":"contains(double[][],double[])"},{"p":"smile.util","c":"IntHashSet","l":"contains(int)"},{"p":"smile.nlp.dictionary","c":"Dictionary","l":"contains(String)","u":"contains(java.lang.String)"},{"p":"smile.nlp.dictionary","c":"EnglishDictionary","l":"contains(String)","u":"contains(java.lang.String)"},{"p":"smile.nlp.dictionary","c":"EnglishPunctuations","l":"contains(String)","u":"contains(java.lang.String)"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"contains(String)","u":"contains(java.lang.String)"},{"p":"smile.nlp.dictionary","c":"SimpleDictionary","l":"contains(String)","u":"contains(java.lang.String)"},{"p":"smile.validation.metric","c":"ContingencyTable","l":"ContingencyTable(int[], int[])","u":"%3Cinit%3E(int[],int[])"},{"p":"smile.plot.vega","c":"ViewConfig","l":"continuousHeight(int)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"continuousWidth(int)"},{"p":"smile.plot.swing","c":"Contour","l":"Contour(double[], double[], double[][], double[])","u":"%3Cinit%3E(double[],double[],double[][],double[])"},{"p":"smile.plot.swing","c":"Contour","l":"Contour(double[], double[], double[][], int, boolean)","u":"%3Cinit%3E(double[],double[],double[][],int,boolean)"},{"p":"smile.plot.swing","c":"Contour","l":"Contour(double[][], double[])","u":"%3Cinit%3E(double[][],double[])"},{"p":"smile.plot.swing","c":"Contour","l":"Contour(double[][], int, boolean)","u":"%3Cinit%3E(double[][],int,boolean)"},{"p":"smile.deep.layer","c":"Layer","l":"conv2d(int, int, int)","u":"conv2d(int,int,int)"},{"p":"smile.deep.layer","c":"Layer","l":"conv2d(int, int, int, int, int, int, int, boolean, String)","u":"conv2d(int,int,int,int,int,int,int,boolean,java.lang.String)"},{"p":"smile.deep.layer","c":"Layer","l":"conv2d(int, int, int, int, String, int, int, boolean, String)","u":"conv2d(int,int,int,int,java.lang.String,int,int,boolean,java.lang.String)"},{"p":"smile.deep.layer","c":"Conv2dLayer","l":"Conv2dLayer(int, int, int, int, int, int, int, boolean, String)","u":"%3Cinit%3E(int,int,int,int,int,int,int,boolean,java.lang.String)"},{"p":"smile.deep.layer","c":"Conv2dLayer","l":"Conv2dLayer(int, int, int, int, String, int, int, boolean, String)","u":"%3Cinit%3E(int,int,int,int,java.lang.String,int,int,boolean,java.lang.String)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation","l":"Conv2dNormActivation(Conv2dNormActivation.Options)","u":"%3Cinit%3E(smile.vision.layer.Conv2dNormActivation.Options)"},{"p":"smile.manifold","c":"IsoMap","l":"coordinates"},{"p":"smile.manifold","c":"IsotonicMDS","l":"coordinates"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"coordinates"},{"p":"smile.manifold","c":"LLE","l":"coordinates"},{"p":"smile.manifold","c":"MDS","l":"coordinates"},{"p":"smile.manifold","c":"SammonMapping","l":"coordinates"},{"p":"smile.manifold","c":"TSNE","l":"coordinates"},{"p":"smile.manifold","c":"UMAP","l":"coordinates"},{"p":"smile.manifold","c":"KPCA","l":"coordinates()"},{"p":"smile.math","c":"MathEx","l":"copy(double[][], double[][])","u":"copy(double[][],double[][])"},{"p":"smile.math","c":"MathEx","l":"copy(float[][], float[][])","u":"copy(float[][],float[][])"},{"p":"smile.math","c":"MathEx","l":"copy(int[][], int[][])","u":"copy(int[][],int[][])"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"cor"},{"p":"smile.feature.extraction","c":"PCA","l":"cor(DataFrame, String...)","u":"cor(smile.data.DataFrame,java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"cor(double[], double[])","u":"cor(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"cor(double[][])"},{"p":"smile.math","c":"MathEx","l":"cor(double[][], double[])","u":"cor(double[][],double[])"},{"p":"smile.feature.extraction","c":"PCA","l":"cor(double[][], String...)","u":"cor(double[][],java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"cor(float[], float[])","u":"cor(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"cor(int[], int[])","u":"cor(int[],int[])"},{"p":"smile.plot.vega","c":"Legend","l":"cornerRadius(double)"},{"p":"smile.plot.vega","c":"Mark","l":"cornerRadius(double)"},{"p":"smile.plot.vega","c":"Background","l":"cornerRadius(int)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"cornerRadius(int)"},{"p":"smile.plot.vega","c":"Mark","l":"cornerRadiusBottomLeft(double)"},{"p":"smile.plot.vega","c":"Mark","l":"cornerRadiusBottomRight(double)"},{"p":"smile.plot.vega","c":"Mark","l":"cornerRadiusEnd(double)"},{"p":"smile.plot.vega","c":"Mark","l":"cornerRadiusTopLeft(double)"},{"p":"smile.plot.vega","c":"Mark","l":"cornerRadiusTopRight(double)"},{"p":"smile.math.distance","c":"CorrelationDistance","l":"CorrelationDistance()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"CorrelationDistance","l":"CorrelationDistance(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"CorTest(String, double, double, double, double)","u":"%3Cinit%3E(java.lang.String,double,double,double,double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"cos_()"},{"p":"smile.deep.tensor","c":"Tensor","l":"cos()"},{"p":"smile.math","c":"Complex","l":"cos()"},{"p":"smile.math","c":"MathEx","l":"cos(double[], double[])","u":"cos(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"cos(float[], float[])","u":"cos(float[],float[])"},{"p":"smile.data.formula","c":"Terms","l":"cos(String)","u":"cos(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"cos(Term)","u":"cos(smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Terms","l":"cosh(String)","u":"cosh(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"cosh(Term)","u":"cosh(smile.data.formula.Term)"},{"p":"smile.math","c":"TimeFunction","l":"cosine(double, double, double)","u":"cosine(double,double,double)"},{"p":"smile.base.mlp","c":"OutputLayer","l":"cost()"},{"p":"smile.manifold","c":"TSNE","l":"cost()"},{"p":"smile.nlp.collocation","c":"Bigram","l":"count"},{"p":"smile.nlp.collocation","c":"NGram","l":"count"},{"p":"smile.base.cart","c":"DecisionNode","l":"count()"},{"p":"smile.nlp","c":"Corpus","l":"count(Bigram)","u":"count(smile.nlp.Bigram)"},{"p":"smile.nlp","c":"SimpleCorpus","l":"count(Bigram)","u":"count(smile.nlp.Bigram)"},{"p":"smile.nlp","c":"Corpus","l":"count(String)","u":"count(java.lang.String)"},{"p":"smile.nlp","c":"SimpleCorpus","l":"count(String)","u":"count(java.lang.String)"},{"p":"smile.vq.hebb","c":"Neuron","l":"counter"},{"p":"smile.plot.vega","c":"DensityTransform","l":"counts(boolean)"},{"p":"smile.plot.vega","c":"Config","l":"countTitle(String)","u":"countTitle(java.lang.String)"},{"p":"smile.regression","c":"GaussianProcessRegression.JointPrediction","l":"cov"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"cov()"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"cov()"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"cov()"},{"p":"smile.math","c":"MathEx","l":"cov(double[], double[])","u":"cov(double[],double[])"},{"p":"smile.timeseries","c":"TimeSeries","l":"cov(double[], int)","u":"cov(double[],int)"},{"p":"smile.math","c":"MathEx","l":"cov(double[][])"},{"p":"smile.math","c":"MathEx","l":"cov(double[][], double[])","u":"cov(double[][],double[])"},{"p":"smile.math","c":"MathEx","l":"cov(float[], float[])","u":"cov(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"cov(int[], int[])","u":"cov(int[],int[])"},{"p":"smile.neighbor","c":"CoverTree","l":"CoverTree(K[], V[], Metric<K>)","u":"%3Cinit%3E(K[],V[],smile.math.distance.Metric)"},{"p":"smile.neighbor","c":"CoverTree","l":"CoverTree(K[], V[], Metric<K>, double)","u":"%3Cinit%3E(K[],V[],smile.math.distance.Metric,double)"},{"p":"smile.neighbor","c":"CoverTree","l":"CoverTree(List<K>, List<V>, Metric<K>)","u":"%3Cinit%3E(java.util.List,java.util.List,smile.math.distance.Metric)"},{"p":"smile.neighbor","c":"CoverTree","l":"CoverTree(List<K>, List<V>, Metric<K>, double)","u":"%3Cinit%3E(java.util.List,java.util.List,smile.math.distance.Metric,double)"},{"p":"smile.deep.tensor","c":"DeviceType","l":"CPU"},{"p":"smile.deep.tensor","c":"Device","l":"CPU()"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"CramerV"},{"p":"smile.sequence","c":"CRF","l":"CRF(StructType, RegressionTree[][], double)","u":"%3Cinit%3E(smile.data.type.StructType,smile.regression.RegressionTree[][],double)"},{"p":"smile.sequence","c":"CRFLabeler","l":"CRFLabeler(CRF, Function<T, Tuple>)","u":"%3Cinit%3E(smile.sequence.CRF,java.util.function.Function)"},{"p":"smile.vision.transform","c":"Transform","l":"crop(BufferedImage, int, boolean)","u":"crop(java.awt.image.BufferedImage,int,boolean)"},{"p":"smile.vision.transform","c":"Transform","l":"crop(BufferedImage, int, int, boolean)","u":"crop(java.awt.image.BufferedImage,int,int,boolean)"},{"p":"smile.data.formula","c":"Terms","l":"cross(int, String...)","u":"cross(int,java.lang.String...)"},{"p":"smile.data.formula","c":"Terms","l":"cross(String...)","u":"cross(java.lang.String...)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"crossentropy"},{"p":"smile.deep","c":"Loss","l":"crossEntropy()"},{"p":"smile.gap","c":"BitString","l":"crossover(Chromosome)","u":"crossover(smile.gap.Chromosome)"},{"p":"smile.gap","c":"Chromosome","l":"crossover(Chromosome)","u":"crossover(smile.gap.Chromosome)"},{"p":"smile.io","c":"CSV","l":"CSV()","u":"%3Cinit%3E()"},{"p":"smile.io","c":"CSV","l":"CSV(CSVFormat)","u":"%3Cinit%3E(org.apache.commons.csv.CSVFormat)"},{"p":"smile.io","c":"Write","l":"csv(DataFrame, Path)","u":"csv(smile.data.DataFrame,java.nio.file.Path)"},{"p":"smile.io","c":"Write","l":"csv(DataFrame, Path, CSVFormat)","u":"csv(smile.data.DataFrame,java.nio.file.Path,org.apache.commons.csv.CSVFormat)"},{"p":"smile.io","c":"Read","l":"csv(Path)","u":"csv(java.nio.file.Path)"},{"p":"smile.io","c":"Read","l":"csv(Path, CSVFormat)","u":"csv(java.nio.file.Path,org.apache.commons.csv.CSVFormat)"},{"p":"smile.io","c":"Read","l":"csv(Path, CSVFormat, StructType)","u":"csv(java.nio.file.Path,org.apache.commons.csv.CSVFormat,smile.data.type.StructType)"},{"p":"smile.io","c":"Read","l":"csv(String)","u":"csv(java.lang.String)"},{"p":"smile.data","c":"SQL","l":"csv(String, char, Map<String, String>, String...)","u":"csv(java.lang.String,char,java.util.Map,java.lang.String...)"},{"p":"smile.io","c":"Read","l":"csv(String, CSVFormat)","u":"csv(java.lang.String,org.apache.commons.csv.CSVFormat)"},{"p":"smile.io","c":"Read","l":"csv(String, CSVFormat, StructType)","u":"csv(java.lang.String,org.apache.commons.csv.CSVFormat,smile.data.type.StructType)"},{"p":"smile.plot.vega","c":"Data","l":"csv(String, Map<String, String>)","u":"csv(java.lang.String,java.util.Map)"},{"p":"smile.io","c":"Read","l":"csv(String, String)","u":"csv(java.lang.String,java.lang.String)"},{"p":"smile.data","c":"SQL","l":"csv(String, String...)","u":"csv(java.lang.String,java.lang.String...)"},{"p":"smile.interpolation","c":"CubicSplineInterpolation1D","l":"CubicSplineInterpolation1D(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.interpolation","c":"CubicSplineInterpolation2D","l":"CubicSplineInterpolation2D(double[], double[], double[][])","u":"%3Cinit%3E(double[],double[],double[][])"},{"p":"smile.deep.tensor","c":"DeviceType","l":"CUDA"},{"p":"smile.deep.tensor","c":"Device","l":"CUDA()"},{"p":"smile.deep.tensor","c":"Device","l":"CUDA(byte)"},{"p":"smile.plot.vega","c":"DensityTransform","l":"cumulative(boolean)"},{"p":"smile.feature.extraction","c":"PCA","l":"cumulativeVarianceProportion()"},{"p":"smile.data.measure","c":"Measure","l":"Currency"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"CURRENCY"},{"p":"smile.plot.vega","c":"Background","l":"cursor(String)","u":"cursor(java.lang.String)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"cursor(String)","u":"cursor(java.lang.String)"},{"p":"smile.plot.vega","c":"FormatConfig","l":"customFormatTypes(boolean)"},{"p":"smile.plot.swing","c":"Palette","l":"CYAN"},{"p":"smile.stat.hypothesis","c":"KSTest","l":"d"},{"p":"smile.vq","c":"BIRCH","l":"d"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(BitSet, BitSet)","u":"d(java.util.BitSet,java.util.BitSet)"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(byte, byte)","u":"d(byte,byte)"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(byte[], byte[])","u":"d(byte[],byte[])"},{"p":"smile.math.distance","c":"EditDistance","l":"d(char[], char[])","u":"d(char[],char[])"},{"p":"smile.taxonomy","c":"TaxonomicDistance","l":"d(Concept, Concept)","u":"d(smile.taxonomy.Concept,smile.taxonomy.Concept)"},{"p":"smile.math.distance","c":"ChebyshevDistance","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"CorrelationDistance","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"EuclideanDistance","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"JensenShannonDistance","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"MahalanobisDistance","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"ManhattanDistance","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"MinkowskiDistance","l":"d(double[], double[])","u":"d(double[],double[])"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"d(double[], double[], int)","u":"d(double[],double[],int)"},{"p":"smile.math.distance","c":"ChebyshevDistance","l":"d(float[], float[])","u":"d(float[],float[])"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"d(float[], float[])","u":"d(float[],float[])"},{"p":"smile.math.distance","c":"EuclideanDistance","l":"d(float[], float[])","u":"d(float[],float[])"},{"p":"smile.math.distance","c":"ManhattanDistance","l":"d(float[], float[])","u":"d(float[],float[])"},{"p":"smile.math.distance","c":"MinkowskiDistance","l":"d(float[], float[])","u":"d(float[],float[])"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"d(float[], float[], int)","u":"d(float[],float[],int)"},{"p":"smile.clustering.linkage","c":"Linkage","l":"d(int, int)","u":"d(int,int)"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(int, int)","u":"d(int,int)"},{"p":"smile.math.distance","c":"ChebyshevDistance","l":"d(int[], int[])","u":"d(int[],int[])"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"d(int[], int[])","u":"d(int[],int[])"},{"p":"smile.math.distance","c":"EuclideanDistance","l":"d(int[], int[])","u":"d(int[],int[])"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(int[], int[])","u":"d(int[],int[])"},{"p":"smile.math.distance","c":"LeeDistance","l":"d(int[], int[])","u":"d(int[],int[])"},{"p":"smile.math.distance","c":"ManhattanDistance","l":"d(int[], int[])","u":"d(int[],int[])"},{"p":"smile.math.distance","c":"MinkowskiDistance","l":"d(int[], int[])","u":"d(int[],int[])"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"d(int[], int[], int)","u":"d(int[],int[],int)"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(long, long)","u":"d(long,long)"},{"p":"smile.math.distance","c":"JaccardDistance","l":"d(Set<T>, Set<T>)","u":"d(java.util.Set,java.util.Set)"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(short, short)","u":"d(short,short)"},{"p":"smile.math.distance","c":"HammingDistance","l":"d(short[], short[])","u":"d(short[],short[])"},{"p":"smile.math.distance","c":"SparseChebyshevDistance","l":"d(SparseArray, SparseArray)","u":"d(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.distance","c":"SparseEuclideanDistance","l":"d(SparseArray, SparseArray)","u":"d(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.distance","c":"SparseManhattanDistance","l":"d(SparseArray, SparseArray)","u":"d(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.distance","c":"SparseMinkowskiDistance","l":"d(SparseArray, SparseArray)","u":"d(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.distance","c":"EditDistance","l":"d(String, String)","u":"d(java.lang.String,java.lang.String)"},{"p":"smile.taxonomy","c":"TaxonomicDistance","l":"d(String, String)","u":"d(java.lang.String,java.lang.String)"},{"p":"smile.math.distance","c":"Distance","l":"d(T, T)","u":"d(T,T)"},{"p":"smile.math.distance","c":"Distance","l":"D(T[])"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"d(T[], T[])","u":"d(T[],T[])"},{"p":"smile.math.distance","c":"JaccardDistance","l":"d(T[], T[])","u":"d(T[],T[])"},{"p":"smile.math.distance","c":"Distance","l":"D(T[], T[])","u":"D(T[],T[])"},{"p":"smile.wavelet","c":"D4Wavelet","l":"D4Wavelet()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"EditDistance","l":"damerau(char[], char[])","u":"damerau(char[],char[])"},{"p":"smile.math.distance","c":"EditDistance","l":"damerau(String, String)","u":"damerau(java.lang.String,java.lang.String)"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_BLUE"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_CYAN"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_GRAY"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_GREEN"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_MAGENTA"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_PURPLE"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_RED"},{"p":"smile.plot.swing","c":"Palette","l":"DARK_SLATE_GRAY"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"DASH"},{"p":"smile.plot.swing","c":"Line.Style","l":"DASH"},{"p":"smile.neighbor","c":"LSH","l":"data"},{"p":"smile.deep","c":"SampleBatch","l":"data()"},{"p":"smile.plot.vega","c":"LookupData","l":"data()"},{"p":"smile.plot.vega","c":"VegaLite","l":"data()"},{"p":"smile.io","c":"Read","l":"data(String)","u":"data(java.lang.String)"},{"p":"smile.io","c":"Read","l":"data(String, String)","u":"data(java.lang.String,java.lang.String)"},{"p":"smile.data.type","c":"DataTypes","l":"DataTypes()","u":"%3Cinit%3E()"},{"p":"smile.data.type","c":"DataType.ID","l":"Date"},{"p":"smile.util","c":"Regex","l":"DATE"},{"p":"smile.data.type","c":"DataTypes","l":"date(String)","u":"date(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"date(String, DateFeature...)","u":"date(java.lang.String,smile.data.formula.DateFeature...)"},{"p":"smile.data.formula","c":"Date","l":"Date(String, DateFeature...)","u":"%3Cinit%3E(java.lang.String,smile.data.formula.DateFeature...)"},{"p":"smile.swing.table","c":"DateCellEditor","l":"DateCellEditor(DateFormat)","u":"%3Cinit%3E(java.text.DateFormat)"},{"p":"smile.swing.table","c":"DateCellEditor","l":"DateCellEditor(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"DateCellRenderer(DateFormat)","u":"%3Cinit%3E(java.text.DateFormat)"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"DateCellRenderer(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.data.type","c":"DataType.ID","l":"DateTime"},{"p":"smile.util","c":"Regex","l":"DATETIME"},{"p":"smile.data.type","c":"DataTypes","l":"datetime(String)","u":"datetime(java.lang.String)"},{"p":"smile.data.type","c":"DataTypes","l":"DateTimeType"},{"p":"smile.data.type","c":"DateTimeType","l":"DateTimeType(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.data.type","c":"DataTypes","l":"DateType"},{"p":"smile.data.type","c":"DateType","l":"DateType(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.wavelet","c":"DaubechiesWavelet","l":"DaubechiesWavelet(int)","u":"%3Cinit%3E(int)"},{"p":"smile.data.formula","c":"DateFeature","l":"DAY_OF_MONTH"},{"p":"smile.data.formula","c":"DateFeature","l":"DAY_OF_WEEK"},{"p":"smile.data.formula","c":"DateFeature","l":"DAY_OF_YEAR"},{"p":"smile.clustering","c":"DBSCAN","l":"DBSCAN(int, double, RNNSearch<T, T>, int, int[], boolean[])","u":"%3Cinit%3E(int,double,smile.neighbor.RNNSearch,int,int[],boolean[])"},{"p":"smile.data.type","c":"DataType.ID","l":"Decimal"},{"p":"smile.util","c":"Strings","l":"DECIMAL_FORMAT"},{"p":"smile.data.type","c":"DataTypes","l":"DecimalType"},{"p":"smile.base.cart","c":"DecisionNode","l":"DecisionNode(int[])","u":"%3Cinit%3E(int[])"},{"p":"smile.classification","c":"DecisionTree","l":"DecisionTree(DataFrame, int[], StructField, int, SplitRule, int, int, int, int, int[], int[][])","u":"%3Cinit%3E(smile.data.DataFrame,int[],smile.data.type.StructField,int,smile.base.cart.SplitRule,int,int,int,int,int[],int[][])"},{"p":"smile.llm.tokenizer","c":"SentencePiece","l":"decode(int[])"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"decode(int[])"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"decode(int[])"},{"p":"smile.util","c":"MutableInt","l":"decrement()"},{"p":"smile.util","c":"MutableInt","l":"decrement(int)"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"DEFAULT"},{"p":"smile.vision.transform","c":"Transform","l":"DEFAULT_MEAN"},{"p":"smile.vision.transform","c":"Transform","l":"DEFAULT_STD"},{"p":"smile.swing.table","c":"DefaultTableHeaderCellRenderer","l":"DefaultTableHeaderCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.math.kernel","c":"Polynomial","l":"degree()"},{"p":"smile.data.formula","c":"Terms","l":"delete(String)","u":"delete(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"delete(Term)","u":"delete(smile.data.formula.Term)"},{"p":"smile.clustering","c":"DENCLUE","l":"DENCLUE(int, double[][], double[], double[][], double, int[], double)","u":"%3Cinit%3E(int,double[][],double[],double[][],double,int[],double)"},{"p":"smile.plot.swing","c":"Dendrogram","l":"Dendrogram(int[][], double[])","u":"%3Cinit%3E(int[][],double[])"},{"p":"smile.plot.swing","c":"Dendrogram","l":"Dendrogram(int[][], double[], Color)","u":"%3Cinit%3E(int[][],double[],java.awt.Color)"},{"p":"smile.wavelet","c":"WaveletShrinkage","l":"denoise(double[], Wavelet)","u":"denoise(double[],smile.wavelet.Wavelet)"},{"p":"smile.wavelet","c":"WaveletShrinkage","l":"denoise(double[], Wavelet, boolean)","u":"denoise(double[],smile.wavelet.Wavelet,boolean)"},{"p":"smile.plot.vega","c":"Transform","l":"density(String, String...)","u":"density(java.lang.String,java.lang.String...)"},{"p":"smile.base.cart","c":"InternalNode","l":"depth()"},{"p":"smile.base.cart","c":"LeafNode","l":"depth()"},{"p":"smile.base.cart","c":"Node","l":"depth()"},{"p":"smile.data","c":"SQL","l":"describe(String)","u":"describe(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.plot.vega","c":"Concat","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.plot.vega","c":"VegaLite","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"description(String)","u":"description(java.lang.String)"},{"p":"smile.math.matrix","c":"BandMatrix.Cholesky","l":"det()"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"det()"},{"p":"smile.math.matrix","c":"BigMatrix.Cholesky","l":"det()"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"det()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.Cholesky","l":"det()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"det()"},{"p":"smile.math.matrix.fp32","c":"Matrix.Cholesky","l":"det()"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"det()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"det()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.Cholesky","l":"det()"},{"p":"smile.math.matrix","c":"Matrix.Cholesky","l":"det()"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"det()"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"det()"},{"p":"smile.math.matrix","c":"SymmMatrix.Cholesky","l":"det()"},{"p":"smile.deep.tensor","c":"Tensor","l":"detach()"},{"p":"smile.util","c":"AutoScope","l":"detach(AutoCloseable...)","u":"detach(java.lang.AutoCloseable...)"},{"p":"smile.clustering","c":"DeterministicAnnealing","l":"DeterministicAnnealing(double, double[][], int[])","u":"%3Cinit%3E(double,double[][],int[])"},{"p":"smile.glm","c":"GLM","l":"deviance"},{"p":"smile.base.cart","c":"DecisionNode","l":"deviance()"},{"p":"smile.base.cart","c":"InternalNode","l":"deviance()"},{"p":"smile.base.cart","c":"Node","l":"deviance()"},{"p":"smile.base.cart","c":"RegressionNode","l":"deviance()"},{"p":"smile.glm","c":"GLM","l":"deviance()"},{"p":"smile.glm.model","c":"Model","l":"deviance(double[], double[], double[])","u":"deviance(double[],double[],double[])"},{"p":"smile.base.cart","c":"DecisionNode","l":"deviance(int[], double[])","u":"deviance(int[],double[])"},{"p":"smile.glm","c":"GLM","l":"devianceResiduals"},{"p":"smile.glm","c":"GLM","l":"devianceResiduals()"},{"p":"smile.deep","c":"CUDA","l":"device()"},{"p":"smile.deep","c":"Model","l":"device()"},{"p":"smile.deep.tensor","c":"Tensor","l":"device()"},{"p":"smile.deep","c":"CUDA","l":"device(byte)"},{"p":"smile.deep.tensor","c":"Tensor.Options","l":"device(Device)","u":"device(smile.deep.tensor.Device)"},{"p":"smile.deep.tensor","c":"Device","l":"Device(DeviceType)","u":"%3Cinit%3E(smile.deep.tensor.DeviceType)"},{"p":"smile.deep.tensor","c":"Device","l":"Device(DeviceType, byte)","u":"%3Cinit%3E(smile.deep.tensor.DeviceType,byte)"},{"p":"smile.deep","c":"CUDA","l":"deviceCount()"},{"p":"smile.glm","c":"GLM","l":"df"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"df"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"df"},{"p":"smile.stat.hypothesis","c":"TTest","l":"df"},{"p":"smile.timeseries","c":"BoxTest","l":"df"},{"p":"smile.regression","c":"LinearModel","l":"df()"},{"p":"smile.timeseries","c":"AR","l":"df()"},{"p":"smile.timeseries","c":"ARMA","l":"df()"},{"p":"smile.stat.hypothesis","c":"FTest","l":"df1"},{"p":"smile.stat.hypothesis","c":"FTest","l":"df2"},{"p":"smile.graph","c":"AdjacencyList","l":"dfs()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"dfs()"},{"p":"smile.graph","c":"Graph","l":"dfs()"},{"p":"smile.graph","c":"AdjacencyList","l":"dfs(Visitor)","u":"dfs(smile.graph.Visitor)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"dfs(Visitor)","u":"dfs(smile.graph.Visitor)"},{"p":"smile.graph","c":"Graph","l":"dfs(Visitor)","u":"dfs(smile.graph.Visitor)"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"diag()"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"diag()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"diag()"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"diag()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"diag()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"diag()"},{"p":"smile.math.matrix","c":"IMatrix","l":"diag()"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"diag()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"diag()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"diag()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"diag(double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"diag(double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"diag(DoublePointer)","u":"diag(org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"diag(float[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"diag(int, double)","u":"diag(int,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"diag(int, double)","u":"diag(int,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"diag(int, float)","u":"diag(int,float)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"diag(int, int, double)","u":"diag(int,int,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"diag(int, int, double)","u":"diag(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"diag(int, int, float)","u":"diag(int,int,float)"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"diagonal"},{"p":"smile.swing","c":"FontChooser","l":"dialogResultValue"},{"p":"smile.timeseries","c":"TimeSeries","l":"diff(double[], int)","u":"diff(double[],int)"},{"p":"smile.timeseries","c":"TimeSeries","l":"diff(double[], int, int)","u":"diff(double[],int,int)"},{"p":"smile.math.special","c":"Gamma","l":"digamma(double)"},{"p":"smile.math","c":"MathEx","l":"DIGITS"},{"p":"smile.graph","c":"Graph","l":"dijkstra()"},{"p":"smile.graph","c":"AdjacencyList","l":"dijkstra(int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"dijkstra(int)"},{"p":"smile.graph","c":"Graph","l":"dijkstra(int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"dijkstra(int, boolean)","u":"dijkstra(int,boolean)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"dilation()"},{"p":"smile.deep.tensor","c":"Tensor","l":"dim()"},{"p":"smile.classification","c":"Maxent","l":"dimension()"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"dimension()"},{"p":"smile.llm","c":"Transformer.Options","l":"dimFeedForward()"},{"p":"smile.util","c":"CacheFiles","l":"dir()"},{"p":"smile.plot.vega","c":"Legend","l":"direction(String)","u":"direction(java.lang.String)"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"DiscreteDistribution()","u":"%3Cinit%3E()"},{"p":"smile.stat.distribution","c":"DiscreteExponentialFamilyMixture","l":"DiscreteExponentialFamilyMixture(DiscreteMixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.DiscreteMixture.Component...)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"discreteHeight(int)"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"DiscreteMixture(DiscreteMixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.DiscreteMixture.Component...)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"DiscreteNaiveBayes(DiscreteNaiveBayes.Model, double[], int)","u":"%3Cinit%3E(smile.classification.DiscreteNaiveBayes.Model,double[],int)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"DiscreteNaiveBayes(DiscreteNaiveBayes.Model, double[], int, double, IntSet)","u":"%3Cinit%3E(smile.classification.DiscreteNaiveBayes.Model,double[],int,double,smile.util.IntSet)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"DiscreteNaiveBayes(DiscreteNaiveBayes.Model, int, int)","u":"%3Cinit%3E(smile.classification.DiscreteNaiveBayes.Model,int,int)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"DiscreteNaiveBayes(DiscreteNaiveBayes.Model, int, int, double, IntSet)","u":"%3Cinit%3E(smile.classification.DiscreteNaiveBayes.Model,int,int,double,smile.util.IntSet)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"discreteWidth(int)"},{"p":"smile.neighbor","c":"Neighbor","l":"distance"},{"p":"smile.vq.hebb","c":"Neuron","l":"distance"},{"p":"smile.vq.hebb","c":"Neuron","l":"distance(double[])"},{"p":"smile.clustering","c":"DeterministicAnnealing","l":"distance(double[], double[])","u":"distance(double[],double[])"},{"p":"smile.clustering","c":"GMeans","l":"distance(double[], double[])","u":"distance(double[],double[])"},{"p":"smile.clustering","c":"KMeans","l":"distance(double[], double[])","u":"distance(double[],double[])"},{"p":"smile.clustering","c":"XMeans","l":"distance(double[], double[])","u":"distance(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"distance(double[], double[])","u":"distance(double[],double[])"},{"p":"smile.clustering","c":"SIB","l":"distance(double[], SparseArray)","u":"distance(double[],smile.util.SparseArray)"},{"p":"smile.math","c":"MathEx","l":"distance(float[], float[])","u":"distance(float[],float[])"},{"p":"smile.clustering","c":"KModes","l":"distance(int[], int[])","u":"distance(int[],int[])"},{"p":"smile.math","c":"MathEx","l":"distance(int[], int[])","u":"distance(int[],int[])"},{"p":"smile.math","c":"MathEx","l":"distance(SparseArray, SparseArray)","u":"distance(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.clustering","c":"CLARANS","l":"distance(T, T)","u":"distance(T,T)"},{"p":"smile.clustering","c":"CentroidClustering","l":"distance(T, U)","u":"distance(T,U)"},{"p":"smile.data.vector","c":"Vector","l":"distinct()"},{"p":"smile.clustering","c":"CentroidClustering","l":"distortion"},{"p":"smile.clustering","c":"SpectralClustering","l":"distortion"},{"p":"smile.stat.distribution","c":"DiscreteMixture.Component","l":"distribution"},{"p":"smile.stat.distribution","c":"Mixture.Component","l":"distribution"},{"p":"smile.stat.distribution","c":"MultivariateMixture.Component","l":"distribution"},{"p":"smile.deep.tensor","c":"Tensor","l":"div_(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"div_(float)"},{"p":"smile.deep.tensor","c":"Tensor","l":"div_(Tensor)","u":"div_(smile.deep.tensor.Tensor)"},{"p":"smile.util","c":"Array2D","l":"div(Array2D)","u":"div(smile.util.Array2D)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"div(BigMatrix)","u":"div(smile.math.matrix.BigMatrix)"},{"p":"smile.math","c":"Complex","l":"div(Complex)","u":"div(smile.math.Complex)"},{"p":"smile.deep.tensor","c":"Tensor","l":"div(double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"div(double)"},{"p":"smile.math.matrix","c":"Matrix","l":"div(double)"},{"p":"smile.util","c":"Array2D","l":"div(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"div(float)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"div(float)"},{"p":"smile.util","c":"IntArray2D","l":"div(int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"div(int, int, double)","u":"div(int,int,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"div(int, int, double)","u":"div(int,int,double)"},{"p":"smile.util","c":"Array2D","l":"div(int, int, double)","u":"div(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"div(int, int, float)","u":"div(int,int,float)"},{"p":"smile.util","c":"IntArray2D","l":"div(int, int, int)","u":"div(int,int,int)"},{"p":"smile.util","c":"IntArray2D","l":"div(IntArray2D)","u":"div(smile.util.IntArray2D)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"div(Matrix)","u":"div(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"div(Matrix)","u":"div(smile.math.matrix.Matrix)"},{"p":"smile.data.formula","c":"Terms","l":"div(String, String)","u":"div(java.lang.String,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"div(String, Term)","u":"div(java.lang.String,smile.data.formula.Term)"},{"p":"smile.deep.tensor","c":"Tensor","l":"div(Tensor)","u":"div(smile.deep.tensor.Tensor)"},{"p":"smile.data.formula","c":"Terms","l":"div(Term, String)","u":"div(smile.data.formula.Term,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"div(Term, Term)","u":"div(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Div","l":"Div(Term, Term)","u":"%3Cinit%3E(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.plot.vega","c":"BinParams","l":"divide(int...)"},{"p":"smile.glm.model","c":"Model","l":"dlink(double)"},{"p":"smile.llm","c":"Transformer.Options","l":"dModel()"},{"p":"smile.plot.vega","c":"Axis","l":"domain(boolean)"},{"p":"smile.plot.vega","c":"Field","l":"domain(double...)"},{"p":"smile.plot.vega","c":"Field","l":"domain(String...)","u":"domain(java.lang.String...)"},{"p":"smile.plot.vega","c":"Axis","l":"domainCap(String)","u":"domainCap(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"domainColor(String)","u":"domainColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"domainDash(double, double)","u":"domainDash(double,double)"},{"p":"smile.plot.vega","c":"Axis","l":"domainDashOffset(double)"},{"p":"smile.plot.vega","c":"Field","l":"domainMax(double)"},{"p":"smile.plot.vega","c":"Field","l":"domainMax(String)","u":"domainMax(java.lang.String)"},{"p":"smile.plot.vega","c":"Field","l":"domainMin(double)"},{"p":"smile.plot.vega","c":"Field","l":"domainMin(String)","u":"domainMin(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"domainOpacity(double)"},{"p":"smile.plot.vega","c":"Axis","l":"domainWidth(double)"},{"p":"smile.plot.swing","c":"Line.Style","l":"DOT"},{"p":"smile.plot.swing","c":"Line.Style","l":"DOT_DASH"},{"p":"smile.base.cart","c":"CART","l":"dot()"},{"p":"smile.data.formula","c":"Terms","l":"dot()"},{"p":"smile.math.blas","c":"BLAS","l":"dot(double[], double[])","u":"dot(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"dot(double[], double[])","u":"dot(double[],double[])"},{"p":"smile.math.blas","c":"BLAS","l":"dot(float[], float[])","u":"dot(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"dot(float[], float[])","u":"dot(float[],float[])"},{"p":"smile.math.blas","c":"BLAS","l":"dot(int, double[], int, double[], int)","u":"dot(int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"dot(int, double[], int, double[], int)","u":"dot(int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"dot(int, float[], int, float[], int)","u":"dot(int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"dot(int, float[], int, float[], int)","u":"dot(int,float[],int,float[],int)"},{"p":"smile.math","c":"MathEx","l":"dot(int[], int[])","u":"dot(int[],int[])"},{"p":"smile.math","c":"MathEx","l":"dot(SparseArray, SparseArray)","u":"dot(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.base.cart","c":"DecisionNode","l":"dot(StructType, StructField, int)","u":"dot(smile.data.type.StructType,smile.data.type.StructField,int)"},{"p":"smile.base.cart","c":"Node","l":"dot(StructType, StructField, int)","u":"dot(smile.data.type.StructType,smile.data.type.StructField,int)"},{"p":"smile.base.cart","c":"NominalNode","l":"dot(StructType, StructField, int)","u":"dot(smile.data.type.StructType,smile.data.type.StructField,int)"},{"p":"smile.base.cart","c":"OrdinalNode","l":"dot(StructType, StructField, int)","u":"dot(smile.data.type.StructType,smile.data.type.StructField,int)"},{"p":"smile.base.cart","c":"RegressionNode","l":"dot(StructType, StructField, int)","u":"dot(smile.data.type.StructType,smile.data.type.StructField,int)"},{"p":"smile.data.type","c":"DataType.ID","l":"Double"},{"p":"smile.util","c":"Regex","l":"DOUBLE"},{"p":"smile.util","c":"Regex","l":"DOUBLE_REGEX"},{"p":"smile.swing.table","c":"DoubleArrayCellEditor","l":"DoubleArrayCellEditor()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"DoubleArrayCellRenderer","l":"DoubleArrayCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"DoubleArrayList","l":"DoubleArrayList()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"DoubleArrayList","l":"DoubleArrayList(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.util","c":"DoubleArrayList","l":"DoubleArrayList(int)","u":"%3Cinit%3E(int)"},{"p":"smile.data.type","c":"DataTypes","l":"DoubleArrayType"},{"p":"smile.swing.table","c":"DoubleCellEditor","l":"DoubleCellEditor()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"DoubleCellEditor","l":"DoubleCellEditor(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.data.formula","c":"DoubleFunction","l":"DoubleFunction(String, Term, Function)","u":"%3Cinit%3E(java.lang.String,smile.data.formula.Term,smile.math.Function)"},{"p":"smile.sort","c":"DoubleHeapSelect","l":"DoubleHeapSelect(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.sort","c":"DoubleHeapSelect","l":"DoubleHeapSelect(int)","u":"%3Cinit%3E(int)"},{"p":"smile.data.type","c":"DataTypes","l":"DoubleObjectType"},{"p":"smile.data.type","c":"DataTypes","l":"DoubleType"},{"p":"smile.deep.tensor","c":"Tensor","l":"doubleValue()"},{"p":"smile.data","c":"DataFrame","l":"doubleVector(Enum<?>)","u":"doubleVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"doubleVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"doubleVector(int)"},{"p":"smile.data","c":"DataFrame","l":"doubleVector(String)","u":"doubleVector(java.lang.String)"},{"p":"smile.util","c":"CacheFiles","l":"download(String)","u":"download(java.lang.String)"},{"p":"smile.util","c":"CacheFiles","l":"download(String, boolean)","u":"download(java.lang.String,boolean)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawLine(double[]...)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawLineBaseRatio(double[]...)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawPoint(char, double...)","u":"drawPoint(char,double...)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawPoint(double...)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawPolygon(double[]...)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawRect(double[], double[])","u":"drawRect(double[],double[])"},{"p":"smile.plot.swing","c":"Graphics","l":"drawRectBaseRatio(double[], double[])","u":"drawRectBaseRatio(double[],double[])"},{"p":"smile.plot.swing","c":"Graphics","l":"drawText(String, double[])","u":"drawText(java.lang.String,double[])"},{"p":"smile.plot.swing","c":"Graphics","l":"drawText(String, double[], double)","u":"drawText(java.lang.String,double[],double)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawText(String, double[], double, double)","u":"drawText(java.lang.String,double[],double,double)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawText(String, double[], double, double, double)","u":"drawText(java.lang.String,double[],double,double,double)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawTextBaseRatio(String, double[])","u":"drawTextBaseRatio(java.lang.String,double[])"},{"p":"smile.plot.swing","c":"Graphics","l":"drawTextBaseRatio(String, double[], double)","u":"drawTextBaseRatio(java.lang.String,double[],double)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawTextBaseRatio(String, double[], double, double)","u":"drawTextBaseRatio(java.lang.String,double[],double,double)"},{"p":"smile.plot.swing","c":"Graphics","l":"drawTextBaseRatio(String, double[], double, double, double)","u":"drawTextBaseRatio(java.lang.String,double[],double,double,double)"},{"p":"smile.data","c":"DataFrame","l":"drop(int...)"},{"p":"smile.data","c":"IndexDataFrame","l":"drop(int...)"},{"p":"smile.data","c":"DataFrame","l":"drop(String...)","u":"drop(java.lang.String...)"},{"p":"smile.base.mlp","c":"Layer","l":"dropout"},{"p":"smile.base.mlp","c":"LayerBuilder","l":"dropout"},{"p":"smile.deep.tensor","c":"Tensor","l":"dropout_(double)"},{"p":"smile.llm","c":"Transformer.Options","l":"dropout()"},{"p":"smile.deep.layer","c":"Layer","l":"dropout(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"dropout(double)"},{"p":"smile.deep.layer","c":"DropoutLayer","l":"DropoutLayer(double)","u":"%3Cinit%3E(double)"},{"p":"smile.deep.layer","c":"DropoutLayer","l":"DropoutLayer(double, boolean)","u":"%3Cinit%3E(double,boolean)"},{"p":"smile.plot.vega","c":"Data","l":"dsv(String, String)","u":"dsv(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Data","l":"dsv(String, String, Map<String, String>)","u":"dsv(java.lang.String,java.lang.String,java.util.Map)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"DT"},{"p":"smile.deep.tensor","c":"Tensor","l":"dtype()"},{"p":"smile.deep.tensor","c":"Tensor.Options","l":"dtype(ScalarType)","u":"dtype(smile.deep.tensor.ScalarType)"},{"p":"smile.data","c":"CategoricalEncoder","l":"DUMMY"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"DynamicTimeWarping(Distance<T>)","u":"%3Cinit%3E(smile.math.distance.Distance)"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"DynamicTimeWarping(Distance<T>, double)","u":"%3Cinit%3E(smile.math.distance.Distance,double)"},{"p":"smile.graph","c":"Graph.Edge","l":"Edge(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"smile.vq.hebb","c":"Edge","l":"Edge(Neuron)","u":"%3Cinit%3E(smile.vq.hebb.Neuron)"},{"p":"smile.vq.hebb","c":"Edge","l":"Edge(Neuron, int)","u":"%3Cinit%3E(smile.vq.hebb.Neuron,int)"},{"p":"smile.vq.hebb","c":"Neuron","l":"edges"},{"p":"smile.math.distance","c":"EditDistance","l":"EditDistance()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"EditDistance","l":"EditDistance(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.math.distance","c":"EditDistance","l":"EditDistance(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.distance","c":"EditDistance","l":"EditDistance(int, boolean)","u":"%3Cinit%3E(int,boolean)"},{"p":"smile.math.distance","c":"EditDistance","l":"EditDistance(int[][])","u":"%3Cinit%3E(int[][])"},{"p":"smile.math.distance","c":"EditDistance","l":"EditDistance(int[][], double)","u":"%3Cinit%3E(int[][],double)"},{"p":"smile.vision","c":"EfficientNet","l":"EfficientNet(MBConvConfig[], double, double, int, int, IntFunction<Layer>)","u":"%3Cinit%3E(smile.vision.layer.MBConvConfig[],double,double,int,int,java.util.function.IntFunction)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"eigen()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"eigen()"},{"p":"smile.math.matrix","c":"Matrix","l":"eigen()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"eigen(boolean, boolean, boolean)","u":"eigen(boolean,boolean,boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"eigen(boolean, boolean, boolean)","u":"eigen(boolean,boolean,boolean)"},{"p":"smile.math.matrix","c":"Matrix","l":"eigen(boolean, boolean, boolean)","u":"eigen(boolean,boolean,boolean)"},{"p":"smile.math.matrix","c":"IMatrix","l":"eigen(double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"eigen(double[], double, double, int)","u":"eigen(double[],double,double,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"eigen(float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"eigen(float[], float, float, int)","u":"eigen(float[],float,float,int)"},{"p":"smile.math.matrix.fp32","c":"ARPACK","l":"eigen(IMatrix, ARPACK.AsymmOption, int)","u":"eigen(smile.math.matrix.fp32.IMatrix,smile.math.matrix.fp32.ARPACK.AsymmOption,int)"},{"p":"smile.math.matrix","c":"ARPACK","l":"eigen(IMatrix, ARPACK.AsymmOption, int)","u":"eigen(smile.math.matrix.IMatrix,smile.math.matrix.ARPACK.AsymmOption,int)"},{"p":"smile.math.matrix","c":"ARPACK","l":"eigen(IMatrix, ARPACK.AsymmOption, int, int, double)","u":"eigen(smile.math.matrix.IMatrix,smile.math.matrix.ARPACK.AsymmOption,int,int,double)"},{"p":"smile.math.matrix.fp32","c":"ARPACK","l":"eigen(IMatrix, ARPACK.AsymmOption, int, int, float)","u":"eigen(smile.math.matrix.fp32.IMatrix,smile.math.matrix.fp32.ARPACK.AsymmOption,int,int,float)"},{"p":"smile.math.matrix","c":"Lanczos","l":"eigen(IMatrix, int)","u":"eigen(smile.math.matrix.IMatrix,int)"},{"p":"smile.math.matrix","c":"Lanczos","l":"eigen(IMatrix, int, double, int)","u":"eigen(smile.math.matrix.IMatrix,int,double,int)"},{"p":"smile.regression","c":"ElasticNet","l":"ElasticNet()","u":"%3Cinit%3E()"},{"p":"smile.deep.tensor","c":"Index","l":"Ellipsis"},{"p":"smile.util","c":"Regex","l":"EMAIL_ADDRESS"},{"p":"smile.deep.layer","c":"Layer","l":"embedding(int, int)","u":"embedding(int,int)"},{"p":"smile.deep.layer","c":"Layer","l":"embedding(int, int, double)","u":"embedding(int,int,double)"},{"p":"smile.deep.layer","c":"EmbeddingLayer","l":"EmbeddingLayer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.deep.layer","c":"EmbeddingLayer","l":"EmbeddingLayer(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"EmpiricalDistribution(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"EmpiricalDistribution(double[], IntSet)","u":"%3Cinit%3E(double[],smile.util.IntSet)"},{"p":"smile.deep.tensor","c":"Tensor","l":"empty(long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"empty(Tensor.Options, long...)","u":"empty(smile.deep.tensor.Tensor.Options,long...)"},{"p":"smile.deep.tensor","c":"Device","l":"emptyCache()"},{"p":"smile.llm.tokenizer","c":"SentencePiece","l":"encode(String)","u":"encode(java.lang.String)"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"encode(String)","u":"encode(java.lang.String)"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"encode(String)","u":"encode(java.lang.String)"},{"p":"smile.llm.tokenizer","c":"SentencePiece","l":"encode(String, boolean, boolean)","u":"encode(java.lang.String,boolean,boolean)"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"encode(String, boolean, boolean)","u":"encode(java.lang.String,boolean,boolean)"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"encode(String, boolean, boolean)","u":"encode(java.lang.String,boolean,boolean)"},{"p":"smile.plot.vega","c":"View","l":"encode(String, String)","u":"encode(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Layer","l":"encodeDatum(String, double)","u":"encodeDatum(java.lang.String,double)"},{"p":"smile.plot.vega","c":"View","l":"encodeDatum(String, double)","u":"encodeDatum(java.lang.String,double)"},{"p":"smile.plot.vega","c":"Layer","l":"encodeDatum(String, int)","u":"encodeDatum(java.lang.String,int)"},{"p":"smile.plot.vega","c":"View","l":"encodeDatum(String, int)","u":"encodeDatum(java.lang.String,int)"},{"p":"smile.plot.vega","c":"Layer","l":"encodeDatum(String, String)","u":"encodeDatum(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"encodeDatum(String, String)","u":"encodeDatum(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Layer","l":"encodeValue(String, double)","u":"encodeValue(java.lang.String,double)"},{"p":"smile.plot.vega","c":"View","l":"encodeValue(String, double)","u":"encodeValue(java.lang.String,double)"},{"p":"smile.plot.vega","c":"Layer","l":"encodeValue(String, int)","u":"encodeValue(java.lang.String,int)"},{"p":"smile.plot.vega","c":"View","l":"encodeValue(String, int)","u":"encodeValue(java.lang.String,int)"},{"p":"smile.plot.vega","c":"Layer","l":"encodeValue(String, String)","u":"encodeValue(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"encodeValue(String, String)","u":"encodeValue(java.lang.String,java.lang.String)"},{"p":"smile.math.blas","c":"BLAS","l":"engine"},{"p":"smile.math.blas","c":"LAPACK","l":"engine"},{"p":"smile.classification","c":"Classifier","l":"ensemble(Classifier<T>...)","u":"ensemble(smile.classification.Classifier...)"},{"p":"smile.classification","c":"DataFrameClassifier","l":"ensemble(DataFrameClassifier...)","u":"ensemble(smile.classification.DataFrameClassifier...)"},{"p":"smile.regression","c":"DataFrameRegression","l":"ensemble(DataFrameRegression...)","u":"ensemble(smile.regression.DataFrameRegression...)"},{"p":"smile.regression","c":"Regression","l":"ensemble(Regression<T>...)","u":"ensemble(smile.regression.Regression...)"},{"p":"smile.util","c":"DoubleArrayList","l":"ensureCapacity(int)"},{"p":"smile.util","c":"IntArrayList","l":"ensureCapacity(int)"},{"p":"smile.clustering","c":"MEC","l":"entropy"},{"p":"smile.base.cart","c":"SplitRule","l":"ENTROPY"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"entropy()"},{"p":"smile.stat.distribution","c":"Distribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"FDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"entropy()"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"Mixture","l":"entropy()"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"entropy()"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"TDistribution","l":"entropy()"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"entropy()"},{"p":"smile.math","c":"MathEx","l":"entropy(double[])"},{"p":"smile.neighbor.lsh","c":"Bucket","l":"entry"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"epsilon"},{"p":"smile.math","c":"DifferentiableMultivariateFunction","l":"EPSILON"},{"p":"smile.math","c":"MathEx","l":"EPSILON"},{"p":"smile.deep.tensor","c":"Tensor","l":"eq(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"eq(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"eq(Tensor)","u":"eq(smile.deep.tensor.Tensor)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"equals(BandMatrix, double)","u":"equals(smile.math.matrix.BandMatrix,double)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"equals(BandMatrix, float)","u":"equals(smile.math.matrix.fp32.BandMatrix,float)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"equals(BigMatrix, double)","u":"equals(smile.math.matrix.BigMatrix,double)"},{"p":"smile.math","c":"MathEx","l":"equals(double, double)","u":"equals(double,double)"},{"p":"smile.math","c":"MathEx","l":"equals(double[], double[])","u":"equals(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"equals(double[], double[], double)","u":"equals(double[],double[],double)"},{"p":"smile.math","c":"MathEx","l":"equals(double[][], double[][])","u":"equals(double[][],double[][])"},{"p":"smile.math","c":"MathEx","l":"equals(double[][], double[][], double)","u":"equals(double[][],double[][],double)"},{"p":"smile.math","c":"MathEx","l":"equals(float[], float[])","u":"equals(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"equals(float[], float[], float)","u":"equals(float[],float[],float)"},{"p":"smile.math","c":"MathEx","l":"equals(float[][], float[][])","u":"equals(float[][],float[][])"},{"p":"smile.math","c":"MathEx","l":"equals(float[][], float[][], float)","u":"equals(float[][],float[][],float)"},{"p":"smile.math.matrix","c":"Matrix","l":"equals(Matrix, double)","u":"equals(smile.math.matrix.Matrix,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"equals(Matrix, float)","u":"equals(smile.math.matrix.fp32.Matrix,float)"},{"p":"smile.association","c":"AssociationRule","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.association","c":"ItemSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.base.cart","c":"DecisionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.base.cart","c":"RegressionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.formula","c":"Formula","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.measure","c":"NominalScale","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.measure","c":"OrdinalScale","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data","c":"SampleInstance","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"ArrayType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"BooleanType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"ByteType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"CharType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"DateTimeType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"DateType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"DecimalType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"DoubleType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"FloatType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"IntegerType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"LongType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"ObjectType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"ShortType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"StringType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"StructField","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"StructType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.data.type","c":"TimeType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.deep","c":"SampleBatch","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.deep.tensor","c":"Device","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.deep.tensor","c":"Tensor","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.llm","c":"Transformer.Options","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math","c":"Complex","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix","c":"Matrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.nlp","c":"Bigram","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.nlp","c":"NGram","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.nlp","c":"SimpleText","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.plot.vega","c":"SortField","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.util","c":"Bytes","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.util","c":"IntPair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.util","c":"Tuple2","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"equals(SymmMatrix, double)","u":"equals(smile.math.matrix.SymmMatrix,double)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"equals(SymmMatrix, float)","u":"equals(smile.math.matrix.fp32.SymmMatrix,float)"},{"p":"smile.math.special","c":"Erf","l":"erf(double)"},{"p":"smile.math.special","c":"Erf","l":"erfc(double)"},{"p":"smile.math.special","c":"Erf","l":"erfcc(double)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"error"},{"p":"smile.swing","c":"FontChooser","l":"ERROR_OPTION"},{"p":"smile.regression","c":"LinearModel","l":"error()"},{"p":"smile.validation.metric","c":"Error","l":"Error()","u":"%3Cinit%3E()"},{"p":"smile.neighbor.lsh","c":"HashValueParzenModel","l":"estimate(int, double)","u":"estimate(int,double)"},{"p":"smile.math.distance","c":"EuclideanDistance","l":"EuclideanDistance()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"EuclideanDistance","l":"EuclideanDistance(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.deep","c":"Model","l":"eval()"},{"p":"smile.deep","c":"Model","l":"eval(Dataset, Metric...)","u":"eval(smile.deep.Dataset,smile.deep.metric.Metric...)"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"EVD(double[], double[], Matrix, Matrix)","u":"%3Cinit%3E(double[],double[],smile.math.matrix.Matrix,smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"EVD(double[], Matrix)","u":"%3Cinit%3E(double[],smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"EVD(DoublePointer, BigMatrix)","u":"%3Cinit%3E(org.bytedeco.javacpp.DoublePointer,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"EVD(DoublePointer, DoublePointer, BigMatrix, BigMatrix)","u":"%3Cinit%3E(org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,smile.math.matrix.BigMatrix,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"EVD(float[], float[], Matrix, Matrix)","u":"%3Cinit%3E(float[],float[],smile.math.matrix.fp32.Matrix,smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"EVD(float[], Matrix)","u":"%3Cinit%3E(float[],smile.math.matrix.fp32.Matrix)"},{"p":"smile.gap","c":"LamarckianChromosome","l":"evolve()"},{"p":"smile.gap","c":"GeneticAlgorithm","l":"evolve(int)"},{"p":"smile.gap","c":"GeneticAlgorithm","l":"evolve(int, double)","u":"evolve(int,double)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"EX"},{"p":"smile.data","c":"SQL","l":"execute(String)","u":"execute(java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"exp_()"},{"p":"smile.deep.tensor","c":"Tensor","l":"exp()"},{"p":"smile.math","c":"Complex","l":"exp()"},{"p":"smile.ica","c":"Exp","l":"Exp()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"TimeFunction","l":"exp(double, double)","u":"exp(double,double)"},{"p":"smile.math","c":"TimeFunction","l":"exp(double, double, double)","u":"exp(double,double,double)"},{"p":"smile.math","c":"TimeFunction","l":"exp(double, double, double, boolean)","u":"exp(double,double,double,boolean)"},{"p":"smile.data.formula","c":"Terms","l":"exp(String)","u":"exp(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"exp(Term)","u":"exp(smile.data.formula.Term)"},{"p":"smile.data.formula","c":"FactorCrossing","l":"expand()"},{"p":"smile.data.formula","c":"Term","l":"expand()"},{"p":"smile.neighbor.lsh","c":"Probe","l":"expand()"},{"p":"smile.data.formula","c":"Formula","l":"expand(StructType)","u":"expand(smile.data.type.StructType)"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"expandRatio()"},{"p":"smile.data.formula","c":"Terms","l":"expm1(String)","u":"expm1(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"expm1(Term)","u":"expm1(smile.data.formula.Term)"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"ExponentialDistribution(double)","u":"%3Cinit%3E(double)"},{"p":"smile.stat.distribution","c":"ExponentialFamilyMixture","l":"ExponentialFamilyMixture(Mixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.Mixture.Component...)"},{"p":"smile.interpolation.variogram","c":"ExponentialVariogram","l":"ExponentialVariogram(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.interpolation.variogram","c":"ExponentialVariogram","l":"ExponentialVariogram(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.neighbor.lsh","c":"Probe","l":"extend()"},{"p":"smile.plot.swing","c":"Base","l":"extendBound(double[], double[])","u":"extendBound(double[],double[])"},{"p":"smile.plot.swing","c":"Canvas","l":"extendBound(double[], double[])","u":"extendBound(double[],double[])"},{"p":"smile.plot.swing","c":"Base","l":"extendBound(int)"},{"p":"smile.plot.swing","c":"Base","l":"extendLowerBound(double[])"},{"p":"smile.plot.swing","c":"Canvas","l":"extendLowerBound(double[])"},{"p":"smile.plot.swing","c":"Base","l":"extendUpperBound(double[])"},{"p":"smile.plot.swing","c":"Canvas","l":"extendUpperBound(double[])"},{"p":"smile.plot.vega","c":"BinParams","l":"extent(double, double)","u":"extent(double,double)"},{"p":"smile.plot.vega","c":"DensityTransform","l":"extent(double, double)","u":"extent(double,double)"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"extent(double, double)","u":"extent(double,double)"},{"p":"smile.plot.vega","c":"Mark","l":"extent(String)","u":"extent(java.lang.String)"},{"p":"smile.plot.vega","c":"Transform","l":"extent(String, String)","u":"extent(java.lang.String,java.lang.String)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"eye(int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"eye(int)"},{"p":"smile.math.matrix","c":"Matrix","l":"eye(int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"eye(int, int)","u":"eye(int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"eye(int, int)","u":"eye(int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"eye(int, int)","u":"eye(int,int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"eye(long)"},{"p":"smile.deep.tensor","c":"Tensor","l":"eye(Tensor.Options, long)","u":"eye(smile.deep.tensor.Tensor.Options,long)"},{"p":"smile.stat.hypothesis","c":"FTest","l":"f"},{"p":"smile.ica","c":"Exp","l":"f(double)"},{"p":"smile.ica","c":"Kurtosis","l":"f(double)"},{"p":"smile.ica","c":"LogCosh","l":"f(double)"},{"p":"smile.interpolation.variogram","c":"ExponentialVariogram","l":"f(double)"},{"p":"smile.interpolation.variogram","c":"GaussianVariogram","l":"f(double)"},{"p":"smile.interpolation.variogram","c":"PowerVariogram","l":"f(double)"},{"p":"smile.interpolation.variogram","c":"SphericalVariogram","l":"f(double)"},{"p":"smile.math","c":"Function","l":"f(double)"},{"p":"smile.math.kernel","c":"DotProductKernel","l":"f(double)"},{"p":"smile.math.kernel","c":"IsotropicKernel","l":"f(double)"},{"p":"smile.math.kernel","c":"Matern","l":"f(double)"},{"p":"smile.math.rbf","c":"GaussianRadialBasis","l":"f(double)"},{"p":"smile.math.rbf","c":"InverseMultiquadricRadialBasis","l":"f(double)"},{"p":"smile.math.rbf","c":"MultiquadricRadialBasis","l":"f(double)"},{"p":"smile.math.rbf","c":"ThinPlateRadialBasis","l":"f(double)"},{"p":"smile.math","c":"Scaler","l":"f(double)"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"f(double[])"},{"p":"smile.base.mlp.activation","c":"LeakyReLU","l":"f(double[])"},{"p":"smile.base.mlp.activation","c":"ReLU","l":"f(double[])"},{"p":"smile.base.mlp.activation","c":"Sigmoid","l":"f(double[])"},{"p":"smile.base.mlp.activation","c":"Softmax","l":"f(double[])"},{"p":"smile.base.mlp.activation","c":"Tanh","l":"f(double[])"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"f(double[])"},{"p":"smile.base.mlp","c":"OutputFunction","l":"f(double[])"},{"p":"smile.base.svm","c":"LinearKernelMachine","l":"f(double[])"},{"p":"smile.math","c":"MultivariateFunction","l":"f(double[])"},{"p":"smile.math","c":"IntFunction","l":"f(int)"},{"p":"smile.base.svm","c":"LinearKernelMachine","l":"f(int[])"},{"p":"smile.base.svm","c":"LinearKernelMachine","l":"f(SparseArray)","u":"f(smile.util.SparseArray)"},{"p":"smile.base.rbf","c":"RBF","l":"f(T)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"f1"},{"p":"smile.validation.metric","c":"FScore","l":"F1"},{"p":"smile.validation.metric","c":"FScore","l":"F2"},{"p":"smile.plot.vega","c":"Facet","l":"facet(String)","u":"facet(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"Facet(VegaLite)","u":"%3Cinit%3E(smile.plot.vega.VegaLite)"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"factor(int)"},{"p":"smile.data.formula","c":"FactorCrossing","l":"FactorCrossing(int, String...)","u":"%3Cinit%3E(int,java.lang.String...)"},{"p":"smile.data.formula","c":"FactorCrossing","l":"FactorCrossing(String...)","u":"%3Cinit%3E(java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"factorial(int)"},{"p":"smile.data.formula","c":"FactorInteraction","l":"FactorInteraction(String...)","u":"%3Cinit%3E(java.lang.String...)"},{"p":"smile.data.vector","c":"StringVector","l":"factorize(CategoricalMeasure)","u":"factorize(smile.data.measure.CategoricalMeasure)"},{"p":"smile.data","c":"DataFrame","l":"factorize(String...)","u":"factorize(java.lang.String...)"},{"p":"smile.validation.metric","c":"Fallout","l":"Fallout()","u":"%3Cinit%3E()"},{"p":"smile.base.cart","c":"InternalNode","l":"falseChild()"},{"p":"smile.stat.distribution","c":"FDistribution","l":"FDistribution(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.validation.metric","c":"FDR","l":"FDR()","u":"%3Cinit%3E()"},{"p":"smile.feature.selection","c":"InformationValue","l":"feature"},{"p":"smile.feature.selection","c":"SignalNoiseRatio","l":"feature"},{"p":"smile.feature.selection","c":"SumSquaresRatio","l":"feature"},{"p":"smile.base.cart","c":"InternalNode","l":"feature()"},{"p":"smile.sequence","c":"CRFLabeler","l":"features"},{"p":"smile.feature.extraction","c":"BagOfWords","l":"features()"},{"p":"smile.vision","c":"EfficientNet","l":"features()"},{"p":"smile.validation.metric","c":"FScore","l":"FHalf"},{"p":"smile.data.formula","c":"Feature","l":"field()"},{"p":"smile.data.vector","c":"BaseVector","l":"field()"},{"p":"smile.plot.vega","c":"SortField","l":"field()"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"field()"},{"p":"smile.data.type","c":"StructType","l":"field(int)"},{"p":"smile.data.type","c":"StructType","l":"field(String)","u":"field(java.lang.String)"},{"p":"smile.data.type","c":"StructType","l":"fields()"},{"p":"smile.plot.vega","c":"LookupData","l":"fields(String...)","u":"fields(java.lang.String...)"},{"p":"smile.plot.vega","c":"Config","l":"fieldTitle(String)","u":"fieldTitle(java.lang.String)"},{"p":"smile.io","c":"HadoopInput","l":"file(String)","u":"file(java.lang.String)"},{"p":"smile.swing","c":"FileChooser","l":"FileChooser()","u":"%3Cinit%3E()"},{"p":"smile.deep.tensor","c":"Tensor","l":"fill_(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"fill_(int)"},{"p":"smile.util","c":"Strings","l":"fill(char, int)","u":"fill(char,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"fill(double)"},{"p":"smile.math.matrix","c":"Matrix","l":"fill(double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"fill(float)"},{"p":"smile.plot.vega","c":"Background","l":"fill(String)","u":"fill(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"fill(String)","u":"fill(java.lang.String)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"fill(String)","u":"fill(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"fillColor(String)","u":"fillColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"filled(boolean)"},{"p":"smile.plot.vega","c":"Background","l":"fillOpacity(double)"},{"p":"smile.plot.vega","c":"Mark","l":"fillOpacity(double)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"fillOpacity(double)"},{"p":"smile.plot.swing","c":"Graphics","l":"fillPolygon(double[]...)"},{"p":"smile.plot.swing","c":"Graphics","l":"fillPolygon(float, double[]...)","u":"fillPolygon(float,double[]...)"},{"p":"smile.plot.swing","c":"Graphics","l":"fillRect(double[], double[])","u":"fillRect(double[],double[])"},{"p":"smile.plot.swing","c":"Graphics","l":"fillRectBaseRatio(double[], double[])","u":"fillRectBaseRatio(double[],double[])"},{"p":"smile.plot.vega","c":"Transform","l":"filter(Predicate)","u":"filter(smile.plot.vega.Predicate)"},{"p":"smile.plot.vega","c":"Transform","l":"filter(String)","u":"filter(java.lang.String)"},{"p":"smile.math","c":"Root","l":"find(DifferentiableFunction, double, double, double, int)","u":"find(smile.math.DifferentiableFunction,double,double,double,int)"},{"p":"smile.math","c":"Root","l":"find(Function, double, double, double, int)","u":"find(smile.math.Function,double,double,double,int)"},{"p":"smile.base.cart","c":"CART","l":"findBestSplit(LeafNode, int, double, int, int)","u":"findBestSplit(smile.base.cart.LeafNode,int,double,int,int)"},{"p":"smile.classification","c":"DecisionTree","l":"findBestSplit(LeafNode, int, double, int, int)","u":"findBestSplit(smile.base.cart.LeafNode,int,double,int,int)"},{"p":"smile.regression","c":"RegressionTree","l":"findBestSplit(LeafNode, int, double, int, int)","u":"findBestSplit(smile.base.cart.LeafNode,int,double,int,int)"},{"p":"smile.base.cart","c":"CART","l":"findBestSplit(LeafNode, int, int, boolean[])","u":"findBestSplit(smile.base.cart.LeafNode,int,int,boolean[])"},{"p":"smile.classification","c":"ClassLabels","l":"fit(BaseVector<?, ?, ?>)","u":"fit(smile.data.vector.BaseVector)"},{"p":"smile.clustering","c":"KMeans","l":"fit(BBDTree, double[][], int, int, double)","u":"fit(smile.clustering.BBDTree,double[][],int,int,double)"},{"p":"smile.classification","c":"PlattScaling","l":"fit(Classifier<T>, T[], int[])","u":"fit(smile.classification.Classifier,T[],int[])"},{"p":"smile.feature.transform","c":"WinsorScaler","l":"fit(DataFrame)","u":"fit(smile.data.DataFrame)"},{"p":"smile.feature.imputation","c":"KMedoidsImputer","l":"fit(DataFrame, Distance<Tuple>, int)","u":"fit(smile.data.DataFrame,smile.math.distance.Distance,int)"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"fit(DataFrame, double, double, String...)","u":"fit(smile.data.DataFrame,double,double,java.lang.String...)"},{"p":"smile.feature.transform","c":"WinsorScaler","l":"fit(DataFrame, double, double, String...)","u":"fit(smile.data.DataFrame,double,double,java.lang.String...)"},{"p":"smile.data.transform","c":"Transform","l":"fit(DataFrame, Function<DataFrame, Transform>...)","u":"fit(smile.data.DataFrame,java.util.function.Function...)"},{"p":"smile.feature.extraction","c":"BagOfWords","l":"fit(DataFrame, Function<String, String[]>, int, String...)","u":"fit(smile.data.DataFrame,java.util.function.Function,int,java.lang.String...)"},{"p":"smile.feature.extraction","c":"ProbabilisticPCA","l":"fit(DataFrame, int, String...)","u":"fit(smile.data.DataFrame,int,java.lang.String...)"},{"p":"smile.feature.extraction","c":"KernelPCA","l":"fit(DataFrame, MercerKernel<double[]>, int, double, String...)","u":"fit(smile.data.DataFrame,smile.math.kernel.MercerKernel,int,double,java.lang.String...)"},{"p":"smile.feature.extraction","c":"KernelPCA","l":"fit(DataFrame, MercerKernel<double[]>, int, String...)","u":"fit(smile.data.DataFrame,smile.math.kernel.MercerKernel,int,java.lang.String...)"},{"p":"smile.feature.selection","c":"InformationValue","l":"fit(DataFrame, String)","u":"fit(smile.data.DataFrame,java.lang.String)"},{"p":"smile.feature.selection","c":"SignalNoiseRatio","l":"fit(DataFrame, String)","u":"fit(smile.data.DataFrame,java.lang.String)"},{"p":"smile.feature.selection","c":"SumSquaresRatio","l":"fit(DataFrame, String)","u":"fit(smile.data.DataFrame,java.lang.String)"},{"p":"smile.feature.selection","c":"InformationValue","l":"fit(DataFrame, String, int)","u":"fit(smile.data.DataFrame,java.lang.String,int)"},{"p":"smile.feature.extraction","c":"PCA","l":"fit(DataFrame, String...)","u":"fit(smile.data.DataFrame,java.lang.String...)"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"fit(DataFrame, String...)","u":"fit(smile.data.DataFrame,java.lang.String...)"},{"p":"smile.feature.transform","c":"MaxAbsScaler","l":"fit(DataFrame, String...)","u":"fit(smile.data.DataFrame,java.lang.String...)"},{"p":"smile.feature.transform","c":"RobustStandardizer","l":"fit(DataFrame, String...)","u":"fit(smile.data.DataFrame,java.lang.String...)"},{"p":"smile.feature.transform","c":"Scaler","l":"fit(DataFrame, String...)","u":"fit(smile.data.DataFrame,java.lang.String...)"},{"p":"smile.feature.transform","c":"Standardizer","l":"fit(DataFrame, String...)","u":"fit(smile.data.DataFrame,java.lang.String...)"},{"p":"smile.classification","c":"ClassLabels","l":"fit(Dataset<?, Integer>)","u":"fit(smile.data.Dataset)"},{"p":"smile.math","c":"LevenbergMarquardt","l":"fit(DifferentiableMultivariateFunction, double[], double[], double[])","u":"fit(smile.math.DifferentiableMultivariateFunction,double[],double[],double[])"},{"p":"smile.math","c":"LevenbergMarquardt","l":"fit(DifferentiableMultivariateFunction, double[], double[], double[], double, int)","u":"fit(smile.math.DifferentiableMultivariateFunction,double[],double[],double[],double,int)"},{"p":"smile.math","c":"LevenbergMarquardt","l":"fit(DifferentiableMultivariateFunction, double[][], double[], double[])","u":"fit(smile.math.DifferentiableMultivariateFunction,double[][],double[],double[])"},{"p":"smile.math","c":"LevenbergMarquardt","l":"fit(DifferentiableMultivariateFunction, double[][], double[], double[], double, int)","u":"fit(smile.math.DifferentiableMultivariateFunction,double[][],double[],double[],double,int)"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"fit(double[])"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"fit(double[])"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"fit(double[])"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"fit(double[])"},{"p":"smile.stat.distribution","c":"GaussianMixture","l":"fit(double[])"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"fit(double[])"},{"p":"smile.timeseries","c":"AR","l":"fit(double[], int)","u":"fit(double[],int)"},{"p":"smile.timeseries","c":"ARMA","l":"fit(double[], int, int)","u":"fit(double[],int,int)"},{"p":"smile.classification","c":"IsotonicRegressionScaling","l":"fit(double[], int[])","u":"fit(double[],int[])"},{"p":"smile.classification","c":"PlattScaling","l":"fit(double[], int[])","u":"fit(double[],int[])"},{"p":"smile.classification","c":"PlattScaling","l":"fit(double[], int[], int)","u":"fit(double[],int[],int)"},{"p":"smile.stat.distribution","c":"ExponentialFamilyMixture","l":"fit(double[], Mixture.Component...)","u":"fit(double[],smile.stat.distribution.Mixture.Component...)"},{"p":"smile.stat.distribution","c":"ExponentialFamilyMixture","l":"fit(double[], Mixture.Component[], double, int, double)","u":"fit(double[],smile.stat.distribution.Mixture.Component[],double,int,double)"},{"p":"smile.anomaly","c":"IsolationForest","l":"fit(double[][])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"fit(double[][])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianMixture","l":"fit(double[][])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"fit(double[][], boolean)","u":"fit(double[][],boolean)"},{"p":"smile.stat.distribution","c":"MultivariateGaussianMixture","l":"fit(double[][], boolean)","u":"fit(double[][],boolean)"},{"p":"smile.clustering","c":"DENCLUE","l":"fit(double[][], double, int)","u":"fit(double[][],double,int)"},{"p":"smile.clustering","c":"DENCLUE","l":"fit(double[][], double, int, double, int)","u":"fit(double[][],double,int,double,int)"},{"p":"smile.regression","c":"SVM","l":"fit(double[][], double[], double, double, double)","u":"fit(double[][],double[],double,double,double)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"fit(double[][], double[], Properties)","u":"fit(double[][],double[],java.util.Properties)"},{"p":"smile.regression","c":"MLP","l":"fit(double[][], double[], Properties)","u":"fit(double[][],double[],java.util.Properties)"},{"p":"smile.regression","c":"RBFNetwork","l":"fit(double[][], double[], Properties)","u":"fit(double[][],double[],java.util.Properties)"},{"p":"smile.regression","c":"SVM","l":"fit(double[][], double[], Properties)","u":"fit(double[][],double[],java.util.Properties)"},{"p":"smile.base.rbf","c":"RBF","l":"fit(double[][], int)","u":"fit(double[][],int)"},{"p":"smile.clustering","c":"DeterministicAnnealing","l":"fit(double[][], int)","u":"fit(double[][],int)"},{"p":"smile.clustering","c":"GMeans","l":"fit(double[][], int)","u":"fit(double[][],int)"},{"p":"smile.clustering","c":"KMeans","l":"fit(double[][], int)","u":"fit(double[][],int)"},{"p":"smile.clustering","c":"XMeans","l":"fit(double[][], int)","u":"fit(double[][],int)"},{"p":"smile.ica","c":"ICA","l":"fit(double[][], int)","u":"fit(double[][],int)"},{"p":"smile.ica","c":"ICA","l":"fit(double[][], int, DifferentiableFunction, double, int)","u":"fit(double[][],int,smile.math.DifferentiableFunction,double,int)"},{"p":"smile.base.rbf","c":"RBF","l":"fit(double[][], int, double)","u":"fit(double[][],int,double)"},{"p":"smile.clustering","c":"DBSCAN","l":"fit(double[][], int, double)","u":"fit(double[][],int,double)"},{"p":"smile.clustering","c":"SpectralClustering","l":"fit(double[][], int, double)","u":"fit(double[][],int,double)"},{"p":"smile.clustering","c":"SpectralClustering","l":"fit(double[][], int, double, int, double)","u":"fit(double[][],int,double,int,double)"},{"p":"smile.clustering","c":"DeterministicAnnealing","l":"fit(double[][], int, double, int, double, double)","u":"fit(double[][],int,double,int,double,double)"},{"p":"smile.base.rbf","c":"RBF","l":"fit(double[][], int, int)","u":"fit(double[][],int,int)"},{"p":"smile.clustering","c":"GMeans","l":"fit(double[][], int, int, double)","u":"fit(double[][],int,int,double)"},{"p":"smile.clustering","c":"KMeans","l":"fit(double[][], int, int, double)","u":"fit(double[][],int,int,double)"},{"p":"smile.clustering","c":"SpectralClustering","l":"fit(double[][], int, int, double)","u":"fit(double[][],int,int,double)"},{"p":"smile.clustering","c":"XMeans","l":"fit(double[][], int, int, double)","u":"fit(double[][],int,int,double)"},{"p":"smile.anomaly","c":"IsolationForest","l":"fit(double[][], int, int, double, int)","u":"fit(double[][],int,int,double,int)"},{"p":"smile.clustering","c":"SpectralClustering","l":"fit(double[][], int, int, double, int, double)","u":"fit(double[][],int,int,double,int,double)"},{"p":"smile.ica","c":"ICA","l":"fit(double[][], int, Properties)","u":"fit(double[][],int,java.util.Properties)"},{"p":"smile.feature.extraction","c":"ProbabilisticPCA","l":"fit(double[][], int, String...)","u":"fit(double[][],int,java.lang.String...)"},{"p":"smile.classification","c":"FLD","l":"fit(double[][], int[])","u":"fit(double[][],int[])"},{"p":"smile.classification","c":"KNN","l":"fit(double[][], int[])","u":"fit(double[][],int[])"},{"p":"smile.classification","c":"LDA","l":"fit(double[][], int[])","u":"fit(double[][],int[])"},{"p":"smile.classification","c":"LogisticRegression","l":"fit(double[][], int[])","u":"fit(double[][],int[])"},{"p":"smile.classification","c":"QDA","l":"fit(double[][], int[])","u":"fit(double[][],int[])"},{"p":"smile.classification","c":"RDA","l":"fit(double[][], int[], double)","u":"fit(double[][],int[],double)"},{"p":"smile.classification","c":"SVM","l":"fit(double[][], int[], double, double)","u":"fit(double[][],int[],double,double)"},{"p":"smile.classification","c":"LogisticRegression","l":"fit(double[][], int[], double, double, int)","u":"fit(double[][],int[],double,double,int)"},{"p":"smile.classification","c":"SVM","l":"fit(double[][], int[], double, double, int)","u":"fit(double[][],int[],double,double,int)"},{"p":"smile.classification","c":"RDA","l":"fit(double[][], int[], double, double[], double)","u":"fit(double[][],int[],double,double[],double)"},{"p":"smile.classification","c":"LDA","l":"fit(double[][], int[], double[], double)","u":"fit(double[][],int[],double[],double)"},{"p":"smile.classification","c":"QDA","l":"fit(double[][], int[], double[], double)","u":"fit(double[][],int[],double[],double)"},{"p":"smile.classification","c":"KNN","l":"fit(double[][], int[], int)","u":"fit(double[][],int[],int)"},{"p":"smile.classification","c":"FLD","l":"fit(double[][], int[], int, double)","u":"fit(double[][],int[],int,double)"},{"p":"smile.classification","c":"FLD","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"LDA","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"LogisticRegression","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"MLP","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"QDA","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"RBFNetwork","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"RDA","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"SVM","l":"fit(double[][], int[], Properties)","u":"fit(double[][],int[],java.util.Properties)"},{"p":"smile.stat.distribution","c":"MultivariateExponentialFamilyMixture","l":"fit(double[][], MultivariateMixture.Component...)","u":"fit(double[][],smile.stat.distribution.MultivariateMixture.Component...)"},{"p":"smile.stat.distribution","c":"MultivariateExponentialFamilyMixture","l":"fit(double[][], MultivariateMixture.Component[], double, int, double)","u":"fit(double[][],smile.stat.distribution.MultivariateMixture.Component[],double,int,double)"},{"p":"smile.anomaly","c":"IsolationForest","l":"fit(double[][], Properties)","u":"fit(double[][],java.util.Properties)"},{"p":"smile.feature.extraction","c":"PCA","l":"fit(double[][], String...)","u":"fit(double[][],java.lang.String...)"},{"p":"smile.classification","c":"AdaBoost","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.classification","c":"DataFrameClassifier.Trainer","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.classification","c":"DecisionTree","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.classification","c":"RandomForest","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.regression","c":"DataFrameRegression.Trainer","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.regression","c":"GradientTreeBoost","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.regression","c":"LASSO","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.regression","c":"OLS","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.regression","c":"RandomForest","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.regression","c":"RegressionTree","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.regression","c":"RidgeRegression","l":"fit(Formula, DataFrame)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.classification","c":"OneVersusOne","l":"fit(Formula, DataFrame, BiFunction<Formula, DataFrame, DataFrameClassifier>)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.classification","c":"OneVersusRest","l":"fit(Formula, DataFrame, BiFunction<Formula, DataFrame, DataFrameClassifier>)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.regression","c":"LASSO","l":"fit(Formula, DataFrame, double)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,double)"},{"p":"smile.regression","c":"RidgeRegression","l":"fit(Formula, DataFrame, double)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,double)"},{"p":"smile.regression","c":"ElasticNet","l":"fit(Formula, DataFrame, double, double)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,double,double)"},{"p":"smile.regression","c":"ElasticNet","l":"fit(Formula, DataFrame, double, double, double, int)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,double,double,double,int)"},{"p":"smile.regression","c":"LASSO","l":"fit(Formula, DataFrame, double, double, int)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,double,double,int)"},{"p":"smile.regression","c":"RidgeRegression","l":"fit(Formula, DataFrame, double[], double[], double[])","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,double[],double[],double[])"},{"p":"smile.regression","c":"RegressionTree","l":"fit(Formula, DataFrame, int, int, int)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,int)"},{"p":"smile.classification","c":"AdaBoost","l":"fit(Formula, DataFrame, int, int, int, int)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,int,int)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"fit(Formula, DataFrame, int, int, int, int, double, double)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,int,int,double,double)"},{"p":"smile.regression","c":"RandomForest","l":"fit(Formula, DataFrame, int, int, int, int, int, double)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,int,int,int,double)"},{"p":"smile.regression","c":"RandomForest","l":"fit(Formula, DataFrame, int, int, int, int, int, double, LongStream)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,int,int,int,double,java.util.stream.LongStream)"},{"p":"smile.classification","c":"RandomForest","l":"fit(Formula, DataFrame, int, int, SplitRule, int, int, int, double)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,smile.base.cart.SplitRule,int,int,int,double)"},{"p":"smile.classification","c":"RandomForest","l":"fit(Formula, DataFrame, int, int, SplitRule, int, int, int, double, int[])","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,smile.base.cart.SplitRule,int,int,int,double,int[])"},{"p":"smile.classification","c":"RandomForest","l":"fit(Formula, DataFrame, int, int, SplitRule, int, int, int, double, int[], LongStream)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,int,int,smile.base.cart.SplitRule,int,int,int,double,int[],java.util.stream.LongStream)"},{"p":"smile.regression","c":"GradientTreeBoost","l":"fit(Formula, DataFrame, Loss, int, int, int, int, double, double)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,smile.base.cart.Loss,int,int,int,int,double,double)"},{"p":"smile.glm","c":"GLM","l":"fit(Formula, DataFrame, Model)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,smile.glm.model.Model)"},{"p":"smile.glm","c":"GLM","l":"fit(Formula, DataFrame, Model, double, int)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,smile.glm.model.Model,double,int)"},{"p":"smile.glm","c":"GLM","l":"fit(Formula, DataFrame, Model, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,smile.glm.model.Model,java.util.Properties)"},{"p":"smile.classification","c":"AdaBoost","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.classification","c":"DataFrameClassifier.Trainer","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.classification","c":"DecisionTree","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.classification","c":"RandomForest","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"DataFrameRegression.Trainer","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"ElasticNet","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"GradientTreeBoost","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"LASSO","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"OLS","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"RandomForest","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"RegressionTree","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.regression","c":"RidgeRegression","l":"fit(Formula, DataFrame, Properties)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties)"},{"p":"smile.classification","c":"DecisionTree","l":"fit(Formula, DataFrame, SplitRule, int, int, int)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,smile.base.cart.SplitRule,int,int,int)"},{"p":"smile.regression","c":"OLS","l":"fit(Formula, DataFrame, String, boolean, boolean)","u":"fit(smile.data.formula.Formula,smile.data.DataFrame,java.lang.String,boolean,boolean)"},{"p":"smile.stat.distribution","c":"GaussianMixture","l":"fit(int, double[])","u":"fit(int,double[])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianMixture","l":"fit(int, double[][])","u":"fit(int,double[][])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianMixture","l":"fit(int, double[][], boolean)","u":"fit(int,double[][],boolean)"},{"p":"smile.classification","c":"Maxent","l":"fit(int, int[][], int[])","u":"fit(int,int[][],int[])"},{"p":"smile.classification","c":"Maxent","l":"fit(int, int[][], int[], double, double, int)","u":"fit(int,int[][],int[],double,double,int)"},{"p":"smile.classification","c":"Maxent","l":"fit(int, int[][], int[], Properties)","u":"fit(int,int[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"ClassLabels","l":"fit(int[])"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"fit(int[])"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"fit(int[])"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"fit(int[])"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"fit(int[])"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"fit(int[])"},{"p":"smile.stat.distribution","c":"DiscreteExponentialFamilyMixture","l":"fit(int[], DiscreteMixture.Component...)","u":"fit(int[],smile.stat.distribution.DiscreteMixture.Component...)"},{"p":"smile.stat.distribution","c":"DiscreteExponentialFamilyMixture","l":"fit(int[], DiscreteMixture.Component[], double, int, double)","u":"fit(int[],smile.stat.distribution.DiscreteMixture.Component[],double,int,double)"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"fit(int[], IntSet)","u":"fit(int[],smile.util.IntSet)"},{"p":"smile.regression","c":"SVM","l":"fit(int[][], double[], int, double, double, double)","u":"fit(int[][],double[],int,double,double,double)"},{"p":"smile.clustering","c":"KModes","l":"fit(int[][], int)","u":"fit(int[][],int)"},{"p":"smile.clustering","c":"KModes","l":"fit(int[][], int, int)","u":"fit(int[][],int,int)"},{"p":"smile.classification","c":"SVM","l":"fit(int[][], int[], int, double, double)","u":"fit(int[][],int[],int,double,double)"},{"p":"smile.classification","c":"SVM","l":"fit(int[][], int[], int, double, double, int)","u":"fit(int[][],int[],int,double,double,int)"},{"p":"smile.sequence","c":"HMM","l":"fit(int[][], int[][])","u":"fit(int[][],int[][])"},{"p":"smile.clustering","c":"HierarchicalClustering","l":"fit(Linkage)","u":"fit(smile.clustering.linkage.Linkage)"},{"p":"smile.clustering","c":"SpectralClustering","l":"fit(Matrix, int)","u":"fit(smile.math.matrix.Matrix,int)"},{"p":"smile.clustering","c":"SpectralClustering","l":"fit(Matrix, int, int, double)","u":"fit(smile.math.matrix.Matrix,int,int,double)"},{"p":"smile.neighbor","c":"MPLSH","l":"fit(RNNSearch<double[], double[]>, double[][], double)","u":"fit(smile.neighbor.RNNSearch,double[][],double)"},{"p":"smile.neighbor","c":"MPLSH","l":"fit(RNNSearch<double[], double[]>, double[][], double, int)","u":"fit(smile.neighbor.RNNSearch,double[][],double,int)"},{"p":"smile.neighbor","c":"MPLSH","l":"fit(RNNSearch<double[], double[]>, double[][], double, int, double)","u":"fit(smile.neighbor.RNNSearch,double[][],double,int,double)"},{"p":"smile.regression","c":"SVM","l":"fit(SparseArray[], double[], int, double, double, double)","u":"fit(smile.util.SparseArray[],double[],int,double,double,double)"},{"p":"smile.clustering","c":"SIB","l":"fit(SparseArray[], int)","u":"fit(smile.util.SparseArray[],int)"},{"p":"smile.clustering","c":"SIB","l":"fit(SparseArray[], int, int)","u":"fit(smile.util.SparseArray[],int,int)"},{"p":"smile.classification","c":"SVM","l":"fit(SparseArray[], int[], int, double, double)","u":"fit(smile.util.SparseArray[],int[],int,double,double)"},{"p":"smile.classification","c":"SVM","l":"fit(SparseArray[], int[], int, double, double, int)","u":"fit(smile.util.SparseArray[],int[],int,double,double,int)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"fit(SparseDataset<Integer>)","u":"fit(smile.data.SparseDataset)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"fit(SparseDataset<Integer>, double, double, int)","u":"fit(smile.data.SparseDataset,double,double,int)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"fit(SparseDataset<Integer>, Properties)","u":"fit(smile.data.SparseDataset,java.util.Properties)"},{"p":"smile.nlp.pos","c":"HMMPOSTagger","l":"fit(String[][], PennTreebankPOS[][])","u":"fit(java.lang.String[][],smile.nlp.pos.PennTreebankPOS[][])"},{"p":"smile.base.svm","c":"OCSVM","l":"fit(T[])"},{"p":"smile.clustering","c":"CLARANS","l":"fit(T[], Distance<T>, int)","u":"fit(T[],smile.math.distance.Distance,int)"},{"p":"smile.clustering","c":"DBSCAN","l":"fit(T[], Distance<T>, int, double)","u":"fit(T[],smile.math.distance.Distance,int,double)"},{"p":"smile.clustering","c":"MEC","l":"fit(T[], Distance<T>, int, double)","u":"fit(T[],smile.math.distance.Distance,int,double)"},{"p":"smile.clustering","c":"CLARANS","l":"fit(T[], Distance<T>, int, int)","u":"fit(T[],smile.math.distance.Distance,int,int)"},{"p":"smile.base.svm","c":"SVR","l":"fit(T[], double[])","u":"fit(T[],double[])"},{"p":"smile.regression","c":"Regression.Trainer","l":"fit(T[], double[])","u":"fit(T[],double[])"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"fit(T[], double[], MercerKernel<T>, double)","u":"fit(T[],double[],smile.math.kernel.MercerKernel,double)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"fit(T[], double[], MercerKernel<T>, double, boolean, double, int)","u":"fit(T[],double[],smile.math.kernel.MercerKernel,double,boolean,double,int)"},{"p":"smile.regression","c":"SVM","l":"fit(T[], double[], MercerKernel<T>, double, double, double)","u":"fit(T[],double[],smile.math.kernel.MercerKernel,double,double,double)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"fit(T[], double[], MercerKernel<T>, Properties)","u":"fit(T[],double[],smile.math.kernel.MercerKernel,java.util.Properties)"},{"p":"smile.regression","c":"Regression.Trainer","l":"fit(T[], double[], Properties)","u":"fit(T[],double[],java.util.Properties)"},{"p":"smile.regression","c":"RBFNetwork","l":"fit(T[], double[], RBF<T>[])","u":"fit(T[],double[],smile.base.rbf.RBF[])"},{"p":"smile.regression","c":"RBFNetwork","l":"fit(T[], double[], RBF<T>[], boolean)","u":"fit(T[],double[],smile.base.rbf.RBF[],boolean)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"fit(T[], double[], T[], MercerKernel<T>, double)","u":"fit(T[],double[],T[],smile.math.kernel.MercerKernel,double)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"fit(T[], double[], T[], MercerKernel<T>, double, boolean)","u":"fit(T[],double[],T[],smile.math.kernel.MercerKernel,double,boolean)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"fit(T[], double[], T[], MercerKernel<T>, Properties)","u":"fit(T[],double[],T[],smile.math.kernel.MercerKernel,java.util.Properties)"},{"p":"smile.classification","c":"Classifier.Trainer","l":"fit(T[], int[])","u":"fit(T[],int[])"},{"p":"smile.classification","c":"OneVersusOne","l":"fit(T[], int[], BiFunction<T[], int[], Classifier<T>>)","u":"fit(T[],int[],java.util.function.BiFunction)"},{"p":"smile.classification","c":"OneVersusRest","l":"fit(T[], int[], BiFunction<T[], int[], Classifier<T>>)","u":"fit(T[],int[],java.util.function.BiFunction)"},{"p":"smile.classification","c":"KNN","l":"fit(T[], int[], Distance<T>)","u":"fit(T[],int[],smile.math.distance.Distance)"},{"p":"smile.base.svm","c":"LASVM","l":"fit(T[], int[], int)","u":"fit(T[],int[],int)"},{"p":"smile.classification","c":"KNN","l":"fit(T[], int[], int, Distance<T>)","u":"fit(T[],int[],int,smile.math.distance.Distance)"},{"p":"smile.classification","c":"OneVersusOne","l":"fit(T[], int[], int, int, BiFunction<T[], int[], Classifier<T>>)","u":"fit(T[],int[],int,int,java.util.function.BiFunction)"},{"p":"smile.classification","c":"OneVersusRest","l":"fit(T[], int[], int, int, BiFunction<T[], int[], Classifier<T>>)","u":"fit(T[],int[],int,int,java.util.function.BiFunction)"},{"p":"smile.classification","c":"SVM","l":"fit(T[], int[], MercerKernel<T>, double, double)","u":"fit(T[],int[],smile.math.kernel.MercerKernel,double,double)"},{"p":"smile.classification","c":"SVM","l":"fit(T[], int[], MercerKernel<T>, double, double, int)","u":"fit(T[],int[],smile.math.kernel.MercerKernel,double,double,int)"},{"p":"smile.classification","c":"Classifier.Trainer","l":"fit(T[], int[], Properties)","u":"fit(T[],int[],java.util.Properties)"},{"p":"smile.classification","c":"RBFNetwork","l":"fit(T[], int[], RBF<T>[])","u":"fit(T[],int[],smile.base.rbf.RBF[])"},{"p":"smile.classification","c":"RBFNetwork","l":"fit(T[], int[], RBF<T>[], boolean)","u":"fit(T[],int[],smile.base.rbf.RBF[],boolean)"},{"p":"smile.anomaly","c":"SVM","l":"fit(T[], MercerKernel<T>)","u":"fit(T[],smile.math.kernel.MercerKernel)"},{"p":"smile.anomaly","c":"SVM","l":"fit(T[], MercerKernel<T>, double, double)","u":"fit(T[],smile.math.kernel.MercerKernel,double,double)"},{"p":"smile.manifold","c":"KPCA","l":"fit(T[], MercerKernel<T>, int)","u":"fit(T[],smile.math.kernel.MercerKernel,int)"},{"p":"smile.manifold","c":"KPCA","l":"fit(T[], MercerKernel<T>, int, double)","u":"fit(T[],smile.math.kernel.MercerKernel,int,double)"},{"p":"smile.base.rbf","c":"RBF","l":"fit(T[], Metric<T>, int)","u":"fit(T[],smile.math.distance.Metric,int)"},{"p":"smile.base.rbf","c":"RBF","l":"fit(T[], Metric<T>, int, double)","u":"fit(T[],smile.math.distance.Metric,int,double)"},{"p":"smile.base.rbf","c":"RBF","l":"fit(T[], Metric<T>, int, int)","u":"fit(T[],smile.math.distance.Metric,int,int)"},{"p":"smile.clustering","c":"DBSCAN","l":"fit(T[], RNNSearch<T, T>, int, double)","u":"fit(T[],smile.neighbor.RNNSearch,int,double)"},{"p":"smile.clustering","c":"MEC","l":"fit(T[], RNNSearch<T, T>, int, double, int[], double)","u":"fit(T[],smile.neighbor.RNNSearch,int,double,int[],double)"},{"p":"smile.sequence","c":"CRFLabeler","l":"fit(T[][], int[][], Function<T, Tuple>)","u":"fit(T[][],int[][],java.util.function.Function)"},{"p":"smile.sequence","c":"CRFLabeler","l":"fit(T[][], int[][], Function<T, Tuple>, int, int, int, int, double)","u":"fit(T[][],int[][],java.util.function.Function,int,int,int,int,double)"},{"p":"smile.sequence","c":"CRFLabeler","l":"fit(T[][], int[][], Function<T, Tuple>, Properties)","u":"fit(T[][],int[][],java.util.function.Function,java.util.Properties)"},{"p":"smile.sequence","c":"HMM","l":"fit(T[][], int[][], ToIntFunction<T>)","u":"fit(T[][],int[][],java.util.function.ToIntFunction)"},{"p":"smile.sequence","c":"HMMLabeler","l":"fit(T[][], int[][], ToIntFunction<T>)","u":"fit(T[][],int[][],java.util.function.ToIntFunction)"},{"p":"smile.sequence","c":"CRF","l":"fit(Tuple[][], int[][])","u":"fit(smile.data.Tuple[][],int[][])"},{"p":"smile.sequence","c":"CRF","l":"fit(Tuple[][], int[][], int, int, int, int, double)","u":"fit(smile.data.Tuple[][],int[][],int,int,int,int,double)"},{"p":"smile.sequence","c":"CRF","l":"fit(Tuple[][], int[][], Properties)","u":"fit(smile.data.Tuple[][],int[][],java.util.Properties)"},{"p":"smile.gap","c":"BitString","l":"fitness()"},{"p":"smile.gap","c":"Chromosome","l":"fitness()"},{"p":"smile.feature.selection","c":"GAFE","l":"fitness(double[][], double[], double[][], double[], RegressionMetric, BiFunction<double[][], double[], Regression<double[]>>)","u":"fitness(double[][],double[],double[][],double[],smile.validation.metric.RegressionMetric,java.util.function.BiFunction)"},{"p":"smile.feature.selection","c":"GAFE","l":"fitness(double[][], int[], double[][], int[], ClassificationMetric, BiFunction<double[][], int[], Classifier<double[]>>)","u":"fitness(double[][],int[],double[][],int[],smile.validation.metric.ClassificationMetric,java.util.function.BiFunction)"},{"p":"smile.feature.selection","c":"GAFE","l":"fitness(String, DataFrame, DataFrame, ClassificationMetric, BiFunction<Formula, DataFrame, DataFrameClassifier>)","u":"fitness(java.lang.String,smile.data.DataFrame,smile.data.DataFrame,smile.validation.metric.ClassificationMetric,java.util.function.BiFunction)"},{"p":"smile.feature.selection","c":"GAFE","l":"fitness(String, DataFrame, DataFrame, RegressionMetric, BiFunction<Formula, DataFrame, DataFrameRegression>)","u":"fitness(java.lang.String,smile.data.DataFrame,smile.data.DataFrame,smile.validation.metric.RegressionMetric,java.util.function.BiFunction)"},{"p":"smile.math","c":"LevenbergMarquardt","l":"fittedValues"},{"p":"smile.glm","c":"GLM","l":"fittedValues()"},{"p":"smile.regression","c":"LinearModel","l":"fittedValues()"},{"p":"smile.timeseries","c":"AR","l":"fittedValues()"},{"p":"smile.timeseries","c":"ARMA","l":"fittedValues()"},{"p":"smile.validation","c":"ClassificationMetrics","l":"fitTime"},{"p":"smile.validation","c":"RegressionMetrics","l":"fitTime"},{"p":"smile.deep.tensor","c":"Tensor","l":"flatten()"},{"p":"smile.deep.tensor","c":"Tensor","l":"flatten(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"flatten(int, int)","u":"flatten(int,int)"},{"p":"smile.plot.vega","c":"Transform","l":"flatten(String[], String[])","u":"flatten(java.lang.String[],java.lang.String[])"},{"p":"smile.classification","c":"FLD","l":"FLD(double[], double[][], Matrix)","u":"%3Cinit%3E(double[],double[][],smile.math.matrix.Matrix)"},{"p":"smile.classification","c":"FLD","l":"FLD(double[], double[][], Matrix, IntSet)","u":"%3Cinit%3E(double[],double[][],smile.math.matrix.Matrix,smile.util.IntSet)"},{"p":"smile.data.type","c":"DataType.ID","l":"Float"},{"p":"smile.math","c":"MathEx","l":"FLOAT_DIGITS"},{"p":"smile.math","c":"MathEx","l":"FLOAT_EPSILON"},{"p":"smile.math","c":"MathEx","l":"FLOAT_MACHEP"},{"p":"smile.math","c":"MathEx","l":"FLOAT_NEGEP"},{"p":"smile.deep.tensor","c":"ScalarType","l":"Float16"},{"p":"smile.deep.tensor","c":"ScalarType","l":"Float32"},{"p":"smile.deep.tensor","c":"ScalarType","l":"Float64"},{"p":"smile.swing.table","c":"FloatArrayCellRenderer","l":"FloatArrayCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.data.type","c":"DataTypes","l":"FloatArrayType"},{"p":"smile.sort","c":"FloatHeapSelect","l":"FloatHeapSelect(float[])","u":"%3Cinit%3E(float[])"},{"p":"smile.sort","c":"FloatHeapSelect","l":"FloatHeapSelect(int)","u":"%3Cinit%3E(int)"},{"p":"smile.data.type","c":"DataTypes","l":"FloatObjectType"},{"p":"smile.data.type","c":"DataTypes","l":"FloatType"},{"p":"smile.deep.tensor","c":"Tensor","l":"floatValue()"},{"p":"smile.data","c":"DataFrame","l":"floatVector(Enum<?>)","u":"floatVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"floatVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"floatVector(int)"},{"p":"smile.data","c":"DataFrame","l":"floatVector(String)","u":"floatVector(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"floor(String)","u":"floor(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"floor(Term)","u":"floor(smile.data.formula.Term)"},{"p":"smile.plot.vega","c":"Transform","l":"fold(String[], String[])","u":"fold(java.lang.String[],java.lang.String[])"},{"p":"smile.vision","c":"ImageNet","l":"folder2Id"},{"p":"smile.vision","c":"ImageNet","l":"folder2Target"},{"p":"smile.vision","c":"ImageNet","l":"folders"},{"p":"smile.plot.vega","c":"Config","l":"font(String)","u":"font(java.lang.String)"},{"p":"smile.swing.table","c":"FontCellEditor","l":"FontCellEditor()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"FontCellRenderer","l":"FontCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"FontCellRenderer","l":"FontCellRenderer(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.swing","c":"FontChooser","l":"FontChooser()","u":"%3Cinit%3E()"},{"p":"smile.swing","c":"FontChooser","l":"FontChooser(String[])","u":"%3Cinit%3E(java.lang.String[])"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"forEachNonZero(DoubleConsumer)","u":"forEachNonZero(smile.math.matrix.DoubleConsumer)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"forEachNonZero(int, int, DoubleConsumer)","u":"forEachNonZero(int,int,smile.math.matrix.DoubleConsumer)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"forEachNonZero(int, int, FloatConsumer)","u":"forEachNonZero(int,int,smile.math.matrix.fp32.FloatConsumer)"},{"p":"smile.timeseries","c":"AR","l":"forecast()"},{"p":"smile.timeseries","c":"ARMA","l":"forecast()"},{"p":"smile.timeseries","c":"AR","l":"forecast(int)"},{"p":"smile.timeseries","c":"ARMA","l":"forecast(int)"},{"p":"smile.plot.swing","c":"Palette","l":"FOREST_GREEN"},{"p":"smile.util","c":"Strings","l":"format(double)"},{"p":"smile.util","c":"Strings","l":"format(double, boolean)","u":"format(double,boolean)"},{"p":"smile.util","c":"Strings","l":"format(float)"},{"p":"smile.util","c":"Strings","l":"format(float, boolean)","u":"format(float,boolean)"},{"p":"smile.plot.vega","c":"Axis","l":"format(String)","u":"format(java.lang.String)"},{"p":"smile.plot.vega","c":"Data","l":"format(String)","u":"format(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"format(String)","u":"format(java.lang.String)"},{"p":"smile.plot.vega","c":"Data","l":"format(String, Map<String, String>)","u":"format(java.lang.String,java.util.Map)"},{"p":"smile.plot.vega","c":"Axis","l":"formatType(String)","u":"formatType(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"formatType(String)","u":"formatType(java.lang.String)"},{"p":"smile.base.cart","c":"CART","l":"formula"},{"p":"smile.glm","c":"GLM","l":"formula"},{"p":"smile.classification","c":"AdaBoost","l":"formula()"},{"p":"smile.classification","c":"DataFrameClassifier","l":"formula()"},{"p":"smile.classification","c":"DecisionTree","l":"formula()"},{"p":"smile.classification","c":"GradientTreeBoost","l":"formula()"},{"p":"smile.classification","c":"RandomForest","l":"formula()"},{"p":"smile.feature.importance","c":"TreeSHAP","l":"formula()"},{"p":"smile.regression","c":"DataFrameRegression","l":"formula()"},{"p":"smile.regression","c":"GradientTreeBoost","l":"formula()"},{"p":"smile.regression","c":"LinearModel","l":"formula()"},{"p":"smile.regression","c":"RandomForest","l":"formula()"},{"p":"smile.regression","c":"RegressionTree","l":"formula()"},{"p":"smile.data.formula","c":"Formula","l":"Formula(Term, Term...)","u":"%3Cinit%3E(smile.data.formula.Term,smile.data.formula.Term...)"},{"p":"smile.vision.transform","c":"Transform","l":"forward(BufferedImage...)","u":"forward(java.awt.image.BufferedImage...)"},{"p":"smile.vision","c":"VisionModel","l":"forward(BufferedImage...)","u":"forward(java.awt.image.BufferedImage...)"},{"p":"smile.deep.activation","c":"GELU","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"GLU","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"HardShrink","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"LeakyReLU","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"LogSigmoid","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"LogSoftmax","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"ReLU","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"Sigmoid","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"SiLU","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"Softmax","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"SoftShrink","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"Tanh","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.activation","c":"TanhShrink","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"AdaptiveAvgPool2dLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"AvgPool2dLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"BatchNorm1dLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"BatchNorm2dLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"Conv2dLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"DropoutLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"EmbeddingLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"FullyConnectedLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"GroupNormLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"Layer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"MaxPool2dLayer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep.layer","c":"SequentialBlock","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.deep","c":"Model","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.llm","c":"PositionalEncoding","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.llm","c":"Transformer","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.vision","c":"EfficientNet","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.vision.layer","c":"FusedMBConv","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.vision.layer","c":"MBConv","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.vision.layer","c":"SqueezeExcitation","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.vision.layer","c":"StochasticDepth","l":"forward(Tensor)","u":"forward(smile.deep.tensor.Tensor)"},{"p":"smile.data.formula","c":"Formula","l":"frame(DataFrame)","u":"frame(smile.data.DataFrame)"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"frame(Integer, Integer)","u":"frame(java.lang.Integer,java.lang.Integer)"},{"p":"smile.plot.vega","c":"WindowTransform","l":"frame(Integer, Integer)","u":"frame(java.lang.Integer,java.lang.Integer)"},{"p":"smile.data","c":"BinarySparseDataset","l":"from(Path)","u":"from(java.nio.file.Path)"},{"p":"smile.data","c":"SparseDataset","l":"from(Path)","u":"from(java.nio.file.Path)"},{"p":"smile.data","c":"SparseDataset","l":"from(Path, int)","u":"from(java.nio.file.Path,int)"},{"p":"smile.validation.metric","c":"FScore","l":"FScore()","u":"%3Cinit%3E()"},{"p":"smile.validation.metric","c":"FScore","l":"FScore(double)","u":"%3Cinit%3E(double)"},{"p":"smile.regression","c":"LinearModel","l":"ftest()"},{"p":"smile.stat.hypothesis","c":"FTest","l":"FTest(double, int, int, double)","u":"%3Cinit%3E(double,int,int,double)"},{"p":"smile.deep.layer","c":"FullyConnectedLayer","l":"FullyConnectedLayer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"FusedMBConv(double, int, int, int, int, int)","u":"FusedMBConv(double,int,int,int,int,int)"},{"p":"smile.vision.layer","c":"FusedMBConv","l":"FusedMBConv(MBConvConfig, double, IntFunction<Layer>)","u":"%3Cinit%3E(smile.vision.layer.MBConvConfig,double,java.util.function.IntFunction)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"FW"},{"p":"smile.base.mlp","c":"OutputFunction","l":"g(Cost, double[], double[])","u":"g(smile.base.mlp.Cost,double[],double[])"},{"p":"smile.ica","c":"Exp","l":"g(double)"},{"p":"smile.ica","c":"Kurtosis","l":"g(double)"},{"p":"smile.ica","c":"LogCosh","l":"g(double)"},{"p":"smile.math","c":"DifferentiableFunction","l":"g(double)"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.base.mlp.activation","c":"LeakyReLU","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.base.mlp.activation","c":"ReLU","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.base.mlp.activation","c":"Sigmoid","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.base.mlp.activation","c":"Softmax","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.base.mlp.activation","c":"Tanh","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.math","c":"DifferentiableMultivariateFunction","l":"g(double[], double[])","u":"g(double[],double[])"},{"p":"smile.ica","c":"Exp","l":"g2(double)"},{"p":"smile.ica","c":"Kurtosis","l":"g2(double)"},{"p":"smile.ica","c":"LogCosh","l":"g2(double)"},{"p":"smile.math","c":"DifferentiableFunction","l":"g2(double)"},{"p":"smile.feature.selection","c":"GAFE","l":"GAFE()","u":"%3Cinit%3E()"},{"p":"smile.feature.selection","c":"GAFE","l":"GAFE(Selection, int, Crossover, double, double)","u":"%3Cinit%3E(smile.gap.Selection,int,smile.gap.Crossover,double,double)"},{"p":"smile.math.special","c":"Gamma","l":"gamma(double)"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"GammaDistribution(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"gather(int, Tensor)","u":"gather(int,smile.deep.tensor.Tensor)"},{"p":"smile.vq","c":"Neighborhood","l":"Gaussian(double, double)","u":"Gaussian(double,double)"},{"p":"smile.math.kernel","c":"Gaussian","l":"Gaussian(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"GaussianDistribution(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"GaussianKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"GaussianKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.stat.distribution","c":"GaussianMixture","l":"GaussianMixture(Mixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.Mixture.Component...)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"GaussianProcessRegression(MercerKernel<T>, T[], double[], double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[],double)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"GaussianProcessRegression(MercerKernel<T>, T[], double[], double, double, double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[],double,double,double)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"GaussianProcessRegression(MercerKernel<T>, T[], double[], double, double, double, Matrix.Cholesky, double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[],double,double,double,smile.math.matrix.Matrix.Cholesky,double)"},{"p":"smile.math.rbf","c":"GaussianRadialBasis","l":"GaussianRadialBasis()","u":"%3Cinit%3E()"},{"p":"smile.math.rbf","c":"GaussianRadialBasis","l":"GaussianRadialBasis(double)","u":"%3Cinit%3E(double)"},{"p":"smile.interpolation.variogram","c":"GaussianVariogram","l":"GaussianVariogram(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.interpolation.variogram","c":"GaussianVariogram","l":"GaussianVariogram(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.math.blas","c":"BLAS","l":"gbmv(Layout, Transpose, int, int, int, int, double, double[], int, double[], int, double, double[], int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbmv(Layout, Transpose, int, int, int, int, double, double[], int, double[], int, double, double[], int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"gbmv(Layout, Transpose, int, int, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbmv(Layout, Transpose, int, int, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"gbmv(Layout, Transpose, int, int, int, int, float, float[], int, float[], int, float, float[], int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbmv(Layout, Transpose, int, int, int, int, float, float[], int, float[], int, float, float[], int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"gbmv(Layout, Transpose, int, int, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbmv(Layout, Transpose, int, int, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"gbmv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbsv(Layout, int, int, int, int, double[], int, int[], double[], int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbsv(Layout, int, int, int, int, double[], int, int[], double[], int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbsv(Layout, int, int, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbsv(Layout, int, int, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbsv(Layout, int, int, int, int, float[], int, int[], float[], int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbsv(Layout, int, int, int, int, float[], int, int[], float[], int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbsv(Layout, int, int, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbsv(Layout, int, int, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"gbsv(smile.math.blas.Layout,int,int,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrf(Layout, int, int, int, int, double[], int, int[])","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,double[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrf(Layout, int, int, int, int, double[], int, int[])","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,double[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrf(Layout, int, int, int, int, DoubleBuffer, int, IntBuffer)","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrf(Layout, int, int, int, int, DoubleBuffer, int, IntBuffer)","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrf(Layout, int, int, int, int, float[], int, int[])","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,float[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrf(Layout, int, int, int, int, float[], int, int[])","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,float[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrf(Layout, int, int, int, int, FloatBuffer, int, IntBuffer)","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrf(Layout, int, int, int, int, FloatBuffer, int, IntBuffer)","u":"gbtrf(smile.math.blas.Layout,int,int,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrs(Layout, Transpose, int, int, int, int, double[], int, int[], double[], int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrs(Layout, Transpose, int, int, int, int, double[], int, int[], double[], int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrs(Layout, Transpose, int, int, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrs(Layout, Transpose, int, int, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrs(Layout, Transpose, int, int, int, int, float[], int, int[], float[], int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrs(Layout, Transpose, int, int, int, int, float[], int, int[], float[], int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gbtrs(Layout, Transpose, int, int, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gbtrs(Layout, Transpose, int, int, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"gbtrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"ge(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"ge(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"ge(Tensor)","u":"ge(smile.deep.tensor.Tensor)"},{"p":"smile.math.blas","c":"LAPACK","l":"geev(Layout, EVDJob, EVDJob, int, double[], int, double[], double[], double[], int, double[], int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,double[],int,double[],double[],double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geev(Layout, EVDJob, EVDJob, int, double[], int, double[], double[], double[], int, double[], int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,double[],int,double[],double[],double[],int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"geev(Layout, EVDJob, EVDJob, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, DoubleBuffer, int, DoubleBuffer, int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geev(Layout, EVDJob, EVDJob, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, DoubleBuffer, int, DoubleBuffer, int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"geev(Layout, EVDJob, EVDJob, int, DoublePointer, int, DoublePointer, DoublePointer, DoublePointer, int, DoublePointer, int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geev(Layout, EVDJob, EVDJob, int, DoublePointer, int, DoublePointer, DoublePointer, DoublePointer, int, DoublePointer, int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"geev(Layout, EVDJob, EVDJob, int, float[], int, float[], float[], float[], int, float[], int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,float[],int,float[],float[],float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geev(Layout, EVDJob, EVDJob, int, float[], int, float[], float[], float[], int, float[], int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,float[],int,float[],float[],float[],int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"geev(Layout, EVDJob, EVDJob, int, FloatBuffer, int, FloatBuffer, FloatBuffer, FloatBuffer, int, FloatBuffer, int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geev(Layout, EVDJob, EVDJob, int, FloatBuffer, int, FloatBuffer, FloatBuffer, FloatBuffer, int, FloatBuffer, int)","u":"geev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EVDJob,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gels(Layout, Transpose, int, int, int, double[], int, double[], int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gels(Layout, Transpose, int, int, int, double[], int, double[], int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gels(Layout, Transpose, int, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gels(Layout, Transpose, int, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gels(Layout, Transpose, int, int, int, float[], int, float[], int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gels(Layout, Transpose, int, int, int, float[], int, float[], int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,float[],int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gels(Layout, Transpose, int, int, int, FloatBuffer, int, FloatBuffer, int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gels(Layout, Transpose, int, int, int, FloatBuffer, int, FloatBuffer, int)","u":"gels(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsd(Layout, int, int, int, double[], int, double[], int, double[], double, int[])","u":"gelsd(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsd(Layout, int, int, int, double[], int, double[], int, double[], double, int[])","u":"gelsd(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsd(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, double, IntBuffer)","u":"gelsd(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,double,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsd(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, double, IntBuffer)","u":"gelsd(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,double,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsd(Layout, int, int, int, float[], int, float[], int, float[], float, int[])","u":"gelsd(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsd(Layout, int, int, int, float[], int, float[], int, float[], float, int[])","u":"gelsd(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsd(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, float, IntBuffer)","u":"gelsd(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,float,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsd(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, float, IntBuffer)","u":"gelsd(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,float,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gelss(Layout, int, int, int, double[], int, double[], int, double[], double, int[])","u":"gelss(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelss(Layout, int, int, int, double[], int, double[], int, double[], double, int[])","u":"gelss(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gelss(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, double, IntBuffer)","u":"gelss(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,double,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelss(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, double, IntBuffer)","u":"gelss(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,double,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gelss(Layout, int, int, int, float[], int, float[], int, float[], float, int[])","u":"gelss(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelss(Layout, int, int, int, float[], int, float[], int, float[], float, int[])","u":"gelss(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gelss(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, float, IntBuffer)","u":"gelss(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,float,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelss(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, float, IntBuffer)","u":"gelss(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,float,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsy(Layout, int, int, int, double[], int, double[], int, int[], double, int[])","u":"gelsy(smile.math.blas.Layout,int,int,int,double[],int,double[],int,int[],double,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsy(Layout, int, int, int, double[], int, double[], int, int[], double, int[])","u":"gelsy(smile.math.blas.Layout,int,int,int,double[],int,double[],int,int[],double,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsy(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, IntBuffer, double, IntBuffer)","u":"gelsy(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,double,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsy(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, IntBuffer, double, IntBuffer)","u":"gelsy(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,double,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsy(Layout, int, int, int, float[], int, float[], int, int[], float, int[])","u":"gelsy(smile.math.blas.Layout,int,int,int,float[],int,float[],int,int[],float,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsy(Layout, int, int, int, float[], int, float[], int, int[], float, int[])","u":"gelsy(smile.math.blas.Layout,int,int,int,float[],int,float[],int,int[],float,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gelsy(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, IntBuffer, float, IntBuffer)","u":"gelsy(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,float,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gelsy(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, IntBuffer, float, IntBuffer)","u":"gelsy(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,float,java.nio.IntBuffer)"},{"p":"smile.deep.activation","c":"GELU","l":"GELU(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.deep.layer","c":"Layer","l":"gelu(int, int)","u":"gelu(int,int)"},{"p":"smile.deep.layer","c":"Layer","l":"gelu(int, int, double)","u":"gelu(int,int,double)"},{"p":"smile.math.blas","c":"BLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, double, double[], int, double[], int, double, double[], int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, double, double[], int, double[], int, double, double[], int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, float, float[], int, float[], int, float, float[], int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, float, float[], int, float[], int, float, float[], int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemm(Layout, Transpose, Transpose, int, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"gemm(smile.math.blas.Layout,smile.math.blas.Transpose,smile.math.blas.Transpose,int,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemv(Layout, Transpose, int, int, double, double[], int, double[], int, double, double[], int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemv(Layout, Transpose, int, int, double, double[], int, double[], int, double, double[], int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemv(Layout, Transpose, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemv(Layout, Transpose, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemv(Layout, Transpose, int, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemv(Layout, Transpose, int, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemv(Layout, Transpose, int, int, float, float[], int, float[], int, float, float[], int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemv(Layout, Transpose, int, int, float, float[], int, float[], int, float, float[], int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"gemv(Layout, Transpose, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gemv(Layout, Transpose, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"gemv(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math","c":"MathEx","l":"generateSeed()"},{"p":"smile.math","c":"MathEx","l":"generateSeed(int)"},{"p":"smile.gap","c":"GeneticAlgorithm","l":"GeneticAlgorithm(T[])","u":"%3Cinit%3E(T[])"},{"p":"smile.gap","c":"GeneticAlgorithm","l":"GeneticAlgorithm(T[], Selection, int)","u":"%3Cinit%3E(T[],smile.gap.Selection,int)"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"GeometricDistribution(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.blas","c":"LAPACK","l":"geqrf(Layout, int, int, double[], int, double[])","u":"geqrf(smile.math.blas.Layout,int,int,double[],int,double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geqrf(Layout, int, int, double[], int, double[])","u":"geqrf(smile.math.blas.Layout,int,int,double[],int,double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"geqrf(Layout, int, int, DoubleBuffer, int, DoubleBuffer)","u":"geqrf(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geqrf(Layout, int, int, DoubleBuffer, int, DoubleBuffer)","u":"geqrf(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"geqrf(Layout, int, int, DoublePointer, int, DoublePointer)","u":"geqrf(smile.math.blas.Layout,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geqrf(Layout, int, int, DoublePointer, int, DoublePointer)","u":"geqrf(smile.math.blas.Layout,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.blas","c":"LAPACK","l":"geqrf(Layout, int, int, float[], int, float[])","u":"geqrf(smile.math.blas.Layout,int,int,float[],int,float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geqrf(Layout, int, int, float[], int, float[])","u":"geqrf(smile.math.blas.Layout,int,int,float[],int,float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"geqrf(Layout, int, int, FloatBuffer, int, FloatBuffer)","u":"geqrf(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"geqrf(Layout, int, int, FloatBuffer, int, FloatBuffer)","u":"geqrf(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas","c":"BLAS","l":"ger(Layout, int, int, double, double[], int, double[], int, double[], int)","u":"ger(smile.math.blas.Layout,int,int,double,double[],int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ger(Layout, int, int, double, double[], int, double[], int, double[], int)","u":"ger(smile.math.blas.Layout,int,int,double,double[],int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"ger(Layout, int, int, double, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, int)","u":"ger(smile.math.blas.Layout,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ger(Layout, int, int, double, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, int)","u":"ger(smile.math.blas.Layout,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"ger(Layout, int, int, double, DoublePointer, int, DoublePointer, int, DoublePointer, int)","u":"ger(smile.math.blas.Layout,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ger(Layout, int, int, double, DoublePointer, int, DoublePointer, int, DoublePointer, int)","u":"ger(smile.math.blas.Layout,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"ger(Layout, int, int, float, float[], int, float[], int, float[], int)","u":"ger(smile.math.blas.Layout,int,int,float,float[],int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ger(Layout, int, int, float, float[], int, float[], int, float[], int)","u":"ger(smile.math.blas.Layout,int,int,float,float[],int,float[],int,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"ger(Layout, int, int, float, FloatBuffer, int, FloatBuffer, int, FloatBuffer, int)","u":"ger(smile.math.blas.Layout,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ger(Layout, int, int, float, FloatBuffer, int, FloatBuffer, int, FloatBuffer, int)","u":"ger(smile.math.blas.Layout,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesdd(Layout, SVDJob, int, int, double[], int, double[], double[], int, double[], int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,double[],int,double[],double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesdd(Layout, SVDJob, int, int, double[], int, double[], double[], int, double[], int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,double[],int,double[],double[],int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesdd(Layout, SVDJob, int, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, int, DoubleBuffer, int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesdd(Layout, SVDJob, int, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, int, DoubleBuffer, int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesdd(Layout, SVDJob, int, int, DoublePointer, int, DoublePointer, DoublePointer, int, DoublePointer, int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesdd(Layout, SVDJob, int, int, DoublePointer, int, DoublePointer, DoublePointer, int, DoublePointer, int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesdd(Layout, SVDJob, int, int, float[], int, float[], float[], int, float[], int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,float[],int,float[],float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesdd(Layout, SVDJob, int, int, float[], int, float[], float[], int, float[], int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,float[],int,float[],float[],int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesdd(Layout, SVDJob, int, int, FloatBuffer, int, FloatBuffer, FloatBuffer, int, FloatBuffer, int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesdd(Layout, SVDJob, int, int, FloatBuffer, int, FloatBuffer, FloatBuffer, int, FloatBuffer, int)","u":"gesdd(smile.math.blas.Layout,smile.math.blas.SVDJob,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesv(Layout, int, int, double[], int, int[], double[], int)","u":"gesv(smile.math.blas.Layout,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesv(Layout, int, int, double[], int, int[], double[], int)","u":"gesv(smile.math.blas.Layout,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesv(Layout, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"gesv(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesv(Layout, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"gesv(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesv(Layout, int, int, DoublePointer, int, IntPointer, DoublePointer, int)","u":"gesv(smile.math.blas.Layout,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesv(Layout, int, int, DoublePointer, int, IntPointer, DoublePointer, int)","u":"gesv(smile.math.blas.Layout,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesv(Layout, int, int, float[], int, int[], float[], int)","u":"gesv(smile.math.blas.Layout,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesv(Layout, int, int, float[], int, int[], float[], int)","u":"gesv(smile.math.blas.Layout,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesv(Layout, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"gesv(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesv(Layout, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"gesv(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesvd(Layout, SVDJob, SVDJob, int, int, double[], int, double[], double[], int, double[], int, double[])","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,double[],int,double[],double[],int,double[],int,double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesvd(Layout, SVDJob, SVDJob, int, int, double[], int, double[], double[], int, double[], int, double[])","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,double[],int,double[],double[],int,double[],int,double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gesvd(Layout, SVDJob, SVDJob, int, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer)","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesvd(Layout, SVDJob, SVDJob, int, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer)","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gesvd(Layout, SVDJob, SVDJob, int, int, float[], int, float[], float[], int, float[], int, float[])","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,float[],int,float[],float[],int,float[],int,float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesvd(Layout, SVDJob, SVDJob, int, int, float[], int, float[], float[], int, float[], int, float[])","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,float[],int,float[],float[],int,float[],int,float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gesvd(Layout, SVDJob, SVDJob, int, int, FloatBuffer, int, FloatBuffer, FloatBuffer, int, FloatBuffer, int, FloatBuffer)","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gesvd(Layout, SVDJob, SVDJob, int, int, FloatBuffer, int, FloatBuffer, FloatBuffer, int, FloatBuffer, int, FloatBuffer)","u":"gesvd(smile.math.blas.Layout,smile.math.blas.SVDJob,smile.math.blas.SVDJob,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.neighbor.lsh","c":"Hash","l":"get(double[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"get(Index...)","u":"get(smile.deep.tensor.Index...)"},{"p":"smile.data","c":"DataFrame","l":"get(int)"},{"p":"smile.data","c":"Dataset","l":"get(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"get(int)"},{"p":"smile.data","c":"Tuple","l":"get(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"get(int)"},{"p":"smile.math","c":"Complex.Array","l":"get(int)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"get(int)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"get(int)"},{"p":"smile.neighbor.lsh","c":"Hash","l":"get(int)"},{"p":"smile.sort","c":"DoubleHeapSelect","l":"get(int)"},{"p":"smile.sort","c":"FloatHeapSelect","l":"get(int)"},{"p":"smile.sort","c":"HeapSelect","l":"get(int)"},{"p":"smile.sort","c":"IntHeapSelect","l":"get(int)"},{"p":"smile.util","c":"DoubleArrayList","l":"get(int)"},{"p":"smile.util","c":"IntArrayList","l":"get(int)"},{"p":"smile.util","c":"IntDoubleHashMap","l":"get(int)"},{"p":"smile.util","c":"SparseArray","l":"get(int)"},{"p":"smile.data","c":"BinarySparseDataset","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.data","c":"DataFrame","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.data","c":"IndexDataFrame","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.data","c":"SparseDataset","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix","c":"IMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.plot.swing","c":"Hexmap.Tooltip","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.util","c":"Array2D","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.util","c":"IntArray2D","l":"get(int, int)","u":"get(int,int)"},{"p":"smile.data","c":"DataFrame","l":"get(int, String)","u":"get(int,java.lang.String)"},{"p":"smile.data.vector","c":"BaseVector","l":"get(int...)"},{"p":"smile.data.vector","c":"BooleanVector","l":"get(int...)"},{"p":"smile.data.vector","c":"ByteVector","l":"get(int...)"},{"p":"smile.data.vector","c":"CharVector","l":"get(int...)"},{"p":"smile.data.vector","c":"DoubleVector","l":"get(int...)"},{"p":"smile.data.vector","c":"FloatVector","l":"get(int...)"},{"p":"smile.data.vector","c":"IntVector","l":"get(int...)"},{"p":"smile.data.vector","c":"LongVector","l":"get(int...)"},{"p":"smile.data.vector","c":"ShortVector","l":"get(int...)"},{"p":"smile.data.vector","c":"StringVector","l":"get(int...)"},{"p":"smile.data.vector","c":"Vector","l":"get(int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"get(int...)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"get(int[], int[])","u":"get(int[],int[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"get(int[], int[])","u":"get(int[],int[])"},{"p":"smile.math.matrix","c":"Matrix","l":"get(int[], int[])","u":"get(int[],int[])"},{"p":"smile.nlp","c":"Trie","l":"get(K)"},{"p":"smile.nlp","c":"Trie","l":"get(K[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"get(long...)"},{"p":"smile.data","c":"Tuple","l":"get(String)","u":"get(java.lang.String)"},{"p":"smile.hash","c":"PerfectHash","l":"get(String)","u":"get(java.lang.String)"},{"p":"smile.hash","c":"PerfectMap","l":"get(String)","u":"get(java.lang.String)"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"get(String)","u":"get(java.lang.String)"},{"p":"smile.nlp.pos","c":"EnglishPOSLexicon","l":"get(String)","u":"get(java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"get(Tensor)","u":"get(smile.deep.tensor.Tensor)"},{"p":"smile.nlp.dictionary","c":"Abbreviations","l":"getAbbreviation(String)","u":"getAbbreviation(java.lang.String)"},{"p":"smile.swing","c":"AlphaIcon","l":"getAlpha()"},{"p":"smile.nlp","c":"AnchorText","l":"getAnchor()"},{"p":"smile.nlp","c":"SimpleText","l":"getAnchor()"},{"p":"smile.data","c":"Tuple","l":"getArray(int)"},{"p":"smile.data","c":"DataFrame","l":"getArray(int, int)","u":"getArray(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getArray(int, String)","u":"getArray(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getArray(String)","u":"getArray(java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getAs(int)"},{"p":"smile.data","c":"Tuple","l":"getAs(String)","u":"getAs(java.lang.String)"},{"p":"smile.plot.swing","c":"Canvas","l":"getAxis(int)"},{"p":"smile.plot.swing","c":"Canvas","l":"getAxisLabel(int)"},{"p":"smile.plot.swing","c":"Canvas","l":"getAxisLabels()"},{"p":"smile.data","c":"Tuple","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"CharVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"IntVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"LongVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getBoolean(int)"},{"p":"smile.data.vector","c":"Vector","l":"getBoolean(int)"},{"p":"smile.data","c":"DataFrame","l":"getBoolean(int, int)","u":"getBoolean(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getBoolean(int, String)","u":"getBoolean(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getBoolean(String)","u":"getBoolean(java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getByte(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"CharVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"IntVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"LongVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getByte(int)"},{"p":"smile.data.vector","c":"Vector","l":"getByte(int)"},{"p":"smile.data","c":"DataFrame","l":"getByte(int, int)","u":"getByte(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getByte(int, String)","u":"getByte(int,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getByte(int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getByte(long...)"},{"p":"smile.data","c":"Tuple","l":"getByte(String)","u":"getByte(java.lang.String)"},{"p":"smile.swing","c":"Table","l":"getCellEditor(int, int)","u":"getCellEditor(int,int)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"getCellEditorValue()"},{"p":"smile.swing.table","c":"ColorCellEditor","l":"getCellEditorValue()"},{"p":"smile.swing.table","c":"DateCellEditor","l":"getCellEditorValue()"},{"p":"smile.swing.table","c":"DoubleArrayCellEditor","l":"getCellEditorValue()"},{"p":"smile.swing.table","c":"DoubleCellEditor","l":"getCellEditorValue()"},{"p":"smile.swing.table","c":"FontCellEditor","l":"getCellEditorValue()"},{"p":"smile.swing.table","c":"IntegerArrayCellEditor","l":"getCellEditorValue()"},{"p":"smile.swing.table","c":"IntegerCellEditor","l":"getCellEditorValue()"},{"p":"smile.swing","c":"Table","l":"getCellRenderer(int, int)","u":"getCellRenderer(int,int)"},{"p":"smile.data","c":"Tuple","l":"getChar(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"IntVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"LongVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getChar(int)"},{"p":"smile.data.vector","c":"Vector","l":"getChar(int)"},{"p":"smile.data","c":"DataFrame","l":"getChar(int, int)","u":"getChar(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getChar(int, String)","u":"getChar(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getChar(String)","u":"getChar(java.lang.String)"},{"p":"smile.nlp","c":"Trie.Node","l":"getChild(K)"},{"p":"smile.nlp","c":"Trie.Node","l":"getChild(K[], int)","u":"getChild(K[],int)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"getClipNorm()"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"getClipValue()"},{"p":"smile.plot.swing","c":"Graphics","l":"getColor()"},{"p":"smile.data.type","c":"ArrayType","l":"getComponentType()"},{"p":"smile.taxonomy","c":"Taxonomy","l":"getConcept(String)","u":"getConcept(java.lang.String)"},{"p":"smile.taxonomy","c":"Taxonomy","l":"getConcepts()"},{"p":"smile.plot.swing","c":"Base","l":"getCoordinateSpace()"},{"p":"smile.data","c":"Tuple","l":"getDate(int)"},{"p":"smile.data","c":"DataFrame","l":"getDate(int, int)","u":"getDate(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getDate(int, String)","u":"getDate(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getDate(String)","u":"getDate(java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getDateTime(int)"},{"p":"smile.data","c":"DataFrame","l":"getDateTime(int, int)","u":"getDateTime(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getDateTime(int, String)","u":"getDateTime(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getDateTime(String)","u":"getDateTime(java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getDecimal(int)"},{"p":"smile.data","c":"DataFrame","l":"getDecimal(int, int)","u":"getDecimal(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getDecimal(int, String)","u":"getDecimal(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getDecimal(String)","u":"getDecimal(java.lang.String)"},{"p":"smile.nlp.pos","c":"HMMPOSTagger","l":"getDefault()"},{"p":"smile.graph","c":"AdjacencyList","l":"getDegree(int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getDegree(int)"},{"p":"smile.graph","c":"Graph","l":"getDegree(int)"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"getDescription()"},{"p":"smile.plot.swing","c":"Base","l":"getDimension()"},{"p":"smile.data","c":"Tuple","l":"getDouble(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"CharVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"IntVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"LongVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getDouble(int)"},{"p":"smile.data.vector","c":"Vector","l":"getDouble(int)"},{"p":"smile.data","c":"DataFrame","l":"getDouble(int, int)","u":"getDouble(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getDouble(int, String)","u":"getDouble(int,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getDouble(int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getDouble(long...)"},{"p":"smile.data","c":"Tuple","l":"getDouble(String)","u":"getDouble(java.lang.String)"},{"p":"smile.graph","c":"AdjacencyList","l":"getEdge(int, int)","u":"getEdge(int,int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getEdge(int, int)","u":"getEdge(int,int)"},{"p":"smile.graph","c":"Graph","l":"getEdge(int, int)","u":"getEdge(int,int)"},{"p":"smile.graph","c":"AdjacencyList","l":"getEdges()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getEdges()"},{"p":"smile.graph","c":"Graph","l":"getEdges()"},{"p":"smile.graph","c":"AdjacencyList","l":"getEdges(int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getEdges(int)"},{"p":"smile.graph","c":"Graph","l":"getEdges(int)"},{"p":"smile.graph","c":"AdjacencyList","l":"getEdges(int, int)","u":"getEdges(int,int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getEdges(int, int)","u":"getEdges(int,int)"},{"p":"smile.graph","c":"Graph","l":"getEdges(int, int)","u":"getEdges(int,int)"},{"p":"smile.swing","c":"FileChooser","l":"getExtension(File)","u":"getExtension(java.io.File)"},{"p":"smile.anomaly","c":"IsolationForest","l":"getExtensionLevel()"},{"p":"smile.data","c":"Tuple","l":"getFloat(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"CharVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"IntVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"LongVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getFloat(int)"},{"p":"smile.data.vector","c":"Vector","l":"getFloat(int)"},{"p":"smile.data","c":"DataFrame","l":"getFloat(int, int)","u":"getFloat(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getFloat(int, String)","u":"getFloat(int,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getFloat(int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getFloat(long...)"},{"p":"smile.data","c":"Tuple","l":"getFloat(String)","u":"getFloat(java.lang.String)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"getFocusBorder()"},{"p":"smile.plot.swing","c":"Graphics","l":"getFont()"},{"p":"smile.nlp.dictionary","c":"Abbreviations","l":"getFull(String)","u":"getFull(java.lang.String)"},{"p":"smile.plot.swing","c":"Graphics","l":"getGraphics()"},{"p":"smile.plot.swing","c":"Dendrogram","l":"getHeight()"},{"p":"smile.swing","c":"AlphaIcon","l":"getIcon()"},{"p":"smile.swing.table","c":"DefaultTableHeaderCellRenderer","l":"getIcon(JTable, int)","u":"getIcon(javax.swing.JTable,int)"},{"p":"smile.swing.table","c":"MultiColumnSortTableHeaderCellRenderer","l":"getIcon(JTable, int)","u":"getIcon(javax.swing.JTable,int)"},{"p":"smile.swing","c":"AlphaIcon","l":"getIconHeight()"},{"p":"smile.swing","c":"AlphaIcon","l":"getIconWidth()"},{"p":"smile.graph","c":"AdjacencyList","l":"getIndegree(int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getIndegree(int)"},{"p":"smile.graph","c":"Graph","l":"getIndegree(int)"},{"p":"smile.sequence","c":"HMM","l":"getInitialStateProbabilities()"},{"p":"smile.base.mlp","c":"Layer","l":"getInputSize()"},{"p":"smile.math.blas","c":"BLAS","l":"getInstance()"},{"p":"smile.math.blas","c":"LAPACK","l":"getInstance()"},{"p":"smile.nlp.dictionary","c":"EnglishPunctuations","l":"getInstance()"},{"p":"smile.nlp.normalizer","c":"SimpleNormalizer","l":"getInstance()"},{"p":"smile.nlp.tokenizer","c":"PennTreebankTokenizer","l":"getInstance()"},{"p":"smile.nlp.tokenizer","c":"SimpleParagraphSplitter","l":"getInstance()"},{"p":"smile.nlp.tokenizer","c":"SimpleSentenceSplitter","l":"getInstance()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"getInstance()"},{"p":"smile.swing","c":"FileChooser","l":"getInstance()"},{"p":"smile.swing","c":"FontChooser","l":"getInstance()"},{"p":"smile.swing.table","c":"DoubleCellEditor","l":"getInstance()"},{"p":"smile.data","c":"Tuple","l":"getInt(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"CharVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"LongVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getInt(int)"},{"p":"smile.data.vector","c":"Vector","l":"getInt(int)"},{"p":"smile.data","c":"DataFrame","l":"getInt(int, int)","u":"getInt(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getInt(int, String)","u":"getInt(int,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getInt(int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getInt(long...)"},{"p":"smile.data","c":"Tuple","l":"getInt(String)","u":"getInt(java.lang.String)"},{"p":"smile.nlp","c":"Trie.Node","l":"getKey()"},{"p":"smile.plot.swing","c":"Axis","l":"getLabel()"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"getLearningRate()"},{"p":"smile.classification","c":"LogisticRegression","l":"getLearningRate()"},{"p":"smile.classification","c":"Maxent","l":"getLearningRate()"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"getLearningRate()"},{"p":"smile.gap","c":"GeneticAlgorithm","l":"getLocalSearchSteps()"},{"p":"smile.data","c":"Tuple","l":"getLong(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"CharVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"IntVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getLong(int)"},{"p":"smile.data.vector","c":"Vector","l":"getLong(int)"},{"p":"smile.data","c":"DataFrame","l":"getLong(int, int)","u":"getLong(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getLong(int, String)","u":"getLong(int,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getLong(int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getLong(long...)"},{"p":"smile.data","c":"Tuple","l":"getLong(String)","u":"getLong(java.lang.String)"},{"p":"smile.plot.swing","c":"BarPlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"BoxPlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Contour","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Dendrogram","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Graphics","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Grid","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Heatmap","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Hexmap","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Histogram3D","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"LinePlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Plot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"QQPlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"ScreePlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Surface","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"TextPlot","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Wireframe","l":"getLowerBound()"},{"p":"smile.plot.swing","c":"Base","l":"getLowerBounds()"},{"p":"smile.plot.swing","c":"Canvas","l":"getLowerBounds()"},{"p":"smile.plot.swing","c":"Canvas","l":"getMargin()"},{"p":"smile.swing","c":"FontChooser","l":"getMessage(String)","u":"getMessage(java.lang.String)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"getMnemonic()"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"getMomentum()"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"getNumberFormat()"},{"p":"smile.graph","c":"AdjacencyList","l":"getNumVertices()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getNumVertices()"},{"p":"smile.graph","c":"Graph","l":"getNumVertices()"},{"p":"smile.data.type","c":"ObjectType","l":"getObjectClass()"},{"p":"smile.graph","c":"AdjacencyList","l":"getOutdegree(int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getOutdegree(int)"},{"p":"smile.graph","c":"Graph","l":"getOutdegree(int)"},{"p":"smile.base.mlp","c":"Layer","l":"getOutputSize()"},{"p":"smile.swing.table","c":"PageTableModel","l":"getPage()"},{"p":"smile.swing.table","c":"PageTableModel","l":"getPageCount()"},{"p":"smile.swing.table","c":"PageTableModel","l":"getPageSize()"},{"p":"smile.plot.swing","c":"Graphics","l":"getPaint()"},{"p":"smile.taxonomy","c":"Concept","l":"getPathFromRoot()"},{"p":"smile.taxonomy","c":"Concept","l":"getPathToRoot()"},{"p":"smile.plot.swing","c":"Base","l":"getPrecisionDigits()"},{"p":"smile.plot.swing","c":"Base","l":"getPrecisionUnit()"},{"p":"smile.swing","c":"Printer","l":"getPrinter()"},{"p":"smile.neighbor.lsh","c":"PosterioriModel","l":"getProbeSequence(double[], double, int)","u":"getProbeSequence(double[],double,int)"},{"p":"smile.classification","c":"FLD","l":"getProjection()"},{"p":"smile.plot.swing","c":"Graphics","l":"getProjection()"},{"p":"smile.feature.extraction","c":"PCA","l":"getProjection(double)"},{"p":"smile.feature.extraction","c":"PCA","l":"getProjection(int)"},{"p":"smile.plot.swing","c":"Canvas","l":"getPropertyChangeListeners()"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"getReadableImageFilter()"},{"p":"smile.swing.table","c":"PageTableModel","l":"getRealRow(int)"},{"p":"smile.swing.table","c":"PageTableModel","l":"getRealRowCount()"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf(Layout, int, int, double[], int, int[])","u":"getrf(smile.math.blas.Layout,int,int,double[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf(Layout, int, int, double[], int, int[])","u":"getrf(smile.math.blas.Layout,int,int,double[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf(Layout, int, int, DoubleBuffer, int, IntBuffer)","u":"getrf(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf(Layout, int, int, DoubleBuffer, int, IntBuffer)","u":"getrf(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf(Layout, int, int, DoublePointer, int, IntPointer)","u":"getrf(smile.math.blas.Layout,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf(Layout, int, int, DoublePointer, int, IntPointer)","u":"getrf(smile.math.blas.Layout,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf(Layout, int, int, float[], int, int[])","u":"getrf(smile.math.blas.Layout,int,int,float[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf(Layout, int, int, float[], int, int[])","u":"getrf(smile.math.blas.Layout,int,int,float[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf(Layout, int, int, FloatBuffer, int, IntBuffer)","u":"getrf(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf(Layout, int, int, FloatBuffer, int, IntBuffer)","u":"getrf(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf2(Layout, int, int, double[], int, int[])","u":"getrf2(smile.math.blas.Layout,int,int,double[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf2(Layout, int, int, double[], int, int[])","u":"getrf2(smile.math.blas.Layout,int,int,double[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf2(Layout, int, int, DoubleBuffer, int, IntBuffer)","u":"getrf2(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf2(Layout, int, int, DoubleBuffer, int, IntBuffer)","u":"getrf2(smile.math.blas.Layout,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf2(Layout, int, int, float[], int, int[])","u":"getrf2(smile.math.blas.Layout,int,int,float[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf2(Layout, int, int, float[], int, int[])","u":"getrf2(smile.math.blas.Layout,int,int,float[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"getrf2(Layout, int, int, FloatBuffer, int, IntBuffer)","u":"getrf2(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrf2(Layout, int, int, FloatBuffer, int, IntBuffer)","u":"getrf2(smile.math.blas.Layout,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.taxonomy","c":"Taxonomy","l":"getRoot()"},{"p":"smile.swing.table","c":"PageTableModel","l":"getRowCount()"},{"p":"smile.swing","c":"Table.RowHeader","l":"getRowCount()"},{"p":"smile.swing","c":"Table","l":"getRowHeader()"},{"p":"smile.swing","c":"Table.RowHeader","l":"getRowHeight(int)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrs(Layout, Transpose, int, int, double[], int, int[], double[], int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrs(Layout, Transpose, int, int, double[], int, int[], double[], int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrs(Layout, Transpose, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrs(Layout, Transpose, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrs(Layout, Transpose, int, int, DoublePointer, int, IntPointer, DoublePointer, int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrs(Layout, Transpose, int, int, DoublePointer, int, IntPointer, DoublePointer, int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrs(Layout, Transpose, int, int, float[], int, int[], float[], int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrs(Layout, Transpose, int, int, float[], int, int[], float[], int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"getrs(Layout, Transpose, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"getrs(Layout, Transpose, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"getrs(smile.math.blas.Layout,smile.math.blas.Transpose,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.data","c":"Tuple","l":"getScale(int)"},{"p":"smile.data","c":"DataFrame","l":"getScale(int, int)","u":"getScale(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getScale(int, String)","u":"getScale(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getScale(String)","u":"getScale(java.lang.String)"},{"p":"smile.swing","c":"Table","l":"getScrollableTracksViewportWidth()"},{"p":"smile.swing","c":"FontChooser","l":"getSelectedFont()"},{"p":"smile.swing","c":"FontChooser","l":"getSelectedFontFamily()"},{"p":"smile.swing","c":"FontChooser","l":"getSelectedFontSize()"},{"p":"smile.swing","c":"FontChooser","l":"getSelectedFontStyle()"},{"p":"smile.plot.swing","c":"Canvas","l":"getShapes()"},{"p":"smile.data","c":"Tuple","l":"getShort(int)"},{"p":"smile.data.vector","c":"BaseVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"CharVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"IntVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"LongVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"StringVector","l":"getShort(int)"},{"p":"smile.data.vector","c":"Vector","l":"getShort(int)"},{"p":"smile.data","c":"DataFrame","l":"getShort(int, int)","u":"getShort(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getShort(int, String)","u":"getShort(int,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getShort(int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"getShort(long...)"},{"p":"smile.data","c":"Tuple","l":"getShort(String)","u":"getShort(java.lang.String)"},{"p":"smile.swing.table","c":"DefaultTableHeaderCellRenderer","l":"getSortKey(JTable, int)","u":"getSortKey(javax.swing.JTable,int)"},{"p":"smile.sequence","c":"HMM","l":"getStateTransitionProbabilities()"},{"p":"smile.data","c":"Tuple","l":"getString(int)"},{"p":"smile.data","c":"DataFrame","l":"getString(int, int)","u":"getString(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getString(int, String)","u":"getString(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getString(String)","u":"getString(java.lang.String)"},{"p":"smile.plot.swing","c":"Graphics","l":"getStroke()"},{"p":"smile.data","c":"Tuple","l":"getStruct(int)"},{"p":"smile.data","c":"DataFrame","l":"getStruct(int, int)","u":"getStruct(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getStruct(int, String)","u":"getStruct(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getStruct(String)","u":"getStruct(java.lang.String)"},{"p":"smile.sequence","c":"HMM","l":"getSymbolEmissionProbabilities()"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"ColorCellEditor","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"DateCellEditor","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"DoubleArrayCellEditor","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"DoubleCellEditor","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"FontCellEditor","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"IntegerArrayCellEditor","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"IntegerCellEditor","l":"getTableCellEditorComponent(JTable, Object, boolean, int, int)","u":"getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)","u":"getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)"},{"p":"smile.swing.table","c":"ColorCellRenderer","l":"getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)","u":"getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)"},{"p":"smile.swing.table","c":"DefaultTableHeaderCellRenderer","l":"getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)","u":"getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)"},{"p":"smile.util","c":"Paths","l":"getTestData(String...)","u":"getTestData(java.lang.String...)"},{"p":"smile.util","c":"Paths","l":"getTestDataLines(String...)","u":"getTestDataLines(java.lang.String...)"},{"p":"smile.util","c":"Paths","l":"getTestDataReader(String...)","u":"getTestDataReader(java.lang.String...)"},{"p":"smile.data","c":"Tuple","l":"getTime(int)"},{"p":"smile.data","c":"DataFrame","l":"getTime(int, int)","u":"getTime(int,int)"},{"p":"smile.data","c":"DataFrame","l":"getTime(int, String)","u":"getTime(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"getTime(String)","u":"getTime(java.lang.String)"},{"p":"smile.plot.swing","c":"Canvas","l":"getTitle()"},{"p":"smile.plot.swing","c":"Canvas","l":"getTitleColor()"},{"p":"smile.plot.swing","c":"Canvas","l":"getTitleFont()"},{"p":"smile.plot.swing","c":"PlotPanel","l":"getToolbar()"},{"p":"smile.swing.table","c":"PageTableModel","l":"getToolbar()"},{"p":"smile.plot.swing","c":"BarPlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"BoxPlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Contour","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Dendrogram","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Graphics","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Grid","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Heatmap","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Hexmap","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Histogram3D","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"LinePlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Plot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"QQPlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"ScreePlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Surface","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"TextPlot","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Wireframe","l":"getUpperBound()"},{"p":"smile.plot.swing","c":"Base","l":"getUpperBounds()"},{"p":"smile.plot.swing","c":"Canvas","l":"getUpperBounds()"},{"p":"smile.nlp","c":"Trie.Node","l":"getValue()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"getValue(String)","u":"getValue(java.lang.String)"},{"p":"smile.swing.table","c":"PageTableModel","l":"getValueAt(int, int)","u":"getValueAt(int,int)"},{"p":"smile.swing","c":"Table.RowHeader","l":"getValueAt(int, int)","u":"getValueAt(int,int)"},{"p":"smile.swing.table","c":"PageTableModel","l":"getValueAtRealRow(int, int)","u":"getValueAtRealRow(int,int)"},{"p":"smile.graph","c":"AdjacencyList","l":"getWeight(int, int)","u":"getWeight(int,int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"getWeight(int, int)","u":"getWeight(int,int)"},{"p":"smile.graph","c":"Graph","l":"getWeight(int, int)","u":"getWeight(int,int)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"getWeightDecay()"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"getWritableImageFIlter()"},{"p":"smile.math.blas","c":"LAPACK","l":"ggglm(Layout, int, int, int, double[], int, double[], int, double[], double[], double[])","u":"ggglm(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double[],double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ggglm(Layout, int, int, int, double[], int, double[], int, double[], double[], double[])","u":"ggglm(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double[],double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"ggglm(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, DoubleBuffer)","u":"ggglm(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ggglm(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, DoubleBuffer)","u":"ggglm(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"ggglm(Layout, int, int, int, float[], int, float[], int, float[], float[], float[])","u":"ggglm(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float[],float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ggglm(Layout, int, int, int, float[], int, float[], int, float[], float[], float[])","u":"ggglm(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float[],float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"ggglm(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, FloatBuffer, FloatBuffer)","u":"ggglm(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ggglm(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, FloatBuffer, FloatBuffer)","u":"ggglm(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gglse(Layout, int, int, int, double[], int, double[], int, double[], double[], double[])","u":"gglse(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double[],double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gglse(Layout, int, int, int, double[], int, double[], int, double[], double[], double[])","u":"gglse(smile.math.blas.Layout,int,int,int,double[],int,double[],int,double[],double[],double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gglse(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, DoubleBuffer)","u":"gglse(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gglse(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, DoubleBuffer)","u":"gglse(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"gglse(Layout, int, int, int, float[], int, float[], int, float[], float[], float[])","u":"gglse(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float[],float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gglse(Layout, int, int, int, float[], int, float[], int, float[], float[], float[])","u":"gglse(smile.math.blas.Layout,int,int,int,float[],int,float[],int,float[],float[],float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"gglse(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, FloatBuffer, FloatBuffer)","u":"gglse(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"gglse(Layout, int, int, int, FloatBuffer, int, FloatBuffer, int, FloatBuffer, FloatBuffer, FloatBuffer)","u":"gglse(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer)"},{"p":"smile.feature.extraction","c":"GHA","l":"GHA(double[][], TimeFunction, String...)","u":"%3Cinit%3E(double[][],smile.math.TimeFunction,java.lang.String...)"},{"p":"smile.feature.extraction","c":"GHA","l":"GHA(int, int, TimeFunction, String...)","u":"%3Cinit%3E(int,int,smile.math.TimeFunction,java.lang.String...)"},{"p":"smile.base.cart","c":"SplitRule","l":"GINI"},{"p":"smile.glm","c":"GLM","l":"GLM(Formula, String[], Model, double[], double, double, double, double[], double[], double[][])","u":"%3Cinit%3E(smile.data.formula.Formula,java.lang.String[],smile.glm.model.Model,double[],double,double,double,double[],double[],double[][])"},{"p":"smile.nlp.embedding","c":"GloVe","l":"GloVe()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"GLU","l":"GLU()","u":"%3Cinit%3E()"},{"p":"smile.clustering","c":"GMeans","l":"GMeans(double, double[][], int[])","u":"%3Cinit%3E(double,double[][],int[])"},{"p":"smile.plot.swing","c":"Palette","l":"GOLD"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"GOOGLE"},{"p":"smile.base.mlp","c":"Layer","l":"gradient()"},{"p":"smile.plot.vega","c":"Legend","l":"gradientLength(double)"},{"p":"smile.plot.vega","c":"Legend","l":"gradientOpacity(double)"},{"p":"smile.plot.vega","c":"Legend","l":"gradientStrokeColor(String)","u":"gradientStrokeColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"gradientStrokeWidth(double)"},{"p":"smile.plot.vega","c":"Legend","l":"gradientThickness(double)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"GradientTreeBoost(Formula, RegressionTree[], double, double, double[])","u":"%3Cinit%3E(smile.data.formula.Formula,smile.regression.RegressionTree[],double,double,double[])"},{"p":"smile.regression","c":"GradientTreeBoost","l":"GradientTreeBoost(Formula, RegressionTree[], double, double, double[])","u":"%3Cinit%3E(smile.data.formula.Formula,smile.regression.RegressionTree[],double,double,double[])"},{"p":"smile.classification","c":"GradientTreeBoost","l":"GradientTreeBoost(Formula, RegressionTree[], double, double, double[], IntSet)","u":"%3Cinit%3E(smile.data.formula.Formula,smile.regression.RegressionTree[],double,double,double[],smile.util.IntSet)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"GradientTreeBoost(Formula, RegressionTree[][], double, double[])","u":"%3Cinit%3E(smile.data.formula.Formula,smile.regression.RegressionTree[][],double,double[])"},{"p":"smile.classification","c":"GradientTreeBoost","l":"GradientTreeBoost(Formula, RegressionTree[][], double, double[], IntSet)","u":"%3Cinit%3E(smile.data.formula.Formula,smile.regression.RegressionTree[][],double,double[],smile.util.IntSet)"},{"p":"smile.manifold","c":"IsoMap","l":"graph"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"graph"},{"p":"smile.manifold","c":"LLE","l":"graph"},{"p":"smile.manifold","c":"UMAP","l":"graph"},{"p":"smile.plot.swing","c":"Graphics","l":"Graphics(Projection)","u":"%3Cinit%3E(smile.plot.swing.Projection)"},{"p":"smile.plot.swing","c":"Palette","l":"GRASS_GREEN"},{"p":"smile.plot.swing","c":"Palette","l":"GREEN"},{"p":"smile.hpo","c":"Hyperparameters","l":"grid()"},{"p":"smile.plot.vega","c":"Axis","l":"grid(boolean)"},{"p":"smile.plot.swing","c":"Grid","l":"Grid(double[][][], Color)","u":"%3Cinit%3E(double[][][],java.awt.Color)"},{"p":"smile.plot.vega","c":"Legend","l":"gridAlign(String)","u":"gridAlign(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"gridCap(String)","u":"gridCap(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"gridColor(String)","u":"gridColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"gridDash(double, double)","u":"gridDash(double,double)"},{"p":"smile.plot.vega","c":"Axis","l":"gridOpacity(double)"},{"p":"smile.plot.vega","c":"Axis","l":"gridWidth(double)"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"groupby(String...)","u":"groupby(java.lang.String...)"},{"p":"smile.plot.vega","c":"LoessTransform","l":"groupby(String...)","u":"groupby(java.lang.String...)"},{"p":"smile.plot.vega","c":"PivotTransform","l":"groupby(String...)","u":"groupby(java.lang.String...)"},{"p":"smile.plot.vega","c":"QuantileTransform","l":"groupby(String...)","u":"groupby(java.lang.String...)"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"groupby(String...)","u":"groupby(java.lang.String...)"},{"p":"smile.plot.vega","c":"WindowTransform","l":"groupby(String...)","u":"groupby(java.lang.String...)"},{"p":"smile.deep.layer","c":"GroupNormLayer","l":"GroupNormLayer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.deep.layer","c":"GroupNormLayer","l":"GroupNormLayer(int, int, double, boolean)","u":"%3Cinit%3E(int,int,double,boolean)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"groups()"},{"p":"smile.vq","c":"GrowingNeuralGas","l":"GrowingNeuralGas(int)","u":"%3Cinit%3E(int)"},{"p":"smile.vq","c":"GrowingNeuralGas","l":"GrowingNeuralGas(int, double, double, int, int, double, double)","u":"%3Cinit%3E(int,double,double,int,int,double,double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"gt(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"gt(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"gt(Tensor)","u":"gt(smile.deep.tensor.Tensor)"},{"p":"smile.neighbor","c":"LSH","l":"H"},{"p":"smile.neighbor.lsh","c":"NeighborHashValueModel","l":"H"},{"p":"smile.wavelet","c":"HaarWavelet","l":"HaarWavelet()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"HammingDistance","l":"HammingDistance()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"HardShrink","l":"HardShrink()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"HardShrink","l":"HardShrink(double)","u":"%3Cinit%3E(double)"},{"p":"smile.deep.layer","c":"Layer","l":"hardShrink(int, int)","u":"hardShrink(int,int)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"harwell(Path)","u":"harwell(java.nio.file.Path)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"harwell(Path)","u":"harwell(java.nio.file.Path)"},{"p":"smile.graph","c":"AdjacencyList","l":"hasEdge(int, int)","u":"hasEdge(int,int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"hasEdge(int, int)","u":"hasEdge(int,int)"},{"p":"smile.graph","c":"Graph","l":"hasEdge(int, int)","u":"hasEdge(int,int)"},{"p":"smile.neighbor","c":"LSH","l":"hash"},{"p":"smile.neighbor.lsh","c":"Hash","l":"hash(double[])"},{"p":"smile.neighbor.lsh","c":"Probe","l":"hash(Hash, PrZ[])","u":"hash(smile.neighbor.lsh.Hash,smile.neighbor.lsh.PrZ[])"},{"p":"smile.neighbor.lsh","c":"Hash","l":"Hash(int, int, double, int)","u":"%3Cinit%3E(int,int,double,int)"},{"p":"smile.hash","c":"SimHash","l":"hash(T)"},{"p":"smile.hash","c":"MurmurHash3","l":"hash128(ByteBuffer, int, int, long, long[])","u":"hash128(java.nio.ByteBuffer,int,int,long,long[])"},{"p":"smile.hash","c":"MurmurHash3","l":"hash32(byte[], int, int, int)","u":"hash32(byte[],int,int,int)"},{"p":"smile.hash","c":"MurmurHash2","l":"hash32(ByteBuffer, int, int, int)","u":"hash32(java.nio.ByteBuffer,int,int,int)"},{"p":"smile.hash","c":"MurmurHash3","l":"hash32(String, int)","u":"hash32(java.lang.String,int)"},{"p":"smile.hash","c":"MurmurHash2","l":"hash64(ByteBuffer, int, int, long)","u":"hash64(java.nio.ByteBuffer,int,int,long)"},{"p":"smile.association","c":"AssociationRule","l":"hashCode()"},{"p":"smile.association","c":"ItemSet","l":"hashCode()"},{"p":"smile.data","c":"SampleInstance","l":"hashCode()"},{"p":"smile.deep","c":"SampleBatch","l":"hashCode()"},{"p":"smile.llm","c":"Transformer.Options","l":"hashCode()"},{"p":"smile.math","c":"Complex","l":"hashCode()"},{"p":"smile.nlp","c":"Bigram","l":"hashCode()"},{"p":"smile.nlp","c":"NGram","l":"hashCode()"},{"p":"smile.nlp","c":"SimpleText","l":"hashCode()"},{"p":"smile.plot.vega","c":"SortField","l":"hashCode()"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"hashCode()"},{"p":"smile.util","c":"Bytes","l":"hashCode()"},{"p":"smile.util","c":"IntPair","l":"hashCode()"},{"p":"smile.util","c":"Tuple2","l":"hashCode()"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"hashCode()"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"hashCode()"},{"p":"smile.feature.extraction","c":"HashEncoder","l":"HashEncoder(Function<String, String[]>, int)","u":"%3Cinit%3E(java.util.function.Function,int)"},{"p":"smile.feature.extraction","c":"HashEncoder","l":"HashEncoder(Function<String, String[]>, int, boolean)","u":"%3Cinit%3E(java.util.function.Function,int,boolean)"},{"p":"smile.neighbor.lsh","c":"HashValueParzenModel","l":"HashValueParzenModel(MultiProbeHash, MultiProbeSample[], double)","u":"%3Cinit%3E(smile.neighbor.lsh.MultiProbeHash,smile.neighbor.lsh.MultiProbeSample[],double)"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"hasMissing(Tuple)","u":"hasMissing(smile.data.Tuple)"},{"p":"smile.data","c":"Tuple","l":"hasNull()"},{"p":"smile.plot.vega","c":"FacetField","l":"header(String)","u":"header(java.lang.String)"},{"p":"smile.plot.swing","c":"Headless","l":"Headless(JComponent, int, int)","u":"%3Cinit%3E(javax.swing.JComponent,int,int)"},{"p":"smile.sort","c":"HeapSelect","l":"heapify()"},{"p":"smile.sort","c":"HeapSelect","l":"HeapSelect(Class<?>, int)","u":"%3Cinit%3E(java.lang.Class,int)"},{"p":"smile.sort","c":"HeapSelect","l":"HeapSelect(T[])","u":"%3Cinit%3E(T[])"},{"p":"smile.plot.swing","c":"Palette","l":"heat(int)"},{"p":"smile.plot.swing","c":"Palette","l":"heat(int, float)","u":"heat(int,float)"},{"p":"smile.plot.swing","c":"Heatmap","l":"Heatmap(double[], double[], double[][], Color[])","u":"%3Cinit%3E(double[],double[],double[][],java.awt.Color[])"},{"p":"smile.plot.swing","c":"Heatmap","l":"Heatmap(String[], String[], double[][], Color[])","u":"%3Cinit%3E(java.lang.String[],java.lang.String[],double[][],java.awt.Color[])"},{"p":"smile.clustering","c":"HierarchicalClustering","l":"height()"},{"p":"smile.plot.vega","c":"Mark","l":"height(double)"},{"p":"smile.plot.vega","c":"Layer","l":"height(int)"},{"p":"smile.plot.vega","c":"View","l":"height(int)"},{"p":"smile.plot.vega","c":"Layer","l":"height(String)","u":"height(java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"height(String)","u":"height(java.lang.String)"},{"p":"smile.plot.vega","c":"Layer","l":"heightStep(int)"},{"p":"smile.plot.vega","c":"View","l":"heightStep(int)"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"HellingerKernel()","u":"%3Cinit%3E()"},{"p":"smile.plot.swing","c":"Hexmap","l":"Hexmap(double[][], Color[], Hexmap.Tooltip)","u":"%3Cinit%3E(double[][],java.awt.Color[],smile.plot.swing.Hexmap.Tooltip)"},{"p":"smile.swing.table","c":"DateCellEditor","l":"HHMM"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"HHMM"},{"p":"smile.swing.table","c":"DateCellEditor","l":"HHMMSS"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"HHMMSS"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"hi()"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"hi()"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"hi()"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"hi()"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"hi()"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"hi()"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"hi()"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"hi()"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"hi()"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"hi()"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"hi()"},{"p":"smile.math.kernel","c":"LinearKernel","l":"hi()"},{"p":"smile.math.kernel","c":"MaternKernel","l":"hi()"},{"p":"smile.math.kernel","c":"MercerKernel","l":"hi()"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"hi()"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"hi()"},{"p":"smile.math.kernel","c":"ProductKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"hi()"},{"p":"smile.math.kernel","c":"SumKernel","l":"hi()"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"hi()"},{"p":"smile.base.mlp","c":"HiddenLayer","l":"HiddenLayer(int, int, double, ActivationFunction)","u":"%3Cinit%3E(int,int,double,smile.base.mlp.ActivationFunction)"},{"p":"smile.base.mlp","c":"HiddenLayerBuilder","l":"HiddenLayerBuilder(int, double, ActivationFunction)","u":"%3Cinit%3E(int,double,smile.base.mlp.ActivationFunction)"},{"p":"smile.clustering","c":"HierarchicalClustering","l":"HierarchicalClustering(int[][], double[])","u":"%3Cinit%3E(int[][],double[])"},{"p":"smile.deep","c":"Loss","l":"hingeEmbedding()"},{"p":"smile.plot.swing","c":"Histogram","l":"Histogram()","u":"%3Cinit%3E()"},{"p":"smile.plot.swing","c":"Histogram3D","l":"Histogram3D(double[][], int, int, boolean, Color[])","u":"%3Cinit%3E(double[][],int,int,boolean,java.awt.Color[])"},{"p":"smile.sequence","c":"HMM","l":"HMM(double[], Matrix, Matrix)","u":"%3Cinit%3E(double[],smile.math.matrix.Matrix,smile.math.matrix.Matrix)"},{"p":"smile.sequence","c":"HMMLabeler","l":"HMMLabeler(HMM, ToIntFunction<T>)","u":"%3Cinit%3E(smile.sequence.HMM,java.util.function.ToIntFunction)"},{"p":"smile.nlp.pos","c":"HMMPOSTagger","l":"HMMPOSTagger()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"Paths","l":"home"},{"p":"smile.plot.vega","c":"Concat","l":"horizontal(VegaLite...)","u":"horizontal(smile.plot.vega.VegaLite...)"},{"p":"smile.data.formula","c":"DateFeature","l":"HOUR"},{"p":"smile.plot.swing","c":"Palette","l":"hsv(float, float, float, float)","u":"hsv(float,float,float,float)"},{"p":"smile.plot.vega","c":"VegaLite","l":"html()"},{"p":"smile.plot.vega","c":"VegaLite","l":"html(String)","u":"html(java.lang.String)"},{"p":"smile.util","c":"Strings","l":"htmlEscape(String)","u":"htmlEscape(java.lang.String)"},{"p":"smile.util","c":"Strings","l":"htmlEscape(String, String)","u":"htmlEscape(java.lang.String,java.lang.String)"},{"p":"smile.base.cart","c":"Loss.Type","l":"Huber"},{"p":"smile.base.cart","c":"Loss","l":"huber(double)"},{"p":"smile.math.kernel","c":"HyperbolicTangent","l":"HyperbolicTangent(double, double, double[], double[])","u":"%3Cinit%3E(double,double,double[],double[])"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"HyperbolicTangentKernel()","u":"%3Cinit%3E()"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"HyperbolicTangentKernel(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"HyperbolicTangentKernel(double, double, double[], double[])","u":"%3Cinit%3E(double,double,double[],double[])"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"HyperGeometricDistribution(int, int, int)","u":"%3Cinit%3E(int,int,int)"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"LinearKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"MaternKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"MercerKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"ProductKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"SumKernel","l":"hyperparameters()"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"hyperparameters()"},{"p":"smile.hpo","c":"Hyperparameters","l":"Hyperparameters()","u":"%3Cinit%3E()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix.Entry","l":"i"},{"p":"smile.math.matrix","c":"SparseMatrix.Entry","l":"i"},{"p":"smile.util","c":"SparseArray.Entry","l":"i"},{"p":"smile.math.blas","c":"BLAS","l":"iamax(double[])"},{"p":"smile.math.blas","c":"BLAS","l":"iamax(float[])"},{"p":"smile.math.blas","c":"BLAS","l":"iamax(int, double[], int)","u":"iamax(int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"iamax(int, double[], int)","u":"iamax(int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"iamax(int, float[], int)","u":"iamax(int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"iamax(int, float[], int)","u":"iamax(int,float[],int)"},{"p":"smile.nlp","c":"Text","l":"id"},{"p":"smile.data.type","c":"ArrayType","l":"id()"},{"p":"smile.data.type","c":"BooleanType","l":"id()"},{"p":"smile.data.type","c":"ByteType","l":"id()"},{"p":"smile.data.type","c":"CharType","l":"id()"},{"p":"smile.data.type","c":"DataType","l":"id()"},{"p":"smile.data.type","c":"DateTimeType","l":"id()"},{"p":"smile.data.type","c":"DateType","l":"id()"},{"p":"smile.data.type","c":"DecimalType","l":"id()"},{"p":"smile.data.type","c":"DoubleType","l":"id()"},{"p":"smile.data.type","c":"FloatType","l":"id()"},{"p":"smile.data.type","c":"IntegerType","l":"id()"},{"p":"smile.data.type","c":"LongType","l":"id()"},{"p":"smile.data.type","c":"ObjectType","l":"id()"},{"p":"smile.data.type","c":"ShortType","l":"id()"},{"p":"smile.data.type","c":"StringType","l":"id()"},{"p":"smile.data.type","c":"StructType","l":"id()"},{"p":"smile.data.type","c":"TimeType","l":"id()"},{"p":"smile.plot.vega","c":"VegaLite","l":"iframe()"},{"p":"smile.plot.vega","c":"VegaLite","l":"iframe(String)","u":"iframe(java.lang.String)"},{"p":"smile.plot.vega","c":"WindowTransform","l":"ignorePeers(boolean)"},{"p":"smile.math","c":"Complex","l":"im"},{"p":"smile.vision","c":"ImageDataset","l":"ImageDataset(int, String, Transform, ToIntFunction<String>)","u":"%3Cinit%3E(int,java.lang.String,smile.vision.transform.Transform,java.util.function.ToIntFunction)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"IMatrix()","u":"%3Cinit%3E()"},{"p":"smile.math.matrix","c":"IMatrix","l":"IMatrix()","u":"%3Cinit%3E()"},{"p":"smile.base.cart","c":"CART","l":"importance"},{"p":"smile.base.cart","c":"CART","l":"importance()"},{"p":"smile.classification","c":"AdaBoost","l":"importance()"},{"p":"smile.classification","c":"GradientTreeBoost","l":"importance()"},{"p":"smile.classification","c":"RandomForest","l":"importance()"},{"p":"smile.regression","c":"GradientTreeBoost","l":"importance()"},{"p":"smile.regression","c":"RandomForest","l":"importance()"},{"p":"smile.base.cart","c":"RegressionNode","l":"impurity()"},{"p":"smile.base.cart","c":"CART","l":"impurity(LeafNode)","u":"impurity(smile.base.cart.LeafNode)"},{"p":"smile.classification","c":"DecisionTree","l":"impurity(LeafNode)","u":"impurity(smile.base.cart.LeafNode)"},{"p":"smile.regression","c":"RegressionTree","l":"impurity(LeafNode)","u":"impurity(smile.base.cart.LeafNode)"},{"p":"smile.base.cart","c":"DecisionNode","l":"impurity(SplitRule)","u":"impurity(smile.base.cart.SplitRule)"},{"p":"smile.base.cart","c":"DecisionNode","l":"impurity(SplitRule, int, int[])","u":"impurity(smile.base.cart.SplitRule,int,int[])"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"impute(double[][])"},{"p":"smile.feature.imputation","c":"SVDImputer","l":"impute(double[][], int, int)","u":"impute(double[][],int,int)"},{"p":"smile.plot.vega","c":"Transform","l":"impute(String, String)","u":"impute(java.lang.String,java.lang.String)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"IN"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"in()"},{"p":"smile.util","c":"MutableInt","l":"increment()"},{"p":"smile.util","c":"MutableInt","l":"increment(int)"},{"p":"smile.base.cart","c":"CART","l":"index"},{"p":"smile.manifold","c":"IsoMap","l":"index"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"index"},{"p":"smile.manifold","c":"LLE","l":"index"},{"p":"smile.manifold","c":"UMAP","l":"index"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix.Entry","l":"index"},{"p":"smile.math.matrix","c":"SparseMatrix.Entry","l":"index"},{"p":"smile.neighbor","c":"Neighbor","l":"index"},{"p":"smile.util","c":"IntSet","l":"index"},{"p":"smile.math.blas","c":"EigenRange","l":"INDEX"},{"p":"smile.deep.tensor","c":"Device","l":"index()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"index(int, int)","u":"index(int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"index(int, int)","u":"index(int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"index(int, int)","u":"index(int,int)"},{"p":"smile.data","c":"IndexDataFrame","l":"IndexDataFrame(DataFrame, int[])","u":"%3Cinit%3E(smile.data.DataFrame,int[])"},{"p":"smile.util","c":"IntSet","l":"indexOf(int)"},{"p":"smile.classification","c":"ClassLabels","l":"indexOf(int[])"},{"p":"smile.data","c":"DataFrame","l":"indexOf(String)","u":"indexOf(java.lang.String)"},{"p":"smile.data","c":"IndexDataFrame","l":"indexOf(String)","u":"indexOf(java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"indexOf(String)","u":"indexOf(java.lang.String)"},{"p":"smile.data.type","c":"StructType","l":"indexOf(String)","u":"indexOf(java.lang.String)"},{"p":"smile.data.type","c":"DataType","l":"infer(String)","u":"infer(java.lang.String)"},{"p":"smile.io","c":"JSON","l":"inferSchema(BufferedReader, int)","u":"inferSchema(java.io.BufferedReader,int)"},{"p":"smile.io","c":"CSV","l":"inferSchema(Reader, int)","u":"inferSchema(java.io.Reader,int)"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"info"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"info"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"info"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"info"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"info"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"info"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"info"},{"p":"smile.feature.selection","c":"InformationValue","l":"InformationValue(String, double, double[], double[])","u":"%3Cinit%3E(java.lang.String,double,double[],double[])"},{"p":"smile.llm","c":"Transformer","l":"init()"},{"p":"smile.neighbor","c":"LSH","l":"initHashTable(int, int, int, double, int)","u":"initHashTable(int,int,int,double,int)"},{"p":"smile.neighbor","c":"MPLSH","l":"initHashTable(int, int, int, double, int)","u":"initHashTable(int,int,int,double,int)"},{"p":"smile.plot.vega","c":"Mark","l":"innerRadius(double)"},{"p":"smile.base.mlp","c":"Layer","l":"input(int)"},{"p":"smile.base.mlp","c":"Layer","l":"input(int, double)","u":"input(int,double)"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"inputChannels()"},{"p":"smile.base.mlp","c":"InputLayer","l":"InputLayer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.base.mlp","c":"InputLayer","l":"InputLayer(int, double)","u":"%3Cinit%3E(int,double)"},{"p":"smile.util","c":"PriorityQueue","l":"insert(int)"},{"p":"smile.validation.metric","c":"Accuracy","l":"instance"},{"p":"smile.validation.metric","c":"AdjustedRandIndex","l":"instance"},{"p":"smile.validation.metric","c":"AUC","l":"instance"},{"p":"smile.validation.metric","c":"Error","l":"instance"},{"p":"smile.validation.metric","c":"Fallout","l":"instance"},{"p":"smile.validation.metric","c":"FDR","l":"instance"},{"p":"smile.validation.metric","c":"LogLoss","l":"instance"},{"p":"smile.validation.metric","c":"MAD","l":"instance"},{"p":"smile.validation.metric","c":"MatthewsCorrelation","l":"instance"},{"p":"smile.validation.metric","c":"MSE","l":"instance"},{"p":"smile.validation.metric","c":"MutualInformation","l":"instance"},{"p":"smile.validation.metric","c":"Precision","l":"instance"},{"p":"smile.validation.metric","c":"R2","l":"instance"},{"p":"smile.validation.metric","c":"RandIndex","l":"instance"},{"p":"smile.validation.metric","c":"Recall","l":"instance"},{"p":"smile.validation.metric","c":"RMSE","l":"instance"},{"p":"smile.validation.metric","c":"RSS","l":"instance"},{"p":"smile.validation.metric","c":"Sensitivity","l":"instance"},{"p":"smile.validation.metric","c":"Specificity","l":"instance"},{"p":"smile.deep.tensor","c":"ScalarType","l":"Int16"},{"p":"smile.deep.tensor","c":"ScalarType","l":"Int32"},{"p":"smile.deep.tensor","c":"ScalarType","l":"Int64"},{"p":"smile.deep.tensor","c":"ScalarType","l":"Int8"},{"p":"smile.util","c":"IntArray2D","l":"IntArray2D(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.util","c":"IntArray2D","l":"IntArray2D(int, int, int)","u":"%3Cinit%3E(int,int,int)"},{"p":"smile.util","c":"IntArray2D","l":"IntArray2D(int, int, int[])","u":"%3Cinit%3E(int,int,int[])"},{"p":"smile.util","c":"IntArray2D","l":"IntArray2D(int[][])","u":"%3Cinit%3E(int[][])"},{"p":"smile.util","c":"IntArrayList","l":"IntArrayList()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"IntArrayList","l":"IntArrayList(int)","u":"%3Cinit%3E(int)"},{"p":"smile.util","c":"IntArrayList","l":"IntArrayList(int[])","u":"%3Cinit%3E(int[])"},{"p":"smile.util","c":"IntDoubleHashMap","l":"IntDoubleHashMap()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"IntDoubleHashMap","l":"IntDoubleHashMap(int, float)","u":"%3Cinit%3E(int,float)"},{"p":"smile.data.type","c":"DataType.ID","l":"Integer"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"INTEGER"},{"p":"smile.util","c":"Regex","l":"INTEGER"},{"p":"smile.util","c":"Regex","l":"INTEGER_REGEX"},{"p":"smile.swing.table","c":"IntegerArrayCellEditor","l":"IntegerArrayCellEditor()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"IntegerArrayCellRenderer","l":"IntegerArrayCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.data.type","c":"DataTypes","l":"IntegerArrayType"},{"p":"smile.swing.table","c":"IntegerCellEditor","l":"IntegerCellEditor()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"IntegerCellEditor","l":"IntegerCellEditor(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.data.type","c":"DataTypes","l":"IntegerObjectType"},{"p":"smile.data.type","c":"DataTypes","l":"IntegerType"},{"p":"smile.data.formula","c":"Terms","l":"interact(String...)","u":"interact(java.lang.String...)"},{"p":"smile.base.svm","c":"KernelMachine","l":"intercept()"},{"p":"smile.regression","c":"LinearModel","l":"intercept()"},{"p":"smile.timeseries","c":"AR","l":"intercept()"},{"p":"smile.timeseries","c":"ARMA","l":"intercept()"},{"p":"smile.base.cart","c":"Loss","l":"intercept(double[])"},{"p":"smile.base.cart","c":"InternalNode","l":"InternalNode(int, double, double, Node, Node)","u":"%3Cinit%3E(int,double,double,smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.interpolation","c":"AbstractInterpolation","l":"interpolate(double)"},{"p":"smile.interpolation","c":"Interpolation","l":"interpolate(double)"},{"p":"smile.interpolation","c":"KrigingInterpolation1D","l":"interpolate(double)"},{"p":"smile.interpolation","c":"RBFInterpolation1D","l":"interpolate(double)"},{"p":"smile.interpolation","c":"ShepardInterpolation1D","l":"interpolate(double)"},{"p":"smile.interpolation","c":"BicubicInterpolation","l":"interpolate(double, double)","u":"interpolate(double,double)"},{"p":"smile.interpolation","c":"BilinearInterpolation","l":"interpolate(double, double)","u":"interpolate(double,double)"},{"p":"smile.interpolation","c":"CubicSplineInterpolation2D","l":"interpolate(double, double)","u":"interpolate(double,double)"},{"p":"smile.interpolation","c":"Interpolation2D","l":"interpolate(double, double)","u":"interpolate(double,double)"},{"p":"smile.interpolation","c":"KrigingInterpolation2D","l":"interpolate(double, double)","u":"interpolate(double,double)"},{"p":"smile.interpolation","c":"RBFInterpolation2D","l":"interpolate(double, double)","u":"interpolate(double,double)"},{"p":"smile.interpolation","c":"ShepardInterpolation2D","l":"interpolate(double, double)","u":"interpolate(double,double)"},{"p":"smile.interpolation","c":"KrigingInterpolation","l":"interpolate(double...)"},{"p":"smile.interpolation","c":"RBFInterpolation","l":"interpolate(double...)"},{"p":"smile.interpolation","c":"ShepardInterpolation","l":"interpolate(double...)"},{"p":"smile.interpolation","c":"LaplaceInterpolation","l":"interpolate(double[][])"},{"p":"smile.interpolation","c":"LaplaceInterpolation","l":"interpolate(double[][], double)","u":"interpolate(double[][],double)"},{"p":"smile.interpolation","c":"LaplaceInterpolation","l":"interpolate(double[][], double, int)","u":"interpolate(double[][],double,int)"},{"p":"smile.plot.vega","c":"Mark","l":"interpolate(String)","u":"interpolate(java.lang.String)"},{"p":"smile.data.measure","c":"IntervalScale","l":"IntervalScale(NumberFormat)","u":"%3Cinit%3E(java.text.NumberFormat)"},{"p":"smile.data.formula","c":"IntFunction","l":"IntFunction(String, Term, IntFunction)","u":"%3Cinit%3E(java.lang.String,smile.data.formula.Term,smile.math.IntFunction)"},{"p":"smile.util","c":"IntHashSet","l":"IntHashSet()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"IntHashSet","l":"IntHashSet(int, float)","u":"%3Cinit%3E(int,float)"},{"p":"smile.sort","c":"IntHeapSelect","l":"IntHeapSelect(int)","u":"%3Cinit%3E(int)"},{"p":"smile.sort","c":"IntHeapSelect","l":"IntHeapSelect(int[])","u":"%3Cinit%3E(int[])"},{"p":"smile.util","c":"IntPair","l":"IntPair(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.util","c":"IntSet","l":"IntSet(int[])","u":"%3Cinit%3E(int[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"intValue()"},{"p":"smile.data","c":"DataFrame","l":"intVector(Enum<?>)","u":"intVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"intVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"intVector(int)"},{"p":"smile.data","c":"DataFrame","l":"intVector(String)","u":"intVector(java.lang.String)"},{"p":"smile.math","c":"Function","l":"inv(double)"},{"p":"smile.math","c":"Scaler","l":"inv(double)"},{"p":"smile.plot.vega","c":"Mark","l":"invalid(String)","u":"invalid(java.lang.String)"},{"p":"smile.math.special","c":"Erf","l":"inverf(double)"},{"p":"smile.math.special","c":"Erf","l":"inverfc(double)"},{"p":"smile.math.matrix","c":"BandMatrix.Cholesky","l":"inverse()"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"inverse()"},{"p":"smile.math.matrix","c":"BigMatrix.Cholesky","l":"inverse()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"inverse()"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"inverse()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.Cholesky","l":"inverse()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"inverse()"},{"p":"smile.math.matrix.fp32","c":"Matrix.Cholesky","l":"inverse()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"inverse()"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"inverse()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"inverse()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.Cholesky","l":"inverse()"},{"p":"smile.math.matrix","c":"Matrix.Cholesky","l":"inverse()"},{"p":"smile.math.matrix","c":"Matrix","l":"inverse()"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"inverse()"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"inverse()"},{"p":"smile.math.matrix","c":"SymmMatrix.Cholesky","l":"inverse()"},{"p":"smile.math","c":"TimeFunction","l":"inverse(double, double)","u":"inverse(double,double)"},{"p":"smile.math","c":"TimeFunction","l":"inverse(double, double, double)","u":"inverse(double,double,double)"},{"p":"smile.math","c":"TimeFunction","l":"inverse(double, double, double, boolean)","u":"inverse(double,double,double,boolean)"},{"p":"smile.wavelet","c":"Wavelet","l":"inverse(double[])"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"inverseCDF()"},{"p":"smile.math.rbf","c":"InverseMultiquadricRadialBasis","l":"InverseMultiquadricRadialBasis()","u":"%3Cinit%3E()"},{"p":"smile.math.rbf","c":"InverseMultiquadricRadialBasis","l":"InverseMultiquadricRadialBasis(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.special","c":"Beta","l":"inverseRegularizedIncompleteBetaFunction(double, double, double)","u":"inverseRegularizedIncompleteBetaFunction(double,double,double)"},{"p":"smile.math.special","c":"Gamma","l":"inverseRegularizedIncompleteGamma(double, double)","u":"inverseRegularizedIncompleteGamma(double,double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"inverseTransformSampling()"},{"p":"smile.data.transform","c":"InvertibleColumnTransform","l":"invert(DataFrame)","u":"invert(smile.data.DataFrame)"},{"p":"smile.data.transform","c":"InvertibleTransform","l":"invert(DataFrame)","u":"invert(smile.data.DataFrame)"},{"p":"smile.data.transform","c":"InvertibleColumnTransform","l":"invert(Tuple)","u":"invert(smile.data.Tuple)"},{"p":"smile.data.transform","c":"InvertibleTransform","l":"invert(Tuple)","u":"invert(smile.data.Tuple)"},{"p":"smile.data.transform","c":"InvertibleColumnTransform","l":"InvertibleColumnTransform(String, Map<String, Function>, Map<String, Function>)","u":"%3Cinit%3E(java.lang.String,java.util.Map,java.util.Map)"},{"p":"smile.glm.model","c":"Model","l":"invlink(double)"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"ipiv"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"ipiv"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"ipiv"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"ipiv"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"ipiv"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"ipiv"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"ipiv"},{"p":"smile.sort","c":"IQAgent","l":"IQAgent()","u":"%3Cinit%3E()"},{"p":"smile.sort","c":"IQAgent","l":"IQAgent(int)","u":"%3Cinit%3E(int)"},{"p":"smile.taxonomy","c":"Concept","l":"isAncestorOf(Concept)","u":"isAncestorOf(smile.taxonomy.Concept)"},{"p":"smile.deep","c":"CUDA","l":"isAvailable()"},{"p":"smile.data.type","c":"BooleanType","l":"isBoolean()"},{"p":"smile.data.type","c":"DataType","l":"isBoolean()"},{"p":"smile.data.type","c":"ObjectType","l":"isBoolean()"},{"p":"smile.data.type","c":"ByteType","l":"isByte()"},{"p":"smile.data.type","c":"DataType","l":"isByte()"},{"p":"smile.data.type","c":"ObjectType","l":"isByte()"},{"p":"smile.swing","c":"Table.RowHeader","l":"isCellEditable(int, int)","u":"isCellEditable(int,int)"},{"p":"smile.data.type","c":"CharType","l":"isChar()"},{"p":"smile.data.type","c":"DataType","l":"isChar()"},{"p":"smile.data.type","c":"ObjectType","l":"isChar()"},{"p":"smile.deep.tensor","c":"Device","l":"isCPU()"},{"p":"smile.deep.tensor","c":"Device","l":"isCUDA()"},{"p":"smile.data.type","c":"DataType","l":"isDouble()"},{"p":"smile.data.type","c":"DoubleType","l":"isDouble()"},{"p":"smile.data.type","c":"ObjectType","l":"isDouble()"},{"p":"smile.data.type","c":"DataType","l":"isDouble(DataType)","u":"isDouble(smile.data.type.DataType)"},{"p":"smile.data","c":"DataFrame","l":"isEmpty()"},{"p":"smile.data","c":"Dataset","l":"isEmpty()"},{"p":"smile.plot.swing","c":"Isoline","l":"isEmpty()"},{"p":"smile.util","c":"DoubleArrayList","l":"isEmpty()"},{"p":"smile.util","c":"IntArrayList","l":"isEmpty()"},{"p":"smile.util","c":"PriorityQueue","l":"isEmpty()"},{"p":"smile.util","c":"SparseArray","l":"isEmpty()"},{"p":"smile.neighbor.lsh","c":"Probe","l":"isExpandable()"},{"p":"smile.neighbor.lsh","c":"Probe","l":"isExtendable()"},{"p":"smile.data.type","c":"DataType","l":"isFloat()"},{"p":"smile.data.type","c":"FloatType","l":"isFloat()"},{"p":"smile.data.type","c":"ObjectType","l":"isFloat()"},{"p":"smile.data.type","c":"DataType","l":"isFloat(DataType)","u":"isFloat(smile.data.type.DataType)"},{"p":"smile.data.type","c":"DataType","l":"isFloating()"},{"p":"smile.plot.swing","c":"Axis","l":"isFrameVisible()"},{"p":"smile.plot.swing","c":"Axis","l":"isGridVisible()"},{"p":"smile.deep.activation","c":"ActivationFunction","l":"isInplace()"},{"p":"smile.data.type","c":"DataType","l":"isInt()"},{"p":"smile.data.type","c":"IntegerType","l":"isInt()"},{"p":"smile.data.type","c":"ObjectType","l":"isInt()"},{"p":"smile.data.type","c":"DataType","l":"isInt(DataType)","u":"isInt(smile.data.type.DataType)"},{"p":"smile.math","c":"MathEx","l":"isInt(double)"},{"p":"smile.math","c":"MathEx","l":"isInt(float)"},{"p":"smile.data.type","c":"DataType","l":"isIntegral()"},{"p":"smile.taxonomy","c":"Concept","l":"isLeaf()"},{"p":"smile.plot.swing","c":"Canvas","l":"isLegendVisible()"},{"p":"smile.data.type","c":"DataType","l":"isLong()"},{"p":"smile.data.type","c":"LongType","l":"isLong()"},{"p":"smile.data.type","c":"ObjectType","l":"isLong()"},{"p":"smile.data.type","c":"DataType","l":"isLong(DataType)","u":"isLong(smile.data.type.DataType)"},{"p":"smile.deep.tensor","c":"Device","l":"isMPS()"},{"p":"smile.classification","c":"RBFNetwork","l":"isNormalized()"},{"p":"smile.regression","c":"RBFNetwork","l":"isNormalized()"},{"p":"smile.data","c":"Tuple","l":"isNullAt(int)"},{"p":"smile.data.vector","c":"Vector","l":"isNullAt(int)"},{"p":"smile.data","c":"DataFrame","l":"isNullAt(int, int)","u":"isNullAt(int,int)"},{"p":"smile.data","c":"DataFrame","l":"isNullAt(int, String)","u":"isNullAt(int,java.lang.String)"},{"p":"smile.data","c":"Tuple","l":"isNullAt(String)","u":"isNullAt(java.lang.String)"},{"p":"smile.util","c":"Strings","l":"isNullOrEmpty(String)","u":"isNullOrEmpty(java.lang.String)"},{"p":"smile.data.type","c":"DataType","l":"isNumeric()"},{"p":"smile.data.type","c":"StructField","l":"isNumeric()"},{"p":"smile.swing.table","c":"DateCellEditor","l":"ISO8601"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"ISO8601"},{"p":"smile.data.type","c":"DataType","l":"isObject()"},{"p":"smile.data.type","c":"ObjectType","l":"isObject()"},{"p":"smile.data.type","c":"StringType","l":"isObject()"},{"p":"smile.anomaly","c":"IsolationForest","l":"IsolationForest(int, int, IsolationTree...)","u":"%3Cinit%3E(int,int,smile.anomaly.IsolationTree...)"},{"p":"smile.anomaly","c":"IsolationTree","l":"IsolationTree(List<double[]>, int, int)","u":"%3Cinit%3E(java.util.List,int,int)"},{"p":"smile.plot.swing","c":"Isoline","l":"Isoline(double, boolean)","u":"%3Cinit%3E(double,boolean)"},{"p":"smile.manifold","c":"IsoMap","l":"IsoMap(int[], double[][], AdjacencyList)","u":"%3Cinit%3E(int[],double[][],smile.graph.AdjacencyList)"},{"p":"smile.manifold","c":"IsotonicMDS","l":"IsotonicMDS(double, double[][])","u":"%3Cinit%3E(double,double[][])"},{"p":"smile.classification","c":"IsotonicRegressionScaling","l":"IsotonicRegressionScaling(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"isPower2(int)"},{"p":"smile.data.type","c":"DataType","l":"isPrimitive()"},{"p":"smile.math","c":"MathEx","l":"isProbablePrime(long, int)","u":"isProbablePrime(long,int)"},{"p":"smile.neighbor.lsh","c":"Probe","l":"isShiftable()"},{"p":"smile.data.type","c":"DataType","l":"isShort()"},{"p":"smile.data.type","c":"ObjectType","l":"isShort()"},{"p":"smile.data.type","c":"ShortType","l":"isShort()"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"isSingular()"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"isSingular()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"isSingular()"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"isSingular()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"isSingular()"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"isSingular()"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"isSingular()"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"isSpecialTokenAllowed()"},{"p":"smile.data.type","c":"DataType","l":"isString()"},{"p":"smile.data.type","c":"StringType","l":"isString()"},{"p":"smile.math.matrix","c":"BandMatrix","l":"isSymmetric()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"isSymmetric()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"isSymmetric()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"isSymmetric()"},{"p":"smile.math.matrix","c":"Matrix","l":"isSymmetric()"},{"p":"smile.plot.swing","c":"Axis","l":"isTickVisible()"},{"p":"smile.deep.layer","c":"Layer","l":"isTraining()"},{"p":"smile.data.formula","c":"Feature","l":"isVariable()"},{"p":"smile.math","c":"MathEx","l":"isZero(double)"},{"p":"smile.math","c":"MathEx","l":"isZero(double, double)","u":"isZero(double,double)"},{"p":"smile.math","c":"MathEx","l":"isZero(float)"},{"p":"smile.math","c":"MathEx","l":"isZero(float, float)","u":"isZero(float,float)"},{"p":"smile.association","c":"ItemSet","l":"items"},{"p":"smile.association","c":"ItemSet","l":"ItemSet(int[], int)","u":"%3Cinit%3E(int[],int)"},{"p":"smile.association","c":"ARM","l":"iterator()"},{"p":"smile.association","c":"FPGrowth","l":"iterator()"},{"p":"smile.data","c":"IndexDataFrame","l":"iterator()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"iterator()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"iterator()"},{"p":"smile.nlp.dictionary","c":"Dictionary","l":"iterator()"},{"p":"smile.nlp.dictionary","c":"EnglishDictionary","l":"iterator()"},{"p":"smile.nlp.dictionary","c":"EnglishPunctuations","l":"iterator()"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"iterator()"},{"p":"smile.nlp.dictionary","c":"SimpleDictionary","l":"iterator()"},{"p":"smile.util","c":"SparseArray","l":"iterator()"},{"p":"smile.vision","c":"ImageDataset","l":"iterator()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"iterator(int, int)","u":"iterator(int,int)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"iterator(int, int)","u":"iterator(int,int)"},{"p":"smile.feature.selection","c":"InformationValue","l":"iv"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix.Entry","l":"j"},{"p":"smile.math.matrix","c":"SparseMatrix.Entry","l":"j"},{"p":"smile.math.distance","c":"JaccardDistance","l":"JaccardDistance()","u":"%3Cinit%3E()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"Jacobi()"},{"p":"smile.math.matrix","c":"IMatrix","l":"Jacobi()"},{"p":"smile.math.distance","c":"JensenShannonDistance","l":"JensenShannonDistance()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"MathEx","l":"JensenShannonDivergence(double[], double[])","u":"JensenShannonDivergence(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"JensenShannonDivergence(double[], SparseArray)","u":"JensenShannonDivergence(double[],smile.util.SparseArray)"},{"p":"smile.math","c":"MathEx","l":"JensenShannonDivergence(SparseArray, double[])","u":"JensenShannonDivergence(smile.util.SparseArray,double[])"},{"p":"smile.math","c":"MathEx","l":"JensenShannonDivergence(SparseArray, SparseArray)","u":"JensenShannonDivergence(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.plot.swing","c":"Palette","l":"jet(int)"},{"p":"smile.plot.swing","c":"Palette","l":"jet(int, float)","u":"jet(int,float)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"JJ"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"JJR"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"JJS"},{"p":"smile.plot.vega","c":"Transform","l":"joinAggregate(String, String, String, String...)","u":"joinAggregate(java.lang.String,java.lang.String,java.lang.String,java.lang.String...)"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation.Method","l":"JOINT"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"JOINT"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"joint(int[], int[])","u":"joint(int[],int[])"},{"p":"smile.regression","c":"GaussianProcessRegression.JointPrediction","l":"JointPrediction(T[], double[], double[], Matrix)","u":"%3Cinit%3E(T[],double[],double[],smile.math.matrix.Matrix)"},{"p":"smile.io","c":"JSON","l":"JSON()","u":"%3Cinit%3E()"},{"p":"smile.io","c":"Read","l":"json(Path)","u":"json(java.nio.file.Path)"},{"p":"smile.io","c":"Read","l":"json(Path, JSON.Mode, StructType)","u":"json(java.nio.file.Path,smile.io.JSON.Mode,smile.data.type.StructType)"},{"p":"smile.io","c":"Read","l":"json(String)","u":"json(java.lang.String)"},{"p":"smile.io","c":"Read","l":"json(String, JSON.Mode, StructType)","u":"json(java.lang.String,smile.io.JSON.Mode,smile.data.type.StructType)"},{"p":"smile.plot.vega","c":"Data","l":"json(String, String)","u":"json(java.lang.String,java.lang.String)"},{"p":"smile.data","c":"SQL","l":"json(String, String, Map<String, String>, String...)","u":"json(java.lang.String,java.lang.String,java.util.Map,java.lang.String...)"},{"p":"smile.data","c":"SQL","l":"json(String, String...)","u":"json(java.lang.String,java.lang.String...)"},{"p":"smile.classification","c":"ClassLabels","l":"k"},{"p":"smile.clustering","c":"PartitionClustering","l":"k"},{"p":"smile.neighbor","c":"LSH","l":"k"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"k"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"k"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"k(double)"},{"p":"smile.math.kernel","c":"DotProductKernel","l":"k(double)"},{"p":"smile.math.kernel","c":"Gaussian","l":"k(double)"},{"p":"smile.math.kernel","c":"HyperbolicTangent","l":"k(double)"},{"p":"smile.math.kernel","c":"IsotropicKernel","l":"k(double)"},{"p":"smile.math.kernel","c":"Laplacian","l":"k(double)"},{"p":"smile.math.kernel","c":"LinearKernel","l":"k(double)"},{"p":"smile.math.kernel","c":"Matern","l":"k(double)"},{"p":"smile.math.kernel","c":"Polynomial","l":"k(double)"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"k(double)"},{"p":"smile.math.kernel","c":"ThinPlateSpline","l":"k(double)"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"LinearKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"MaternKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"k(double[], double[])","u":"k(double[],double[])"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"k(int[], int[])","u":"k(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"k(int[], int[])","u":"k(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"k(int[], int[])","u":"k(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"k(int[], int[])","u":"k(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"k(int[], int[])","u":"k(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"k(int[], int[])","u":"k(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"k(int[], int[])","u":"k(int[],int[])"},{"p":"smile.math.kernel","c":"DotProductKernel","l":"K(Matrix)","u":"K(smile.math.matrix.Matrix)"},{"p":"smile.math.kernel","c":"IsotropicKernel","l":"K(Matrix)","u":"K(smile.math.matrix.Matrix)"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"k(SparseArray, SparseArray)","u":"k(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"k(SparseArray, SparseArray)","u":"k(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"k(SparseArray, SparseArray)","u":"k(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"k(SparseArray, SparseArray)","u":"k(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"k(SparseArray, SparseArray)","u":"k(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"k(SparseArray, SparseArray)","u":"k(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"k(SparseArray, SparseArray)","u":"k(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"k(T, T)","u":"k(T,T)"},{"p":"smile.math.kernel","c":"ProductKernel","l":"k(T, T)","u":"k(T,T)"},{"p":"smile.math.kernel","c":"SumKernel","l":"k(T, T)","u":"k(T,T)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"K(T[])"},{"p":"smile.math.kernel","c":"MercerKernel","l":"K(T[], T[])","u":"K(T[],T[])"},{"p":"smile.neighbor","c":"KDTree","l":"KDTree(double[][], E[])","u":"%3Cinit%3E(double[][],E[])"},{"p":"smile.math","c":"MathEx","l":"kendall(double[], double[])","u":"kendall(double[],double[])"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"kendall(double[], double[])","u":"kendall(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"kendall(float[], float[])","u":"kendall(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"kendall(int[], int[])","u":"kendall(int[],int[])"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"kernel"},{"p":"smile.base.svm","c":"KernelMachine","l":"kernel()"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"kernel()"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"kernel()"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"KernelDensity(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"KernelDensity(double[], double)","u":"%3Cinit%3E(double[],double)"},{"p":"smile.base.svm","c":"KernelMachine","l":"KernelMachine(MercerKernel<T>, T[], double[])","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[])"},{"p":"smile.regression","c":"KernelMachine","l":"KernelMachine(MercerKernel<T>, T[], double[])","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[])"},{"p":"smile.base.svm","c":"KernelMachine","l":"KernelMachine(MercerKernel<T>, T[], double[], double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[],double)"},{"p":"smile.regression","c":"KernelMachine","l":"KernelMachine(MercerKernel<T>, T[], double[], double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[],double)"},{"p":"smile.feature.extraction","c":"KernelPCA","l":"KernelPCA(KPCA<double[]>, String...)","u":"%3Cinit%3E(smile.manifold.KPCA,java.lang.String...)"},{"p":"smile.neighbor","c":"Neighbor","l":"key"},{"p":"smile.neighbor","c":"LSH","l":"keys"},{"p":"smile.neighbor","c":"MutableLSH","l":"keys()"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"keyvals(double, double, double)","u":"keyvals(double,double,double)"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"keyvals(double[])"},{"p":"smile.taxonomy","c":"Concept","l":"keywords()"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"kg(double)"},{"p":"smile.math.kernel","c":"DotProductKernel","l":"kg(double)"},{"p":"smile.math.kernel","c":"Gaussian","l":"kg(double)"},{"p":"smile.math.kernel","c":"HyperbolicTangent","l":"kg(double)"},{"p":"smile.math.kernel","c":"IsotropicKernel","l":"kg(double)"},{"p":"smile.math.kernel","c":"Laplacian","l":"kg(double)"},{"p":"smile.math.kernel","c":"LinearKernel","l":"kg(double)"},{"p":"smile.math.kernel","c":"Matern","l":"kg(double)"},{"p":"smile.math.kernel","c":"Polynomial","l":"kg(double)"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"kg(double)"},{"p":"smile.math.kernel","c":"ThinPlateSpline","l":"kg(double)"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"LinearKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"MaternKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"kg(double[], double[])","u":"kg(double[],double[])"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"kg(int[], int[])","u":"kg(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"kg(int[], int[])","u":"kg(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"kg(int[], int[])","u":"kg(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"kg(int[], int[])","u":"kg(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"kg(int[], int[])","u":"kg(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"kg(int[], int[])","u":"kg(int[],int[])"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"kg(int[], int[])","u":"kg(int[],int[])"},{"p":"smile.math.kernel","c":"IsotropicKernel","l":"KG(Matrix)","u":"KG(smile.math.matrix.Matrix)"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"kg(SparseArray, SparseArray)","u":"kg(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"kg(SparseArray, SparseArray)","u":"kg(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"kg(SparseArray, SparseArray)","u":"kg(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"kg(SparseArray, SparseArray)","u":"kg(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"kg(SparseArray, SparseArray)","u":"kg(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"kg(SparseArray, SparseArray)","u":"kg(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"kg(SparseArray, SparseArray)","u":"kg(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"kg(T, T)","u":"kg(T,T)"},{"p":"smile.math.kernel","c":"ProductKernel","l":"kg(T, T)","u":"kg(T,T)"},{"p":"smile.math.kernel","c":"SumKernel","l":"kg(T, T)","u":"kg(T,T)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"KG(T[])"},{"p":"smile.deep","c":"Loss","l":"kl()"},{"p":"smile.math.matrix","c":"BandMatrix","l":"kl()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"kl()"},{"p":"smile.clustering","c":"KMeans","l":"KMeans(double, double[][], int[])","u":"%3Cinit%3E(double,double[][],int[])"},{"p":"smile.feature.imputation","c":"KMedoidsImputer","l":"KMedoidsImputer(CLARANS<Tuple>)","u":"%3Cinit%3E(smile.clustering.CLARANS)"},{"p":"smile.clustering","c":"KModes","l":"KModes(double, int[][], int[])","u":"%3Cinit%3E(double,int[][],int[])"},{"p":"smile.classification","c":"KNN","l":"KNN(KNNSearch<T, T>, int[], int)","u":"%3Cinit%3E(smile.neighbor.KNNSearch,int[],int)"},{"p":"smile.feature.imputation","c":"KNNImputer","l":"KNNImputer(DataFrame, int, Distance<Tuple>)","u":"%3Cinit%3E(smile.data.DataFrame,int,smile.math.distance.Distance)"},{"p":"smile.feature.imputation","c":"KNNImputer","l":"KNNImputer(DataFrame, int, String...)","u":"%3Cinit%3E(smile.data.DataFrame,int,java.lang.String...)"},{"p":"smile.feature.extraction","c":"KernelPCA","l":"kpca"},{"p":"smile.manifold","c":"KPCA","l":"KPCA(T[], MercerKernel<T>, double[], double, double[][], double[], Matrix)","u":"%3Cinit%3E(T[],smile.math.kernel.MercerKernel,double[],double,double[][],double[],smile.math.matrix.Matrix)"},{"p":"smile.interpolation","c":"KrigingInterpolation","l":"KrigingInterpolation(double[][], double[])","u":"%3Cinit%3E(double[][],double[])"},{"p":"smile.interpolation","c":"KrigingInterpolation","l":"KrigingInterpolation(double[][], double[], Variogram, double[])","u":"%3Cinit%3E(double[][],double[],smile.interpolation.variogram.Variogram,double[])"},{"p":"smile.interpolation","c":"KrigingInterpolation1D","l":"KrigingInterpolation1D(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.interpolation","c":"KrigingInterpolation1D","l":"KrigingInterpolation1D(double[], double[], double)","u":"%3Cinit%3E(double[],double[],double)"},{"p":"smile.interpolation","c":"KrigingInterpolation2D","l":"KrigingInterpolation2D(double[], double[], double[])","u":"%3Cinit%3E(double[],double[],double[])"},{"p":"smile.interpolation","c":"KrigingInterpolation2D","l":"KrigingInterpolation2D(double[], double[], double[], double)","u":"%3Cinit%3E(double[],double[],double[],double)"},{"p":"smile.stat.hypothesis","c":"KSTest","l":"KSTest(String, double, double)","u":"%3Cinit%3E(java.lang.String,double,double)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"ku()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"ku()"},{"p":"smile.math","c":"MathEx","l":"KullbackLeiblerDivergence(double[], double[])","u":"KullbackLeiblerDivergence(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"KullbackLeiblerDivergence(double[], SparseArray)","u":"KullbackLeiblerDivergence(double[],smile.util.SparseArray)"},{"p":"smile.math","c":"MathEx","l":"KullbackLeiblerDivergence(SparseArray, double[])","u":"KullbackLeiblerDivergence(smile.util.SparseArray,double[])"},{"p":"smile.math","c":"MathEx","l":"KullbackLeiblerDivergence(SparseArray, SparseArray)","u":"KullbackLeiblerDivergence(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.ica","c":"Kurtosis","l":"Kurtosis()","u":"%3Cinit%3E()"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"L"},{"p":"smile.stat.distribution","c":"DiscreteExponentialFamilyMixture","l":"L"},{"p":"smile.stat.distribution","c":"ExponentialFamilyMixture","l":"L"},{"p":"smile.stat.distribution","c":"MultivariateExponentialFamilyMixture","l":"L"},{"p":"smile.vq","c":"BIRCH","l":"L"},{"p":"smile.feature.transform","c":"Normalizer.Norm","l":"L_INF"},{"p":"smile.feature.transform","c":"Normalizer.Norm","l":"L1"},{"p":"smile.deep","c":"Loss","l":"l1()"},{"p":"smile.feature.transform","c":"Normalizer.Norm","l":"L2"},{"p":"smile.math.matrix","c":"ARPACK.SymmOption","l":"LA"},{"p":"smile.math.matrix.fp32","c":"ARPACK.SymmOption","l":"LA"},{"p":"smile.plot.swing","c":"Label","l":"Label(String, double[], double, double, double, Font, Color)","u":"%3Cinit%3E(java.lang.String,double[],double,double,double,java.awt.Font,java.awt.Color)"},{"p":"smile.vision","c":"ImageNet","l":"label2Id"},{"p":"smile.vision","c":"ImageNet","l":"label2Target"},{"p":"smile.plot.vega","c":"Axis","l":"labelAlign(String)","u":"labelAlign(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelAlign(String)","u":"labelAlign(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelAngle(double)"},{"p":"smile.plot.vega","c":"Axis","l":"labelBaseline(String)","u":"labelBaseline(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelBaseline(String)","u":"labelBaseline(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelBound(boolean)"},{"p":"smile.plot.vega","c":"Axis","l":"labelBound(double)"},{"p":"smile.plot.vega","c":"Axis","l":"labelColor(String)","u":"labelColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelColor(String)","u":"labelColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelExpr(String)","u":"labelExpr(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelExpr(String)","u":"labelExpr(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFlush(boolean)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFlush(double)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFlushOffset(double)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFont(String)","u":"labelFont(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelFont(String)","u":"labelFont(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFontSize(double)"},{"p":"smile.plot.vega","c":"Legend","l":"labelFontSize(double)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFontStyle(String)","u":"labelFontStyle(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelFontStyle(String)","u":"labelFontStyle(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFontWeight(int)"},{"p":"smile.plot.vega","c":"Legend","l":"labelFontWeight(int)"},{"p":"smile.plot.vega","c":"Axis","l":"labelFontWeight(String)","u":"labelFontWeight(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelFontWeight(String)","u":"labelFontWeight(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelLimit(int)"},{"p":"smile.plot.vega","c":"Legend","l":"labelLimit(int)"},{"p":"smile.plot.vega","c":"Axis","l":"labelLineHeight(int)"},{"p":"smile.plot.vega","c":"Axis","l":"labelLineHeight(String)","u":"labelLineHeight(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelOffset(int)"},{"p":"smile.plot.vega","c":"Legend","l":"labelOffset(int)"},{"p":"smile.plot.vega","c":"Axis","l":"labelOpacity(double)"},{"p":"smile.plot.vega","c":"Axis","l":"labelOverlap(boolean)"},{"p":"smile.plot.vega","c":"Legend","l":"labelOverlap(boolean)"},{"p":"smile.plot.vega","c":"Axis","l":"labelOverlap(String)","u":"labelOverlap(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"labelOverlap(String)","u":"labelOverlap(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"labelPadding(double)"},{"p":"smile.vision","c":"ImageNet","l":"labels"},{"p":"smile.plot.vega","c":"Axis","l":"labels(boolean)"},{"p":"smile.plot.vega","c":"Axis","l":"labelSeparation(double)"},{"p":"smile.base.cart","c":"Loss","l":"lad()"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"lambda"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"lambda"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"lambda"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"lambda"},{"p":"smile.nlp.stemmer","c":"LancasterStemmer","l":"LancasterStemmer()","u":"%3Cinit%3E()"},{"p":"smile.nlp.stemmer","c":"LancasterStemmer","l":"LancasterStemmer(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.nlp.stemmer","c":"LancasterStemmer","l":"LancasterStemmer(InputStream)","u":"%3Cinit%3E(java.io.InputStream)"},{"p":"smile.nlp.stemmer","c":"LancasterStemmer","l":"LancasterStemmer(InputStream, boolean)","u":"%3Cinit%3E(java.io.InputStream,boolean)"},{"p":"smile.math.matrix","c":"Lanczos","l":"Lanczos()","u":"%3Cinit%3E()"},{"p":"smile.math.blas","c":"Diag","l":"lapack()"},{"p":"smile.math.blas","c":"EigenRange","l":"lapack()"},{"p":"smile.math.blas","c":"EVDJob","l":"lapack()"},{"p":"smile.math.blas","c":"Layout","l":"lapack()"},{"p":"smile.math.blas","c":"Side","l":"lapack()"},{"p":"smile.math.blas","c":"SVDJob","l":"lapack()"},{"p":"smile.math.blas","c":"Transpose","l":"lapack()"},{"p":"smile.math.blas","c":"UPLO","l":"lapack()"},{"p":"smile.interpolation","c":"LaplaceInterpolation","l":"LaplaceInterpolation()","u":"%3Cinit%3E()"},{"p":"smile.math.kernel","c":"Laplacian","l":"Laplacian(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"LaplacianEigenmap(double, int[], double[][], AdjacencyList)","u":"%3Cinit%3E(double,int[],double[][],smile.graph.AdjacencyList)"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"LaplacianEigenmap(int[], double[][], AdjacencyList)","u":"%3Cinit%3E(int[],double[][],smile.graph.AdjacencyList)"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"LaplacianKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"LaplacianKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.regression","c":"LASSO","l":"LASSO()","u":"%3Cinit%3E()"},{"p":"smile.base.svm","c":"LASVM","l":"LASVM(MercerKernel<T>, double, double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,double,double)"},{"p":"smile.base.svm","c":"LASVM","l":"LASVM(MercerKernel<T>, double, double, double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,double,double,double)"},{"p":"smile.stat","c":"Sampling","l":"latin(int, int)","u":"latin(int,int)"},{"p":"smile.vq","c":"SOM","l":"lattice(int, int, double[][])","u":"lattice(int,int,double[][])"},{"p":"smile.base.mlp","c":"Layer","l":"Layer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.base.mlp","c":"Layer","l":"Layer(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"smile.base.mlp","c":"Layer","l":"Layer(Matrix, double[])","u":"%3Cinit%3E(smile.math.matrix.Matrix,double[])"},{"p":"smile.base.mlp","c":"Layer","l":"Layer(Matrix, double[], double)","u":"%3Cinit%3E(smile.math.matrix.Matrix,double[],double)"},{"p":"smile.plot.vega","c":"Layer","l":"Layer(View...)","u":"%3Cinit%3E(smile.plot.vega.View...)"},{"p":"smile.deep.layer","c":"LayerBlock","l":"LayerBlock()","u":"%3Cinit%3E()"},{"p":"smile.deep.layer","c":"LayerBlock","l":"LayerBlock(Module)","u":"%3Cinit%3E(org.bytedeco.pytorch.Module)"},{"p":"smile.deep.layer","c":"LayerBlock","l":"LayerBlock(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.base.mlp","c":"LayerBuilder","l":"LayerBuilder(int, double)","u":"%3Cinit%3E(int,double)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"layout()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"layout()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"layout()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"layout()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"layout()"},{"p":"smile.math.matrix","c":"Matrix","l":"layout()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"layout()"},{"p":"smile.deep.tensor","c":"Tensor.Options","l":"layout(Layout)","u":"layout(smile.deep.tensor.Layout)"},{"p":"smile.math","c":"MathEx","l":"lchoose(int, int)","u":"lchoose(int,int)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"ld()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"ld()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"ld()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"ld()"},{"p":"smile.math.matrix","c":"Matrix","l":"ld()"},{"p":"smile.classification","c":"LDA","l":"LDA(double[], double[][], double[], Matrix)","u":"%3Cinit%3E(double[],double[][],double[],smile.math.matrix.Matrix)"},{"p":"smile.classification","c":"LDA","l":"LDA(double[], double[][], double[], Matrix, IntSet)","u":"%3Cinit%3E(double[],double[][],double[],smile.math.matrix.Matrix,smile.util.IntSet)"},{"p":"smile.deep.tensor","c":"Tensor","l":"le(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"le(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"le(Tensor)","u":"le(smile.deep.tensor.Tensor)"},{"p":"smile.base.cart","c":"LeafNode","l":"LeafNode(int)","u":"%3Cinit%3E(int)"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"leaky()"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"leaky()"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"leaky(double)"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"leaky(double)"},{"p":"smile.base.mlp","c":"Layer","l":"leaky(int)"},{"p":"smile.base.mlp","c":"Layer","l":"leaky(int, double)","u":"leaky(int,double)"},{"p":"smile.base.mlp","c":"Layer","l":"leaky(int, double, double)","u":"leaky(int,double,double)"},{"p":"smile.deep.layer","c":"Layer","l":"leaky(int, int, double)","u":"leaky(int,int,double)"},{"p":"smile.deep.layer","c":"Layer","l":"leaky(int, int, double, double)","u":"leaky(int,int,double,double)"},{"p":"smile.deep.activation","c":"LeakyReLU","l":"LeakyReLU()","u":"%3Cinit%3E()"},{"p":"smile.base.mlp.activation","c":"LeakyReLU","l":"LeakyReLU(double)","u":"%3Cinit%3E(double)"},{"p":"smile.deep.activation","c":"LeakyReLU","l":"LeakyReLU(double, boolean)","u":"%3Cinit%3E(double,boolean)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"learningRate"},{"p":"smile.base.cart","c":"Loss.Type","l":"LeastAbsoluteDeviation"},{"p":"smile.base.cart","c":"Loss.Type","l":"LeastSquares"},{"p":"smile.base.cart","c":"InternalNode","l":"leaves()"},{"p":"smile.base.cart","c":"LeafNode","l":"leaves()"},{"p":"smile.base.cart","c":"Node","l":"leaves()"},{"p":"smile.math.distance","c":"LeeDistance","l":"LeeDistance(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.blas","c":"Side","l":"LEFT"},{"p":"smile.util","c":"Strings","l":"leftPad(String, int, char)","u":"leftPad(java.lang.String,int,char)"},{"p":"smile.plot.vega","c":"Config","l":"legend()"},{"p":"smile.plot.vega","c":"Field","l":"legend()"},{"p":"smile.plot.swing","c":"Legend","l":"Legend(String, Color)","u":"%3Cinit%3E(java.lang.String,java.awt.Color)"},{"p":"smile.plot.swing","c":"BarPlot","l":"legends()"},{"p":"smile.plot.swing","c":"LinePlot","l":"legends()"},{"p":"smile.plot.swing","c":"Plot","l":"legends()"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"legends()"},{"p":"smile.plot.swing","c":"ScreePlot","l":"legends()"},{"p":"smile.math","c":"Complex.Array","l":"length"},{"p":"smile.data","c":"BinarySparseDataset","l":"length()"},{"p":"smile.data","c":"Tuple","l":"length()"},{"p":"smile.data.type","c":"StructType","l":"length()"},{"p":"smile.gap","c":"BitString","l":"length()"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"length()"},{"p":"smile.stat.distribution","c":"Distribution","l":"length()"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"FDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"length()"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"Mixture","l":"length()"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"length()"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"TDistribution","l":"length()"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"length()"},{"p":"smile.util","c":"Bytes","l":"length()"},{"p":"smile.data","c":"CategoricalEncoder","l":"LEVEL"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"level(int)"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"levels()"},{"p":"smile.math.distance","c":"EditDistance","l":"levenshtein(char[], char[])","u":"levenshtein(char[],char[])"},{"p":"smile.math.distance","c":"EditDistance","l":"levenshtein(String, String)","u":"levenshtein(java.lang.String,java.lang.String)"},{"p":"smile.association","c":"AssociationRule","l":"leverage"},{"p":"smile.math","c":"MathEx","l":"lfactorial(int)"},{"p":"smile.math.special","c":"Gamma","l":"lgamma(double)"},{"p":"smile.data.formula","c":"Formula","l":"lhs(String)","u":"lhs(java.lang.String)"},{"p":"smile.data.formula","c":"Formula","l":"lhs(Term)","u":"lhs(smile.data.formula.Term)"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"LI"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"LI"},{"p":"smile.io","c":"Read","l":"libsvm(BufferedReader)","u":"libsvm(java.io.BufferedReader)"},{"p":"smile.io","c":"Read","l":"libsvm(Path)","u":"libsvm(java.nio.file.Path)"},{"p":"smile.io","c":"Read","l":"libsvm(String)","u":"libsvm(java.lang.String)"},{"p":"smile.association","c":"AssociationRule","l":"lift"},{"p":"smile.plot.swing","c":"Palette","l":"LIGHT_GRAY"},{"p":"smile.plot.swing","c":"Palette","l":"LIGHT_GREEN"},{"p":"smile.plot.swing","c":"Palette","l":"LIGHT_PURPLE"},{"p":"smile.plot.swing","c":"Palette","l":"LIGHT_SLATE_GRAY"},{"p":"smile.base.mlp","c":"Cost","l":"LIKELIHOOD"},{"p":"smile.stat.distribution","c":"Distribution","l":"likelihood(double[])"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"likelihood(double[])"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"likelihood(double[][])"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"likelihood(int[])"},{"p":"smile.plot.vega","c":"PivotTransform","l":"limit(double)"},{"p":"smile.plot.vega","c":"Mark","l":"line(boolean)"},{"p":"smile.plot.swing","c":"Line","l":"Line(double[][], Line.Style, char, Color)","u":"%3Cinit%3E(double[][],smile.plot.swing.Line.Style,char,java.awt.Color)"},{"p":"smile.base.mlp","c":"OutputFunction","l":"LINEAR"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"linear()"},{"p":"smile.math","c":"TimeFunction","l":"linear(double, double, double)","u":"linear(double,double,double)"},{"p":"smile.base.mlp","c":"Layer","l":"linear(int)"},{"p":"smile.base.mlp","c":"Layer","l":"linear(int, double)","u":"linear(int,double)"},{"p":"smile.deep.layer","c":"Layer","l":"linear(int, int)","u":"linear(int,int)"},{"p":"smile.interpolation","c":"LinearInterpolation","l":"LinearInterpolation(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.math.kernel","c":"LinearKernel","l":"LinearKernel()","u":"%3Cinit%3E()"},{"p":"smile.base.svm","c":"LinearKernelMachine","l":"LinearKernelMachine(double[], double)","u":"%3Cinit%3E(double[],double)"},{"p":"smile.regression","c":"LinearModel","l":"LinearModel(Formula, StructType, Matrix, double[], double[], double)","u":"%3Cinit%3E(smile.data.formula.Formula,smile.data.type.StructType,smile.math.matrix.Matrix,double[],double[],double)"},{"p":"smile.neighbor","c":"LinearSearch","l":"LinearSearch(K[], V[], Distance<K>)","u":"%3Cinit%3E(K[],V[],smile.math.distance.Distance)"},{"p":"smile.neighbor","c":"LinearSearch","l":"LinearSearch(List<K>, List<V>, Distance<K>)","u":"%3Cinit%3E(java.util.List,java.util.List,smile.math.distance.Distance)"},{"p":"smile.neighbor","c":"LinearSearch","l":"LinearSearch(List<V>, Distance<K>, Function<V, K>)","u":"%3Cinit%3E(java.util.List,smile.math.distance.Distance,java.util.function.Function)"},{"p":"smile.neighbor","c":"LinearSearch","l":"LinearSearch(V[], Distance<K>, Function<V, K>)","u":"%3Cinit%3E(V[],smile.math.distance.Distance,java.util.function.Function)"},{"p":"smile.plot.vega","c":"Config","l":"lineBreak(String)","u":"lineBreak(java.lang.String)"},{"p":"smile.plot.swing","c":"LinePlot","l":"LinePlot(Line...)","u":"%3Cinit%3E(smile.plot.swing.Line...)"},{"p":"smile.plot.swing","c":"LinePlot","l":"LinePlot(Line[], Legend[])","u":"%3Cinit%3E(smile.plot.swing.Line[],smile.plot.swing.Legend[])"},{"p":"smile.glm.model","c":"Model","l":"link(double)"},{"p":"smile.clustering.linkage","c":"Linkage","l":"Linkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"Linkage","l":"Linkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.timeseries","c":"BoxTest.Type","l":"Ljung_Box"},{"p":"smile.timeseries","c":"BoxTest","l":"ljung(double[], int)","u":"ljung(double[],int)"},{"p":"smile.llm.tokenizer","c":"Llama","l":"Llama(Map<Bytes, Integer>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"smile.llm.tokenizer","c":"Llama","l":"Llama(Map<Bytes, Integer>, String, String, String...)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String,java.lang.String...)"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"llama(String)","u":"llama(java.lang.String)"},{"p":"smile.manifold","c":"LLE","l":"LLE(int[], double[][], AdjacencyList)","u":"%3Cinit%3E(int[],double[][],smile.graph.AdjacencyList)"},{"p":"smile.clustering","c":"KMeans","l":"lloyd(double[][], int)","u":"lloyd(double[][],int)"},{"p":"smile.clustering","c":"KMeans","l":"lloyd(double[][], int, int, double)","u":"lloyd(double[][],int,int,double)"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"LM"},{"p":"smile.math.matrix","c":"ARPACK.SymmOption","l":"LM"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"LM"},{"p":"smile.math.matrix.fp32","c":"ARPACK.SymmOption","l":"LM"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"lo()"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"lo()"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"lo()"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"lo()"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"lo()"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"lo()"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"lo()"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"lo()"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"lo()"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"lo()"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"lo()"},{"p":"smile.math.kernel","c":"LinearKernel","l":"lo()"},{"p":"smile.math.kernel","c":"MaternKernel","l":"lo()"},{"p":"smile.math.kernel","c":"MercerKernel","l":"lo()"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"lo()"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"lo()"},{"p":"smile.math.kernel","c":"ProductKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"lo()"},{"p":"smile.math.kernel","c":"SumKernel","l":"lo()"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"lo()"},{"p":"smile.deep","c":"Model","l":"load(String)","u":"load(java.lang.String)"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"load(String)","u":"load(java.lang.String)"},{"p":"smile.feature.extraction","c":"PCA","l":"loadings()"},{"p":"smile.feature.extraction","c":"ProbabilisticPCA","l":"loadings()"},{"p":"smile.plot.vega","c":"Transform","l":"loess(String, String)","u":"loess(java.lang.String,java.lang.String)"},{"p":"smile.glm.model","c":"Poisson","l":"log()"},{"p":"smile.math","c":"MathEx","l":"log(double)"},{"p":"smile.data.formula","c":"Terms","l":"log(String)","u":"log(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"log(Term)","u":"log(smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Terms","l":"log10(String)","u":"log10(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"log10(Term)","u":"log10(smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Terms","l":"log1p(String)","u":"log1p(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"log1p(Term)","u":"log1p(smile.data.formula.Term)"},{"p":"smile.math","c":"MathEx","l":"log1pe(double)"},{"p":"smile.math","c":"MathEx","l":"log2(double)"},{"p":"smile.data.formula","c":"Terms","l":"log2(String)","u":"log2(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"log2(Term)","u":"log2(smile.data.formula.Term)"},{"p":"smile.ica","c":"LogCosh","l":"LogCosh()","u":"%3Cinit%3E()"},{"p":"smile.math.matrix","c":"BandMatrix.Cholesky","l":"logdet()"},{"p":"smile.math.matrix","c":"BigMatrix.Cholesky","l":"logdet()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.Cholesky","l":"logdet()"},{"p":"smile.math.matrix.fp32","c":"Matrix.Cholesky","l":"logdet()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.Cholesky","l":"logdet()"},{"p":"smile.math.matrix","c":"Matrix.Cholesky","l":"logdet()"},{"p":"smile.math.matrix","c":"SymmMatrix.Cholesky","l":"logdet()"},{"p":"smile.base.cart","c":"Loss","l":"logistic(int, int, int[], double[][])","u":"logistic(int,int,int[],double[][])"},{"p":"smile.base.cart","c":"Loss","l":"logistic(int[])"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"LogisticDistribution(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.classification","c":"LogisticRegression","l":"LogisticRegression(int, double, double, IntSet)","u":"%3Cinit%3E(int,double,double,smile.util.IntSet)"},{"p":"smile.glm.model","c":"Bernoulli","l":"logit()"},{"p":"smile.glm.model","c":"Binomial","l":"logit(int[])"},{"p":"smile.glm","c":"GLM","l":"logLikelihood"},{"p":"smile.classification","c":"LogisticRegression","l":"loglikelihood()"},{"p":"smile.classification","c":"Maxent","l":"loglikelihood()"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"loglikelihood()"},{"p":"smile.glm","c":"GLM","l":"logLikelihood()"},{"p":"smile.stat.distribution","c":"Distribution","l":"logLikelihood(double[])"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"logLikelihood(double[])"},{"p":"smile.glm.model","c":"Model","l":"logLikelihood(double[], double[])","u":"logLikelihood(double[],double[])"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"logLikelihood(double[][])"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"logLikelihood(int[])"},{"p":"smile.validation","c":"ClassificationMetrics","l":"logloss"},{"p":"smile.validation.metric","c":"LogLoss","l":"LogLoss()","u":"%3Cinit%3E()"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"LogNormalDistribution(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"FDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"logp(double)"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"Mixture","l":"logp(double)"},{"p":"smile.stat.distribution","c":"TDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"logp(double)"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"logp(double[])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"logp(double[])"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"logp(double[])"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"logp(int)"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"logp(int)"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"logp(int)"},{"p":"smile.sequence","c":"HMM","l":"logp(int[])"},{"p":"smile.sequence","c":"HMM","l":"logp(int[], int[])","u":"logp(int[],int[])"},{"p":"smile.sequence","c":"HMMLabeler","l":"logp(T[])"},{"p":"smile.sequence","c":"HMMLabeler","l":"logp(T[], int[])","u":"logp(T[],int[])"},{"p":"smile.deep.activation","c":"LogSigmoid","l":"LogSigmoid()","u":"%3Cinit%3E()"},{"p":"smile.deep.layer","c":"Layer","l":"logSigmoid(int, int)","u":"logSigmoid(int,int)"},{"p":"smile.deep.activation","c":"LogSoftmax","l":"LogSoftmax()","u":"%3Cinit%3E()"},{"p":"smile.deep.layer","c":"Layer","l":"logSoftmax(int, int)","u":"logSoftmax(int,int)"},{"p":"smile.data.type","c":"DataType.ID","l":"Long"},{"p":"smile.util","c":"Regex","l":"LONG"},{"p":"smile.plot.swing","c":"Line.Style","l":"LONG_DASH"},{"p":"smile.swing.table","c":"LongArrayCellRenderer","l":"LongArrayCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.data.type","c":"DataTypes","l":"LongArrayType"},{"p":"smile.data.type","c":"DataTypes","l":"LongObjectType"},{"p":"smile.data.type","c":"DataTypes","l":"LongType"},{"p":"smile.deep.tensor","c":"Tensor","l":"longValue()"},{"p":"smile.data","c":"DataFrame","l":"longVector(Enum<?>)","u":"longVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"longVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"longVector(int)"},{"p":"smile.data","c":"DataFrame","l":"longVector(String)","u":"longVector(java.lang.String)"},{"p":"smile.plot.vega","c":"Transform","l":"lookup(String, LookupData)","u":"lookup(java.lang.String,smile.plot.vega.LookupData)"},{"p":"smile.plot.vega","c":"Transform","l":"lookup(String, String)","u":"lookup(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Transform","l":"lookupData(String)","u":"lookupData(java.lang.String)"},{"p":"smile.math.blas","c":"UPLO","l":"LOWER"},{"p":"smile.util","c":"PriorityQueue","l":"lower(int)"},{"p":"smile.taxonomy","c":"Taxonomy","l":"lowestCommonAncestor(Concept, Concept)","u":"lowestCommonAncestor(smile.taxonomy.Concept,smile.taxonomy.Concept)"},{"p":"smile.taxonomy","c":"Taxonomy","l":"lowestCommonAncestor(String, String)","u":"lowestCommonAncestor(java.lang.String,java.lang.String)"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"LR"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"LR"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"LS"},{"p":"smile.base.cart","c":"Loss","l":"ls()"},{"p":"smile.base.cart","c":"Loss","l":"ls(double[])"},{"p":"smile.neighbor","c":"LSH","l":"LSH(double[][], E[], double)","u":"%3Cinit%3E(double[][],E[],double)"},{"p":"smile.neighbor","c":"LSH","l":"LSH(double[][], E[], double, int)","u":"%3Cinit%3E(double[][],E[],double,int)"},{"p":"smile.neighbor","c":"LSH","l":"LSH(int, int, int, double)","u":"%3Cinit%3E(int,int,int,double)"},{"p":"smile.neighbor","c":"LSH","l":"LSH(int, int, int, double, int)","u":"%3Cinit%3E(int,int,int,double,int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"lt(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"lt(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"lt(Tensor)","u":"lt(smile.deep.tensor.Tensor)"},{"p":"smile.math.matrix","c":"BandMatrix.Cholesky","l":"lu"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"lu"},{"p":"smile.math.matrix","c":"BigMatrix.Cholesky","l":"lu"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"lu"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.Cholesky","l":"lu"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"lu"},{"p":"smile.math.matrix.fp32","c":"Matrix.Cholesky","l":"lu"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"lu"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"lu"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.Cholesky","l":"lu"},{"p":"smile.math.matrix","c":"Matrix.Cholesky","l":"lu"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"lu"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"lu"},{"p":"smile.math.matrix","c":"SymmMatrix.Cholesky","l":"lu"},{"p":"smile.math.matrix","c":"BandMatrix","l":"lu()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"lu()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"lu()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"lu()"},{"p":"smile.math.matrix","c":"Matrix","l":"lu()"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"LU(BandMatrix, int[], int)","u":"%3Cinit%3E(smile.math.matrix.BandMatrix,int[],int)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"LU(BandMatrix, int[], int)","u":"%3Cinit%3E(smile.math.matrix.fp32.BandMatrix,int[],int)"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"LU(BigMatrix, IntPointer, int)","u":"%3Cinit%3E(smile.math.matrix.BigMatrix,org.bytedeco.javacpp.IntPointer,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"lu(boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"lu(boolean)"},{"p":"smile.math.matrix","c":"Matrix","l":"lu(boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"LU(Matrix, int[], int)","u":"%3Cinit%3E(smile.math.matrix.fp32.Matrix,int[],int)"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"LU(Matrix, int[], int)","u":"%3Cinit%3E(smile.math.matrix.Matrix,int[],int)"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"m"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"m"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"m"},{"p":"smile.neighbor.lsh","c":"PrZ","l":"m"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"m"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"M(double[], double[])","u":"M(double[],double[])"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"M(double[], double[])","u":"M(double[],double[])"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"M(double[], double[])","u":"M(double[],double[])"},{"p":"smile.stat.distribution","c":"ExponentialFamily","l":"M(double[], double[])","u":"M(double[],double[])"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"M(double[], double[])","u":"M(double[],double[])"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"M(double[], double[])","u":"M(double[],double[])"},{"p":"smile.stat.distribution","c":"MultivariateExponentialFamily","l":"M(double[][], double[])","u":"M(double[][],double[])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"M(double[][], double[])","u":"M(double[][],double[])"},{"p":"smile.stat.distribution","c":"DiscreteExponentialFamily","l":"M(int[], double[])","u":"M(int[],double[])"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"M(int[], double[])","u":"M(int[],double[])"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"M(int[], double[])","u":"M(int[],double[])"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"M(int[], double[])","u":"M(int[],double[])"},{"p":"smile.timeseries","c":"ARMA","l":"ma()"},{"p":"smile.math","c":"MathEx","l":"MACHEP"},{"p":"smile.deep.metric","c":"Averaging","l":"Macro"},{"p":"smile.validation","c":"RegressionMetrics","l":"mad"},{"p":"smile.validation.metric","c":"MAD","l":"MAD()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"MathEx","l":"mad(double[])"},{"p":"smile.math","c":"MathEx","l":"mad(float[])"},{"p":"smile.math","c":"MathEx","l":"mad(int[])"},{"p":"smile.plot.swing","c":"Palette","l":"MAGENTA"},{"p":"smile.math.distance","c":"MahalanobisDistance","l":"MahalanobisDistance(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.nlp.pos","c":"HMMPOSTagger","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"smile.math.distance","c":"ManhattanDistance","l":"ManhattanDistance()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"ManhattanDistance","l":"ManhattanDistance(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.stat.distribution","c":"Mixture","l":"map(double)"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"map(double[])"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"map(int)"},{"p":"smile.deep","c":"Loss","l":"marginRanking(Tensor, Tensor, Tensor)","u":"marginRanking(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.plot.vega","c":"View","l":"mark(String)","u":"mark(java.lang.String)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"market(Path)","u":"market(java.nio.file.Path)"},{"p":"smile.math.matrix","c":"IMatrix","l":"market(Path)","u":"market(java.nio.file.Path)"},{"p":"smile.plot.swing","c":"Point","l":"MARKS"},{"p":"smile.base.mlp","c":"Layer","l":"mask"},{"p":"smile.math.kernel","c":"Matern","l":"Matern(double, double, double, double)","u":"%3Cinit%3E(double,double,double,double)"},{"p":"smile.math.kernel","c":"MaternKernel","l":"MaternKernel(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"MaternKernel","l":"MaternKernel(double, double, double, double)","u":"%3Cinit%3E(double,double,double,double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"matmul(Tensor)","u":"matmul(smile.deep.tensor.Tensor)"},{"p":"smile.validation.metric","c":"ConfusionMatrix","l":"matrix"},{"p":"smile.data","c":"DataFrame.Collectors","l":"matrix()"},{"p":"smile.data.formula","c":"Formula","l":"matrix(DataFrame)","u":"matrix(smile.data.DataFrame)"},{"p":"smile.data.formula","c":"Formula","l":"matrix(DataFrame, boolean)","u":"matrix(smile.data.DataFrame,boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"Matrix(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"Matrix(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"Matrix(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"Matrix(int, int, float)","u":"%3Cinit%3E(int,int,float)"},{"p":"smile.math.matrix","c":"Matrix","l":"Matrix(int, int, int, double[])","u":"%3Cinit%3E(int,int,int,double[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"Matrix(int, int, int, float[])","u":"%3Cinit%3E(int,int,int,float[])"},{"p":"smile.validation.metric","c":"MatthewsCorrelation","l":"MatthewsCorrelation()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"IntSet","l":"max"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation.Method","l":"MAX"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation.Method","l":"MAX"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"MAX"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"MAX"},{"p":"smile.math","c":"MathEx","l":"max(double, double, double)","u":"max(double,double,double)"},{"p":"smile.math","c":"MathEx","l":"max(double, double, double, double)","u":"max(double,double,double,double)"},{"p":"smile.math","c":"MathEx","l":"max(double[])"},{"p":"smile.math","c":"MathEx","l":"max(double[][])"},{"p":"smile.math","c":"MathEx","l":"max(float, float, float)","u":"max(float,float,float)"},{"p":"smile.math","c":"MathEx","l":"max(float, float, float, float)","u":"max(float,float,float,float)"},{"p":"smile.math","c":"MathEx","l":"max(float[])"},{"p":"smile.math","c":"MathEx","l":"max(int, int, int)","u":"max(int,int,int)"},{"p":"smile.math","c":"MathEx","l":"max(int, int, int, int)","u":"max(int,int,int,int)"},{"p":"smile.math","c":"MathEx","l":"max(int[])"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"max(int[], int[])","u":"max(int[],int[])"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"max(int[], int[])","u":"max(int[],int[])"},{"p":"smile.math","c":"MathEx","l":"max(int[][])"},{"p":"smile.feature.transform","c":"MaxAbsScaler","l":"MaxAbsScaler()","u":"%3Cinit%3E()"},{"p":"smile.plot.vega","c":"BinParams","l":"maxBins(int)"},{"p":"smile.base.cart","c":"CART","l":"maxDepth"},{"p":"smile.classification","c":"Maxent","l":"Maxent(int, double, double, IntSet)","u":"%3Cinit%3E(int,double,double,smile.util.IntSet)"},{"p":"smile.plot.vega","c":"Axis","l":"maxExtent(int)"},{"p":"smile.base.cart","c":"CART","l":"maxNodes"},{"p":"smile.deep.layer","c":"Layer","l":"maxPool2d(int)"},{"p":"smile.deep.layer","c":"MaxPool2dLayer","l":"MaxPool2dLayer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.deep.layer","c":"MaxPool2dLayer","l":"MaxPool2dLayer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.plot.vega","c":"DensityTransform","l":"maxSteps(int)"},{"p":"smile.nlp","c":"SimpleText","l":"maxtf()"},{"p":"smile.nlp","c":"TextTerms","l":"maxtf()"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"MBConv(double, int, int, int, int, int)","u":"MBConv(double,int,int,int,int,int)"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"MBConv(double, int, int, int, int, int, double, double)","u":"MBConv(double,int,int,int,int,int,double,double)"},{"p":"smile.vision.layer","c":"MBConv","l":"MBConv(MBConvConfig, double, IntFunction<Layer>)","u":"%3Cinit%3E(smile.vision.layer.MBConvConfig,double,java.util.function.IntFunction)"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"MBConvConfig(double, int, int, int, int, int, String)","u":"%3Cinit%3E(double,int,int,int,int,int,java.lang.String)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"mcc"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"MD"},{"p":"smile.manifold","c":"MDS","l":"MDS(double[], double[], double[][])","u":"%3Cinit%3E(double[],double[],double[][])"},{"p":"smile.neighbor.lsh","c":"NeighborHashValueModel","l":"mean"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"mean"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"mean"},{"p":"smile.base.mlp","c":"Cost","l":"MEAN_SQUARED_ERROR"},{"p":"smile.base.cart","c":"RegressionNode","l":"mean()"},{"p":"smile.deep.tensor","c":"Tensor","l":"mean()"},{"p":"smile.neighbor.lsh","c":"HashValueParzenModel","l":"mean()"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"mean()"},{"p":"smile.stat.distribution","c":"Distribution","l":"mean()"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"FDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"mean()"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"Mixture","l":"mean()"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"mean()"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"TDistribution","l":"mean()"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"mean()"},{"p":"smile.timeseries","c":"AR","l":"mean()"},{"p":"smile.timeseries","c":"ARMA","l":"mean()"},{"p":"smile.math","c":"MathEx","l":"mean(double[])"},{"p":"smile.math","c":"MathEx","l":"mean(float[])"},{"p":"smile.math","c":"MathEx","l":"mean(int[])"},{"p":"smile.data.type","c":"StructField","l":"measure"},{"p":"smile.data.vector","c":"BaseVector","l":"measure()"},{"p":"smile.data.type","c":"StructType","l":"measure(int)"},{"p":"smile.data","c":"DataFrame","l":"measures()"},{"p":"smile.data","c":"Tuple","l":"measures()"},{"p":"smile.data.type","c":"StructType","l":"measures()"},{"p":"smile.clustering","c":"MEC","l":"MEC(double, double, RNNSearch<T, T>, int, int[])","u":"%3Cinit%3E(double,double,smile.neighbor.RNNSearch,int,int[])"},{"p":"smile.math","c":"MathEx","l":"median(double[])"},{"p":"smile.sort","c":"QuickSelect","l":"median(double[])"},{"p":"smile.math","c":"MathEx","l":"median(float[])"},{"p":"smile.sort","c":"QuickSelect","l":"median(float[])"},{"p":"smile.math","c":"MathEx","l":"median(int[])"},{"p":"smile.sort","c":"QuickSelect","l":"median(int[])"},{"p":"smile.math","c":"MathEx","l":"median(T[])"},{"p":"smile.sort","c":"QuickSelect","l":"median(T[])"},{"p":"smile.base.cart","c":"InternalNode","l":"merge()"},{"p":"smile.base.cart","c":"LeafNode","l":"merge()"},{"p":"smile.base.cart","c":"Node","l":"merge()"},{"p":"smile.data","c":"DataFrame","l":"merge(BaseVector...)","u":"merge(smile.data.vector.BaseVector...)"},{"p":"smile.data","c":"IndexDataFrame","l":"merge(BaseVector...)","u":"merge(smile.data.vector.BaseVector...)"},{"p":"smile.data","c":"DataFrame","l":"merge(DataFrame...)","u":"merge(smile.data.DataFrame...)"},{"p":"smile.data","c":"IndexDataFrame","l":"merge(DataFrame...)","u":"merge(smile.data.DataFrame...)"},{"p":"smile.clustering.linkage","c":"CompleteLinkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.clustering.linkage","c":"Linkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.clustering.linkage","c":"SingleLinkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.clustering.linkage","c":"UPGMALinkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.clustering.linkage","c":"UPGMCLinkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.clustering.linkage","c":"WardLinkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.clustering.linkage","c":"WPGMALinkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.clustering.linkage","c":"WPGMCLinkage","l":"merge(int, int)","u":"merge(int,int)"},{"p":"smile.classification","c":"RandomForest","l":"merge(RandomForest)","u":"merge(smile.classification.RandomForest)"},{"p":"smile.regression","c":"RandomForest","l":"merge(RandomForest)","u":"merge(smile.regression.RandomForest)"},{"p":"smile.math.random","c":"MersenneTwister","l":"MersenneTwister()","u":"%3Cinit%3E()"},{"p":"smile.math.random","c":"MersenneTwister","l":"MersenneTwister(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.random","c":"MersenneTwister","l":"MersenneTwister(long)","u":"%3Cinit%3E(long)"},{"p":"smile.math.random","c":"MersenneTwister64","l":"MersenneTwister64()","u":"%3Cinit%3E()"},{"p":"smile.math.random","c":"MersenneTwister64","l":"MersenneTwister64(long)","u":"%3Cinit%3E(long)"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"method"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"method"},{"p":"smile.stat.hypothesis","c":"KSTest","l":"method"},{"p":"smile.stat.hypothesis","c":"TTest","l":"method"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"method(String)","u":"method(java.lang.String)"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"method(String)","u":"method(java.lang.String)"},{"p":"smile.classification","c":"RandomForest.Model","l":"metrics"},{"p":"smile.regression","c":"RandomForest.Model","l":"metrics"},{"p":"smile.validation","c":"ClassificationValidation","l":"metrics"},{"p":"smile.validation","c":"RegressionValidation","l":"metrics"},{"p":"smile.classification","c":"RandomForest","l":"metrics()"},{"p":"smile.regression","c":"RandomForest","l":"metrics()"},{"p":"smile.deep.metric","c":"Averaging","l":"Micro"},{"p":"smile.plot.swing","c":"Palette","l":"MIDNIGHT_BLUE"},{"p":"smile.util","c":"IntSet","l":"min"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation.Method","l":"MIN"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation.Method","l":"MIN"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"MIN"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"MIN"},{"p":"smile.math","c":"MathEx","l":"min(double, double, double)","u":"min(double,double,double)"},{"p":"smile.math","c":"MathEx","l":"min(double, double, double, double)","u":"min(double,double,double,double)"},{"p":"smile.math","c":"MathEx","l":"min(double[])"},{"p":"smile.math","c":"MathEx","l":"min(double[][])"},{"p":"smile.math","c":"MathEx","l":"min(float, float, float)","u":"min(float,float,float)"},{"p":"smile.math","c":"MathEx","l":"min(float, float, float, float)","u":"min(float,float,float,float)"},{"p":"smile.math","c":"MathEx","l":"min(float[])"},{"p":"smile.math","c":"MathEx","l":"min(int, int, int)","u":"min(int,int,int)"},{"p":"smile.math","c":"MathEx","l":"min(int, int, int, int)","u":"min(int,int,int,int)"},{"p":"smile.math","c":"MathEx","l":"min(int[])"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"min(int[], int[])","u":"min(int[],int[])"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"min(int[], int[])","u":"min(int[],int[])"},{"p":"smile.math","c":"MathEx","l":"min(int[][])"},{"p":"smile.plot.vega","c":"Axis","l":"minExtent(int)"},{"p":"smile.math","c":"BFGS","l":"minimize(DifferentiableMultivariateFunction, double[], double, int)","u":"minimize(smile.math.DifferentiableMultivariateFunction,double[],double,int)"},{"p":"smile.math","c":"BFGS","l":"minimize(DifferentiableMultivariateFunction, int, double[], double, int)","u":"minimize(smile.math.DifferentiableMultivariateFunction,int,double[],double,int)"},{"p":"smile.math","c":"BFGS","l":"minimize(DifferentiableMultivariateFunction, int, double[], double[], double[], double, int)","u":"minimize(smile.math.DifferentiableMultivariateFunction,int,double[],double[],double[],double,int)"},{"p":"smile.math.distance","c":"MinkowskiDistance","l":"MinkowskiDistance(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.distance","c":"MinkowskiDistance","l":"MinkowskiDistance(int, double[])","u":"%3Cinit%3E(int,double[])"},{"p":"smile.math","c":"Scaler","l":"minmax(double[])"},{"p":"smile.clustering","c":"DBSCAN","l":"minPts"},{"p":"smile.plot.vega","c":"BinParams","l":"minStep(double)"},{"p":"smile.plot.vega","c":"DensityTransform","l":"minSteps(int)"},{"p":"smile.association","c":"FPTree","l":"minSupport()"},{"p":"smile.data.formula","c":"DateFeature","l":"MINUTE"},{"p":"smile.stat.distribution","c":"Mixture","l":"Mixture(Mixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.Mixture.Component...)"},{"p":"smile.base.mlp","c":"Layer","l":"mle(int, OutputFunction)","u":"mle(int,smile.base.mlp.OutputFunction)"},{"p":"smile.classification","c":"MLP","l":"MLP(IntSet, LayerBuilder...)","u":"%3Cinit%3E(smile.util.IntSet,smile.base.mlp.LayerBuilder...)"},{"p":"smile.classification","c":"MLP","l":"MLP(LayerBuilder...)","u":"%3Cinit%3E(smile.base.mlp.LayerBuilder...)"},{"p":"smile.regression","c":"MLP","l":"MLP(LayerBuilder...)","u":"%3Cinit%3E(smile.base.mlp.LayerBuilder...)"},{"p":"smile.regression","c":"MLP","l":"MLP(Scaler, LayerBuilder...)","u":"%3Cinit%3E(smile.math.Scaler,smile.base.mlp.LayerBuilder...)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mm(BigMatrix)","u":"mm(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mm(Matrix)","u":"mm(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"mm(Matrix)","u":"mm(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"mm(SparseMatrix)","u":"mm(smile.math.matrix.fp32.SparseMatrix)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"mm(SparseMatrix)","u":"mm(smile.math.matrix.SparseMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mm(Transpose, BigMatrix, Transpose, BigMatrix)","u":"mm(smile.math.blas.Transpose,smile.math.matrix.BigMatrix,smile.math.blas.Transpose,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mm(Transpose, BigMatrix, Transpose, BigMatrix, double, double)","u":"mm(smile.math.blas.Transpose,smile.math.matrix.BigMatrix,smile.math.blas.Transpose,smile.math.matrix.BigMatrix,double,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mm(Transpose, Matrix, Transpose, Matrix)","u":"mm(smile.math.blas.Transpose,smile.math.matrix.fp32.Matrix,smile.math.blas.Transpose,smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"mm(Transpose, Matrix, Transpose, Matrix)","u":"mm(smile.math.blas.Transpose,smile.math.matrix.Matrix,smile.math.blas.Transpose,smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"mm(Transpose, Matrix, Transpose, Matrix, double, double)","u":"mm(smile.math.blas.Transpose,smile.math.matrix.Matrix,smile.math.blas.Transpose,smile.math.matrix.Matrix,double,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mm(Transpose, Matrix, Transpose, Matrix, float, float)","u":"mm(smile.math.blas.Transpose,smile.math.matrix.fp32.Matrix,smile.math.blas.Transpose,smile.math.matrix.fp32.Matrix,float,float)"},{"p":"smile.swing.table","c":"DateCellEditor","l":"MMDDYY"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"MMDDYY"},{"p":"smile.deep","c":"Dataset","l":"mnist(String, boolean, int)","u":"mnist(java.lang.String,boolean,int)"},{"p":"smile.math","c":"MathEx","l":"mode(int[])"},{"p":"smile.io","c":"JSON","l":"mode(JSON.Mode)","u":"mode(smile.io.JSON.Mode)"},{"p":"smile.glm","c":"GLM","l":"model"},{"p":"smile.sequence","c":"CRFLabeler","l":"model"},{"p":"smile.sequence","c":"HMMLabeler","l":"model"},{"p":"smile.validation","c":"ClassificationValidation","l":"model"},{"p":"smile.validation","c":"RegressionValidation","l":"model"},{"p":"smile.deep","c":"Model","l":"Model(LayerBlock)","u":"%3Cinit%3E(smile.deep.layer.LayerBlock)"},{"p":"smile.classification","c":"RandomForest","l":"models()"},{"p":"smile.regression","c":"RandomForest","l":"models()"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"momentum"},{"p":"smile.data.formula","c":"DateFeature","l":"MONTH"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"mouseClicked(MouseEvent)","u":"mouseClicked(java.awt.event.MouseEvent)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"mouseEntered(MouseEvent)","u":"mouseEntered(java.awt.event.MouseEvent)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"mouseExited(MouseEvent)","u":"mouseExited(java.awt.event.MouseEvent)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"mousePressed(MouseEvent)","u":"mousePressed(java.awt.event.MouseEvent)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"mouseReleased(MouseEvent)","u":"mouseReleased(java.awt.event.MouseEvent)"},{"p":"smile.neighbor","c":"MPLSH","l":"MPLSH(int, int, int, double)","u":"%3Cinit%3E(int,int,int,double)"},{"p":"smile.neighbor","c":"MPLSH","l":"MPLSH(int, int, int, double, int)","u":"%3Cinit%3E(int,int,int,double,int)"},{"p":"smile.deep.tensor","c":"DeviceType","l":"MPS"},{"p":"smile.deep.tensor","c":"Device","l":"MPS()"},{"p":"smile.validation","c":"RegressionMetrics","l":"mse"},{"p":"smile.deep","c":"Loss","l":"mse()"},{"p":"smile.validation.metric","c":"MSE","l":"MSE()","u":"%3Cinit%3E()"},{"p":"smile.base.mlp","c":"Layer","l":"mse(int, OutputFunction)","u":"mse(int,smile.base.mlp.OutputFunction)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mt(BigMatrix)","u":"mt(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mt(Matrix)","u":"mt(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"mt(Matrix)","u":"mt(smile.math.matrix.Matrix)"},{"p":"smile.base.cart","c":"CART","l":"mtry"},{"p":"smile.glm","c":"GLM","l":"mu"},{"p":"smile.regression","c":"GaussianProcessRegression.JointPrediction","l":"mu"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"mu"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"mu"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"mu"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"mu"},{"p":"smile.deep.tensor","c":"Tensor","l":"mul_(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"mul_(float)"},{"p":"smile.deep.tensor","c":"Tensor","l":"mul_(Tensor)","u":"mul_(smile.deep.tensor.Tensor)"},{"p":"smile.util","c":"Array2D","l":"mul(Array2D)","u":"mul(smile.util.Array2D)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mul(BigMatrix)","u":"mul(smile.math.matrix.BigMatrix)"},{"p":"smile.math","c":"Complex","l":"mul(Complex)","u":"mul(smile.math.Complex)"},{"p":"smile.deep.tensor","c":"Tensor","l":"mul(double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mul(double)"},{"p":"smile.math.matrix","c":"Matrix","l":"mul(double)"},{"p":"smile.util","c":"Array2D","l":"mul(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"mul(float)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mul(float)"},{"p":"smile.util","c":"IntArray2D","l":"mul(int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mul(int, int, double)","u":"mul(int,int,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"mul(int, int, double)","u":"mul(int,int,double)"},{"p":"smile.util","c":"Array2D","l":"mul(int, int, double)","u":"mul(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mul(int, int, float)","u":"mul(int,int,float)"},{"p":"smile.util","c":"IntArray2D","l":"mul(int, int, int)","u":"mul(int,int,int)"},{"p":"smile.util","c":"IntArray2D","l":"mul(IntArray2D)","u":"mul(smile.util.IntArray2D)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mul(Matrix)","u":"mul(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"mul(Matrix)","u":"mul(smile.math.matrix.Matrix)"},{"p":"smile.data.formula","c":"Terms","l":"mul(String, String)","u":"mul(java.lang.String,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"mul(String, Term)","u":"mul(java.lang.String,smile.data.formula.Term)"},{"p":"smile.deep.tensor","c":"Tensor","l":"mul(Tensor)","u":"mul(smile.deep.tensor.Tensor)"},{"p":"smile.data.formula","c":"Terms","l":"mul(Term, String)","u":"mul(smile.data.formula.Term,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"mul(Term, Term)","u":"mul(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Mul","l":"Mul(Term, Term)","u":"%3Cinit%3E(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.io","c":"JSON.Mode","l":"MULTI_LINE"},{"p":"smile.swing.table","c":"MultiColumnSortTableHeaderCellRenderer","l":"MultiColumnSortTableHeaderCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"MultiColumnSortTableHeaderCellRenderer","l":"MultiColumnSortTableHeaderCellRenderer(float)","u":"%3Cinit%3E(float)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"MultilayerPerceptron(Layer...)","u":"%3Cinit%3E(smile.base.mlp.Layer...)"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"MULTINOMIAL"},{"p":"smile.classification","c":"LogisticRegression.Multinomial","l":"Multinomial(double[][], double, double, IntSet)","u":"%3Cinit%3E(double[][],double,double,smile.util.IntSet)"},{"p":"smile.classification","c":"Maxent.Multinomial","l":"Multinomial(double[][], double, double, IntSet)","u":"%3Cinit%3E(double[][],double,double,smile.util.IntSet)"},{"p":"smile.classification","c":"SparseLogisticRegression.Multinomial","l":"Multinomial(double[][], double, double, IntSet)","u":"%3Cinit%3E(double[][],double,double,smile.util.IntSet)"},{"p":"smile.classification","c":"LogisticRegression","l":"multinomial(double[][], int[])","u":"multinomial(double[][],int[])"},{"p":"smile.classification","c":"LogisticRegression","l":"multinomial(double[][], int[], double, double, int)","u":"multinomial(double[][],int[],double,double,int)"},{"p":"smile.classification","c":"LogisticRegression","l":"multinomial(double[][], int[], Properties)","u":"multinomial(double[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"Maxent","l":"multinomial(int, int[][], int[])","u":"multinomial(int,int[][],int[])"},{"p":"smile.classification","c":"Maxent","l":"multinomial(int, int[][], int[], double, double, int)","u":"multinomial(int,int[][],int[],double,double,int)"},{"p":"smile.classification","c":"Maxent","l":"multinomial(int, int[][], int[], Properties)","u":"multinomial(int,int[][],int[],java.util.Properties)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"multinomial(SparseDataset<Integer>)","u":"multinomial(smile.data.SparseDataset)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"multinomial(SparseDataset<Integer>, double, double, int)","u":"multinomial(smile.data.SparseDataset,double,double,int)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"multinomial(SparseDataset<Integer>, Properties)","u":"multinomial(smile.data.SparseDataset,java.util.Properties)"},{"p":"smile.neighbor.lsh","c":"MultiProbeHash","l":"MultiProbeHash(int, int, double, int)","u":"%3Cinit%3E(int,int,double,int)"},{"p":"smile.neighbor.lsh","c":"MultiProbeSample","l":"MultiProbeSample(double[], List<double[]>)","u":"%3Cinit%3E(double[],java.util.List)"},{"p":"smile.math.rbf","c":"MultiquadricRadialBasis","l":"MultiquadricRadialBasis()","u":"%3Cinit%3E()"},{"p":"smile.math.rbf","c":"MultiquadricRadialBasis","l":"MultiquadricRadialBasis(double)","u":"%3Cinit%3E(double)"},{"p":"smile.stat.distribution","c":"MultivariateExponentialFamilyMixture","l":"MultivariateExponentialFamilyMixture(MultivariateMixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.MultivariateMixture.Component...)"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"MultivariateGaussianDistribution(double[], double)","u":"%3Cinit%3E(double[],double)"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"MultivariateGaussianDistribution(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"MultivariateGaussianDistribution(double[], Matrix)","u":"%3Cinit%3E(double[],smile.math.matrix.Matrix)"},{"p":"smile.stat.distribution","c":"MultivariateGaussianMixture","l":"MultivariateGaussianMixture(MultivariateMixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.MultivariateMixture.Component...)"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"MultivariateMixture(MultivariateMixture.Component...)","u":"%3Cinit%3E(smile.stat.distribution.MultivariateMixture.Component...)"},{"p":"smile.hash","c":"MurmurHash3","l":"MurmurHash3()","u":"%3Cinit%3E()"},{"p":"smile.glm.model","c":"Model","l":"mustart(double)"},{"p":"smile.util","c":"MutableInt","l":"MutableInt()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"MutableInt","l":"MutableInt(int)","u":"%3Cinit%3E(int)"},{"p":"smile.neighbor","c":"MutableLSH","l":"MutableLSH(int, int, int, double)","u":"%3Cinit%3E(int,int,int,double)"},{"p":"smile.gap","c":"BitString","l":"mutate()"},{"p":"smile.gap","c":"Chromosome","l":"mutate()"},{"p":"smile.validation.metric","c":"MutualInformation","l":"MutualInformation()","u":"%3Cinit%3E()"},{"p":"smile.math.matrix","c":"IMatrix","l":"mv(double, double[], double, double[])","u":"mv(double,double[],double,double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"mv(double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"mv(double[], double[])","u":"mv(double[],double[])"},{"p":"smile.math.matrix","c":"BandMatrix","l":"mv(double[], int, int)","u":"mv(double[],int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mv(double[], int, int)","u":"mv(double[],int,int)"},{"p":"smile.math.matrix","c":"IMatrix","l":"mv(double[], int, int)","u":"mv(double[],int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"mv(double[], int, int)","u":"mv(double[],int,int)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"mv(double[], int, int)","u":"mv(double[],int,int)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"mv(double[], int, int)","u":"mv(double[],int,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"mv(float, float[], float, float[])","u":"mv(float,float[],float,float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"mv(float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"mv(float[], float[])","u":"mv(float[],float[])"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"mv(float[], int, int)","u":"mv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"mv(float[], int, int)","u":"mv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mv(float[], int, int)","u":"mv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"mv(float[], int, int)","u":"mv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"mv(float[], int, int)","u":"mv(float[],int,int)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"mv(Transpose, double, double[], double, double[])","u":"mv(smile.math.blas.Transpose,double,double[],double,double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"mv(Transpose, double, double[], double, double[])","u":"mv(smile.math.blas.Transpose,double,double[],double,double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"mv(Transpose, double, double[], double, double[])","u":"mv(smile.math.blas.Transpose,double,double[],double,double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"mv(Transpose, double, double[], double, double[])","u":"mv(smile.math.blas.Transpose,double,double[],double,double[])"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"mv(Transpose, double, double[], double, double[])","u":"mv(smile.math.blas.Transpose,double,double[],double,double[])"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"mv(Transpose, double, double[], double, double[])","u":"mv(smile.math.blas.Transpose,double,double[],double,double[])"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"mv(Transpose, float, float[], float, float[])","u":"mv(smile.math.blas.Transpose,float,float[],float,float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"mv(Transpose, float, float[], float, float[])","u":"mv(smile.math.blas.Transpose,float,float[],float,float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"mv(Transpose, float, float[], float, float[])","u":"mv(smile.math.blas.Transpose,float,float[],float,float[])"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"mv(Transpose, float, float[], float, float[])","u":"mv(smile.math.blas.Transpose,float,float[],float,float[])"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"mv(Transpose, float, float[], float, float[])","u":"mv(smile.math.blas.Transpose,float,float[],float,float[])"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"MYSQL"},{"p":"smile.base.mlp","c":"Layer","l":"n"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"n"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"n"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"n"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"n"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"n"},{"p":"smile.validation.metric","c":"ContingencyTable","l":"n"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"N"},{"p":"smile.validation.metric","c":"ContingencyTable","l":"n1"},{"p":"smile.validation.metric","c":"ContingencyTable","l":"n2"},{"p":"smile.classification","c":"NaiveBayes","l":"NaiveBayes(double[], Distribution[][])","u":"%3Cinit%3E(double[],smile.stat.distribution.Distribution[][])"},{"p":"smile.classification","c":"NaiveBayes","l":"NaiveBayes(double[], Distribution[][], IntSet)","u":"%3Cinit%3E(double[],smile.stat.distribution.Distribution[][],smile.util.IntSet)"},{"p":"smile.data.type","c":"StructField","l":"name"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"name()"},{"p":"smile.base.mlp.activation","c":"LeakyReLU","l":"name()"},{"p":"smile.base.mlp.activation","c":"ReLU","l":"name()"},{"p":"smile.base.mlp.activation","c":"Sigmoid","l":"name()"},{"p":"smile.base.mlp.activation","c":"Softmax","l":"name()"},{"p":"smile.base.mlp.activation","c":"Tanh","l":"name()"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"name()"},{"p":"smile.data.type","c":"ArrayType","l":"name()"},{"p":"smile.data.type","c":"BooleanType","l":"name()"},{"p":"smile.data.type","c":"ByteType","l":"name()"},{"p":"smile.data.type","c":"CharType","l":"name()"},{"p":"smile.data.type","c":"DataType","l":"name()"},{"p":"smile.data.type","c":"DateTimeType","l":"name()"},{"p":"smile.data.type","c":"DateType","l":"name()"},{"p":"smile.data.type","c":"DecimalType","l":"name()"},{"p":"smile.data.type","c":"DoubleType","l":"name()"},{"p":"smile.data.type","c":"FloatType","l":"name()"},{"p":"smile.data.type","c":"IntegerType","l":"name()"},{"p":"smile.data.type","c":"LongType","l":"name()"},{"p":"smile.data.type","c":"ObjectType","l":"name()"},{"p":"smile.data.type","c":"ShortType","l":"name()"},{"p":"smile.data.type","c":"StringType","l":"name()"},{"p":"smile.data.type","c":"StructType","l":"name()"},{"p":"smile.data.type","c":"TimeType","l":"name()"},{"p":"smile.data.vector","c":"BaseVector","l":"name()"},{"p":"smile.deep.activation","c":"ActivationFunction","l":"name()"},{"p":"smile.deep.metric","c":"Accuracy","l":"name()"},{"p":"smile.deep.metric","c":"Metric","l":"name()"},{"p":"smile.deep.metric","c":"Precision","l":"name()"},{"p":"smile.deep.metric","c":"Recall","l":"name()"},{"p":"smile.io","c":"Arff","l":"name()"},{"p":"smile.data.type","c":"StructType","l":"name(int)"},{"p":"smile.plot.vega","c":"Concat","l":"name(String)","u":"name(java.lang.String)"},{"p":"smile.plot.vega","c":"Data","l":"name(String)","u":"name(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"name(String)","u":"name(java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"name(String)","u":"name(java.lang.String)"},{"p":"smile.plot.vega","c":"VegaLite","l":"name(String)","u":"name(java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"name(String)","u":"name(java.lang.String)"},{"p":"smile.data","c":"DataFrame","l":"names()"},{"p":"smile.data","c":"Tuple","l":"names()"},{"p":"smile.data.type","c":"StructType","l":"names()"},{"p":"smile.plot.swing","c":"Palette","l":"NAVY_BLUE"},{"p":"smile.nlp","c":"Corpus","l":"nbigram()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"nbigram()"},{"p":"smile.data","c":"BinarySparseDataset","l":"ncol()"},{"p":"smile.data","c":"DataFrame","l":"ncol()"},{"p":"smile.data","c":"IndexDataFrame","l":"ncol()"},{"p":"smile.data","c":"SparseDataset","l":"ncol()"},{"p":"smile.math.matrix","c":"BandMatrix","l":"ncol()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"ncol()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"ncol()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"ncol()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"ncol()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"ncol()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"ncol()"},{"p":"smile.math.matrix","c":"IMatrix","l":"ncol()"},{"p":"smile.math.matrix","c":"Matrix","l":"ncol()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"ncol()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"ncol()"},{"p":"smile.util","c":"Array2D","l":"ncol()"},{"p":"smile.util","c":"IntArray2D","l":"ncol()"},{"p":"smile.nlp","c":"Corpus","l":"ndoc()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"ndoc()"},{"p":"smile.deep.tensor","c":"Tensor","l":"ne(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"ne(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"ne(Tensor)","u":"ne(smile.deep.tensor.Tensor)"},{"p":"smile.neighbor","c":"KDTree","l":"nearest(double[])"},{"p":"smile.neighbor","c":"LSH","l":"nearest(double[])"},{"p":"smile.neighbor","c":"MPLSH","l":"nearest(double[])"},{"p":"smile.neighbor","c":"MPLSH","l":"nearest(double[], double, int)","u":"nearest(double[],double,int)"},{"p":"smile.neighbor","c":"KNNSearch","l":"nearest(K)"},{"p":"smile.neighbor","c":"LinearSearch","l":"nearest(K)"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"NegativeBinomialDistribution(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math","c":"MathEx","l":"NEGEP"},{"p":"smile.vq.hebb","c":"Edge","l":"neighbor"},{"p":"smile.neighbor","c":"Neighbor","l":"Neighbor(K, V, int, double)","u":"%3Cinit%3E(K,V,int,double)"},{"p":"smile.neighbor.lsh","c":"NeighborHashValueModel","l":"NeighborHashValueModel(double[], double[], double[])","u":"%3Cinit%3E(double[],double[],double[])"},{"p":"smile.neighbor.lsh","c":"MultiProbeSample","l":"neighbors"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"net"},{"p":"smile.vq","c":"NeuralGas","l":"network()"},{"p":"smile.vq","c":"NeuralGas","l":"NeuralGas(double[][], TimeFunction, TimeFunction, TimeFunction)","u":"%3Cinit%3E(double[][],smile.math.TimeFunction,smile.math.TimeFunction,smile.math.TimeFunction)"},{"p":"smile.vq","c":"NeuralMap","l":"NeuralMap(double, double, double, int, double)","u":"%3Cinit%3E(double,double,double,int,double)"},{"p":"smile.vq.hebb","c":"Neuron","l":"Neuron(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.vq.hebb","c":"Neuron","l":"Neuron(double[], double)","u":"%3Cinit%3E(double[],double)"},{"p":"smile.base.mlp","c":"LayerBuilder","l":"neurons"},{"p":"smile.base.mlp","c":"LayerBuilder","l":"neurons()"},{"p":"smile.vq","c":"GrowingNeuralGas","l":"neurons()"},{"p":"smile.vq","c":"NeuralGas","l":"neurons()"},{"p":"smile.vq","c":"NeuralMap","l":"neurons()"},{"p":"smile.vq","c":"SOM","l":"neurons()"},{"p":"smile.gap","c":"BitString","l":"newInstance()"},{"p":"smile.gap","c":"Chromosome","l":"newInstance()"},{"p":"smile.gap","c":"BitString","l":"newInstance(byte[])"},{"p":"smile.base.cart","c":"CART","l":"newNode(int[])"},{"p":"smile.classification","c":"DecisionTree","l":"newNode(int[])"},{"p":"smile.regression","c":"RegressionTree","l":"newNode(int[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"newOnes(long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"newZeros(long...)"},{"p":"smile.math.random","c":"MersenneTwister","l":"next(int)"},{"p":"smile.math.random","c":"MersenneTwister64","l":"next(int)"},{"p":"smile.math.random","c":"RandomNumberGenerator","l":"next(int)"},{"p":"smile.math.random","c":"UniversalGenerator","l":"next(int)"},{"p":"smile.math.random","c":"MersenneTwister","l":"nextDouble()"},{"p":"smile.math.random","c":"MersenneTwister64","l":"nextDouble()"},{"p":"smile.math","c":"Random","l":"nextDouble()"},{"p":"smile.math.random","c":"RandomNumberGenerator","l":"nextDouble()"},{"p":"smile.math.random","c":"UniversalGenerator","l":"nextDouble()"},{"p":"smile.math","c":"Random","l":"nextDouble(double, double)","u":"nextDouble(double,double)"},{"p":"smile.math.random","c":"MersenneTwister","l":"nextDoubles(double[])"},{"p":"smile.math.random","c":"MersenneTwister64","l":"nextDoubles(double[])"},{"p":"smile.math","c":"Random","l":"nextDoubles(double[])"},{"p":"smile.math.random","c":"RandomNumberGenerator","l":"nextDoubles(double[])"},{"p":"smile.math.random","c":"UniversalGenerator","l":"nextDoubles(double[])"},{"p":"smile.math","c":"Random","l":"nextDoubles(double[], double, double)","u":"nextDoubles(double[],double,double)"},{"p":"smile.math.random","c":"MersenneTwister","l":"nextInt()"},{"p":"smile.math.random","c":"MersenneTwister64","l":"nextInt()"},{"p":"smile.math","c":"Random","l":"nextInt()"},{"p":"smile.math.random","c":"RandomNumberGenerator","l":"nextInt()"},{"p":"smile.math.random","c":"UniversalGenerator","l":"nextInt()"},{"p":"smile.math.random","c":"MersenneTwister","l":"nextInt(int)"},{"p":"smile.math.random","c":"MersenneTwister64","l":"nextInt(int)"},{"p":"smile.math","c":"Random","l":"nextInt(int)"},{"p":"smile.math.random","c":"RandomNumberGenerator","l":"nextInt(int)"},{"p":"smile.math.random","c":"UniversalGenerator","l":"nextInt(int)"},{"p":"smile.math.random","c":"MersenneTwister","l":"nextLong()"},{"p":"smile.math.random","c":"MersenneTwister64","l":"nextLong()"},{"p":"smile.math","c":"Random","l":"nextLong()"},{"p":"smile.math.random","c":"RandomNumberGenerator","l":"nextLong()"},{"p":"smile.math.random","c":"UniversalGenerator","l":"nextLong()"},{"p":"smile.nlp","c":"NGram","l":"NGram(String[])","u":"%3Cinit%3E(java.lang.String[])"},{"p":"smile.nlp.collocation","c":"NGram","l":"NGram(String[], int)","u":"%3Cinit%3E(java.lang.String[],int)"},{"p":"smile.classification","c":"ClassLabels","l":"ni"},{"p":"smile.plot.vega","c":"BinParams","l":"nice(int)"},{"p":"smile.deep","c":"Loss","l":"nll()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"NN"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"NNP"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"NNPS"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"NNS"},{"p":"smile.math.blas","c":"Transpose","l":"NO_TRANSPOSE"},{"p":"smile.math.blas","c":"EVDJob","l":"NO_VECTORS"},{"p":"smile.math.blas","c":"SVDJob","l":"NO_VECTORS"},{"p":"smile.nlp","c":"Trie.Node","l":"Node(K)","u":"%3Cinit%3E(K)"},{"p":"smile.base.cart","c":"CART","l":"nodeSize"},{"p":"smile.deep.tensor","c":"Tensor","l":"noGradGuard()"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"noise"},{"p":"smile.data.vector","c":"StringVector","l":"nominal()"},{"p":"smile.base.cart","c":"NominalNode","l":"NominalNode(int, int, double, double, Node, Node)","u":"%3Cinit%3E(int,int,double,double,smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.data.measure","c":"NominalScale","l":"NominalScale(Class<? extends Enum>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"smile.data.measure","c":"NominalScale","l":"NominalScale(int[], String[])","u":"%3Cinit%3E(int[],java.lang.String[])"},{"p":"smile.data.measure","c":"NominalScale","l":"NominalScale(List<String>)","u":"%3Cinit%3E(java.util.List)"},{"p":"smile.data.measure","c":"NominalScale","l":"NominalScale(String...)","u":"%3Cinit%3E(java.lang.String...)"},{"p":"smile.base.cart","c":"NominalSplit","l":"NominalSplit(LeafNode, int, int, double, int, int, int, int, IntPredicate)","u":"%3Cinit%3E(smile.base.cart.LeafNode,int,int,double,int,int,int,int,java.util.function.IntPredicate)"},{"p":"smile.math.blas","c":"Diag","l":"NON_UNIT"},{"p":"smile.deep.tensor","c":"Index","l":"None"},{"p":"smile.validation","c":"CrossValidation","l":"nonoverlap(int[], int)","u":"nonoverlap(int[],int)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"nonzeros()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"nonzeros()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"nonzeros(int, int)","u":"nonzeros(int,int)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"nonzeros(int, int)","u":"nonzeros(int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"norm()"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"norm()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"norm()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"norm()"},{"p":"smile.math.matrix","c":"Matrix","l":"norm()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"norm()"},{"p":"smile.math","c":"MathEx","l":"norm(double[])"},{"p":"smile.math","c":"MathEx","l":"norm(float[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"norm1()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"norm1()"},{"p":"smile.math.matrix","c":"Matrix","l":"norm1()"},{"p":"smile.math","c":"MathEx","l":"norm1(double[])"},{"p":"smile.math","c":"MathEx","l":"norm1(float[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"norm2()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"norm2()"},{"p":"smile.math.matrix","c":"Matrix","l":"norm2()"},{"p":"smile.math","c":"MathEx","l":"norm2(double[])"},{"p":"smile.math","c":"MathEx","l":"norm2(float[])"},{"p":"smile.math","c":"MathEx","l":"normalize(double[][])"},{"p":"smile.math","c":"MathEx","l":"normalize(double[][], boolean)","u":"normalize(double[][],boolean)"},{"p":"smile.nlp.normalizer","c":"Normalizer","l":"normalize(String)","u":"normalize(java.lang.String)"},{"p":"smile.nlp.normalizer","c":"SimpleNormalizer","l":"normalize(String)","u":"normalize(java.lang.String)"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"NormalizedMutualInformation(NormalizedMutualInformation.Method)","u":"%3Cinit%3E(smile.validation.metric.NormalizedMutualInformation.Method)"},{"p":"smile.plot.vega","c":"FormatConfig","l":"normalizedNumberFormat(String)","u":"normalizedNumberFormat(java.lang.String)"},{"p":"smile.plot.vega","c":"FormatConfig","l":"normalizedNumberFormatType(String)","u":"normalizedNumberFormatType(java.lang.String)"},{"p":"smile.feature.transform","c":"Normalizer","l":"Normalizer(Normalizer.Norm, String...)","u":"%3Cinit%3E(smile.feature.transform.Normalizer.Norm,java.lang.String...)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"normFro()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"normFro()"},{"p":"smile.math.matrix","c":"Matrix","l":"normFro()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"normInf()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"normInf()"},{"p":"smile.math.matrix","c":"Matrix","l":"normInf()"},{"p":"smile.math","c":"MathEx","l":"normInf(double[])"},{"p":"smile.math","c":"MathEx","l":"normInf(float[])"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"normLayer()"},{"p":"smile.plot.vega","c":"Predicate","l":"not(Predicate)","u":"not(smile.plot.vega.Predicate)"},{"p":"smile.math.blas","c":"BLAS","l":"nrm2(double[])"},{"p":"smile.math.blas","c":"BLAS","l":"nrm2(float[])"},{"p":"smile.math.blas","c":"BLAS","l":"nrm2(int, double[], int)","u":"nrm2(int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"nrm2(int, double[], int)","u":"nrm2(int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"nrm2(int, float[], int)","u":"nrm2(int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"nrm2(int, float[], int)","u":"nrm2(int,float[],int)"},{"p":"smile.data","c":"DataFrame","l":"nrow()"},{"p":"smile.data","c":"SparseDataset","l":"nrow()"},{"p":"smile.math.matrix","c":"BandMatrix","l":"nrow()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"nrow()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"nrow()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"nrow()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"nrow()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"nrow()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"nrow()"},{"p":"smile.math.matrix","c":"IMatrix","l":"nrow()"},{"p":"smile.math.matrix","c":"Matrix","l":"nrow()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"nrow()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"nrow()"},{"p":"smile.util","c":"Array2D","l":"nrow()"},{"p":"smile.util","c":"IntArray2D","l":"nrow()"},{"p":"smile.nlp","c":"Corpus","l":"nterm()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"nterm()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"nu"},{"p":"smile.stat.distribution","c":"TDistribution","l":"nu"},{"p":"smile.stat.distribution","c":"FDistribution","l":"nu1"},{"p":"smile.stat.distribution","c":"FDistribution","l":"nu2"},{"p":"smile.glm","c":"GLM","l":"nullDeviance"},{"p":"smile.glm.model","c":"Model","l":"nullDeviance(double[], double)","u":"nullDeviance(double[],double)"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"nullity()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"nullity()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"nullity()"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"nullspace()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"nullspace()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"nullspace()"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"NUMBER"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"NumberCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"NumberCellRenderer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"NumberCellRenderer(NumberFormat)","u":"%3Cinit%3E(java.text.NumberFormat)"},{"p":"smile.plot.vega","c":"FormatConfig","l":"numberFormat(String)","u":"numberFormat(java.lang.String)"},{"p":"smile.plot.vega","c":"FormatConfig","l":"numberFormatType(String)","u":"numberFormatType(java.lang.String)"},{"p":"smile.classification","c":"AbstractClassifier","l":"numClasses()"},{"p":"smile.classification","c":"Classifier","l":"numClasses()"},{"p":"smile.classification","c":"DecisionTree","l":"numClasses()"},{"p":"smile.classification","c":"MLP","l":"numClasses()"},{"p":"smile.classification","c":"SVM","l":"numClasses()"},{"p":"smile.llm","c":"Transformer.Options","l":"numDecoderLayers()"},{"p":"smile.llm","c":"Transformer.Options","l":"numEncoderLayers()"},{"p":"smile.data.measure","c":"NumericalMeasure","l":"NumericalMeasure(NumberFormat)","u":"%3Cinit%3E(java.text.NumberFormat)"},{"p":"smile.llm","c":"Transformer.Options","l":"numHeads()"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"numLayers()"},{"p":"smile.llm","c":"Transformer.Options","l":"numTokens()"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"nystrom(T[], double[], T[], MercerKernel<T>, double)","u":"nystrom(T[],double[],T[],smile.math.kernel.MercerKernel,double)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"nystrom(T[], double[], T[], MercerKernel<T>, double, boolean)","u":"nystrom(T[],double[],T[],smile.math.kernel.MercerKernel,double,boolean)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"nystrom(T[], double[], T[], MercerKernel<T>, Properties)","u":"nystrom(T[],double[],T[],smile.math.kernel.MercerKernel,java.util.Properties)"},{"p":"smile.data","c":"SparseDataset","l":"nz()"},{"p":"smile.data","c":"SparseDataset","l":"nz(int)"},{"p":"smile.data.type","c":"DataType.ID","l":"Object"},{"p":"smile.data.type","c":"DataTypes","l":"object(Class<?>)","u":"object(java.lang.Class)"},{"p":"smile.io","c":"Read","l":"object(Path)","u":"object(java.nio.file.Path)"},{"p":"smile.io","c":"Write","l":"object(Serializable)","u":"object(java.io.Serializable)"},{"p":"smile.io","c":"Write","l":"object(Serializable, Path)","u":"object(java.io.Serializable,java.nio.file.Path)"},{"p":"smile.data.type","c":"DataTypes","l":"ObjectType"},{"p":"smile.base.svm","c":"OCSVM","l":"OCSVM(MercerKernel<T>, double, double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,double,double)"},{"p":"smile.validation","c":"ClassificationValidation","l":"of(Bag[], Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"of(smile.validation.Bag[],smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"RegressionValidation","l":"of(Bag[], Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"of(smile.validation.Bag[],smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"RegressionValidation","l":"of(Bag[], T[], double[], BiFunction<T[], double[], M>)","u":"of(smile.validation.Bag[],T[],double[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"ClassificationValidation","l":"of(Bag[], T[], int[], BiFunction<T[], int[], M>)","u":"of(smile.validation.Bag[],T[],int[],java.util.function.BiFunction)"},{"p":"smile.data","c":"DataFrame","l":"of(BaseVector...)","u":"of(smile.data.vector.BaseVector...)"},{"p":"smile.data","c":"DataFrame","l":"of(boolean...)"},{"p":"smile.deep.tensor","c":"Index","l":"of(boolean...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"of(byte[], long...)","u":"of(byte[],long...)"},{"p":"smile.hash","c":"SimHash","l":"of(byte[][])"},{"p":"smile.data.type","c":"DataType","l":"of(Class)","u":"of(java.lang.Class)"},{"p":"smile.data","c":"DataFrame","l":"of(Collection<Map<String, T>>, StructType)","u":"of(java.util.Collection,smile.data.type.StructType)"},{"p":"smile.data","c":"Dataset","l":"of(Collection<SampleInstance<D, T>>)","u":"of(java.util.Collection)"},{"p":"smile.data","c":"BinarySparseDataset","l":"of(Collection<SampleInstance<int[], T>>)","u":"of(java.util.Collection)"},{"p":"smile.data","c":"SparseDataset","l":"of(Collection<SampleInstance<SparseArray, T>>)","u":"of(java.util.Collection)"},{"p":"smile.data","c":"SparseDataset","l":"of(Collection<SampleInstance<SparseArray, T>>, int)","u":"of(java.util.Collection,int)"},{"p":"smile.nlp.collocation","c":"NGram","l":"of(Collection<String[]>, int, int)","u":"of(java.util.Collection,int,int)"},{"p":"smile.math","c":"Complex.Array","l":"of(Complex...)","u":"of(smile.math.Complex...)"},{"p":"smile.nlp.collocation","c":"Bigram","l":"of(Corpus, double, int)","u":"of(smile.nlp.Corpus,double,int)"},{"p":"smile.nlp.collocation","c":"Bigram","l":"of(Corpus, int, int)","u":"of(smile.nlp.Corpus,int,int)"},{"p":"smile.data","c":"Dataset","l":"of(D[], double[])","u":"of(D[],double[])"},{"p":"smile.data","c":"Dataset","l":"of(D[], float[])","u":"of(D[],float[])"},{"p":"smile.data","c":"Dataset","l":"of(D[], int[])","u":"of(D[],int[])"},{"p":"smile.data","c":"Dataset","l":"of(D[], T[])","u":"of(D[],T[])"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(DataFrame, String, String, char, Color)","u":"of(smile.data.DataFrame,java.lang.String,java.lang.String,char,java.awt.Color)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(DataFrame, String, String, String, char)","u":"of(smile.data.DataFrame,java.lang.String,java.lang.String,java.lang.String,char)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(DataFrame, String, String, String, char, Color)","u":"of(smile.data.DataFrame,java.lang.String,java.lang.String,java.lang.String,char,java.awt.Color)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(DataFrame, String, String, String, String, char)","u":"of(smile.data.DataFrame,java.lang.String,java.lang.String,java.lang.String,java.lang.String,char)"},{"p":"smile.math","c":"Complex","l":"of(double)"},{"p":"smile.math","c":"Complex","l":"of(double, double)","u":"of(double,double)"},{"p":"smile.validation","c":"RegressionMetrics","l":"of(double, double, double[], double[])","u":"of(double,double,double[],double[])"},{"p":"smile.validation","c":"ClassificationMetrics","l":"of(double, double, int[], int[])","u":"of(double,double,int[],int[])"},{"p":"smile.validation","c":"ClassificationMetrics","l":"of(double, double, int[], int[], double[][])","u":"of(double,double,int[],int[],double[][])"},{"p":"smile.validation.metric","c":"FScore","l":"of(double, int[], int[])","u":"of(double,int[],int[])"},{"p":"smile.association","c":"FPTree","l":"of(double, int[][])","u":"of(double,int[][])"},{"p":"smile.validation","c":"ClassificationMetrics","l":"of(double, M, Formula, DataFrame)","u":"of(double,M,smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.validation","c":"RegressionMetrics","l":"of(double, M, Formula, DataFrame)","u":"of(double,M,smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.validation","c":"RegressionMetrics","l":"of(double, M, T[], double[])","u":"of(double,M,T[],double[])"},{"p":"smile.validation","c":"ClassificationMetrics","l":"of(double, M, T[], int[])","u":"of(double,M,T[],int[])"},{"p":"smile.association","c":"FPTree","l":"of(double, Supplier<Stream<int[]>>)","u":"of(double,java.util.function.Supplier)"},{"p":"smile.plot.swing","c":"Label","l":"of(double...)"},{"p":"smile.math","c":"Histogram","l":"of(double[])"},{"p":"smile.math.kernel","c":"BinarySparseGaussianKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"BinarySparseHyperbolicTangentKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"BinarySparseLaplacianKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"BinarySparseMaternKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"BinarySparsePolynomialKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"BinarySparseThinPlateSplineKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"GaussianKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"HyperbolicTangentKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"LaplacianKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"LinearKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"MaternKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"MercerKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"ProductKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"SumKernel","l":"of(double[])"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"of(double[])"},{"p":"smile.plot.swing","c":"Bar","l":"of(double[])"},{"p":"smile.plot.swing","c":"BarPlot","l":"of(double[])"},{"p":"smile.plot.swing","c":"Histogram","l":"of(double[])"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[])"},{"p":"smile.plot.swing","c":"QQPlot","l":"of(double[])"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[], Color)","u":"of(double[],java.awt.Color)"},{"p":"smile.plot.swing","c":"QQPlot","l":"of(double[], Distribution)","u":"of(double[],smile.stat.distribution.Distribution)"},{"p":"smile.math","c":"Histogram","l":"of(double[], double[])","u":"of(double[],double[])"},{"p":"smile.plot.swing","c":"QQPlot","l":"of(double[], double[])","u":"of(double[],double[])"},{"p":"smile.validation.metric","c":"MAD","l":"of(double[], double[])","u":"of(double[],double[])"},{"p":"smile.validation.metric","c":"MSE","l":"of(double[], double[])","u":"of(double[],double[])"},{"p":"smile.validation.metric","c":"R2","l":"of(double[], double[])","u":"of(double[],double[])"},{"p":"smile.validation.metric","c":"RMSE","l":"of(double[], double[])","u":"of(double[],double[])"},{"p":"smile.validation.metric","c":"RSS","l":"of(double[], double[])","u":"of(double[],double[])"},{"p":"smile.plot.swing","c":"Histogram","l":"of(double[], double[], boolean)","u":"of(double[],double[],boolean)"},{"p":"smile.plot.swing","c":"Histogram","l":"of(double[], double[], boolean, Color)","u":"of(double[],double[],boolean,java.awt.Color)"},{"p":"smile.plot.swing","c":"Contour","l":"of(double[], double[], double[][])","u":"of(double[],double[],double[][])"},{"p":"smile.plot.swing","c":"Heatmap","l":"of(double[], double[], double[][])","u":"of(double[],double[],double[][])"},{"p":"smile.plot.swing","c":"Surface","l":"of(double[], double[], double[][])","u":"of(double[],double[],double[][])"},{"p":"smile.plot.swing","c":"Surface","l":"of(double[], double[], double[][], Color[])","u":"of(double[],double[],double[][],java.awt.Color[])"},{"p":"smile.plot.swing","c":"Contour","l":"of(double[], double[], double[][], int)","u":"of(double[],double[],double[][],int)"},{"p":"smile.plot.swing","c":"Heatmap","l":"of(double[], double[], double[][], int)","u":"of(double[],double[],double[][],int)"},{"p":"smile.plot.swing","c":"Surface","l":"of(double[], double[], double[][], int)","u":"of(double[],double[],double[][],int)"},{"p":"smile.math","c":"Histogram","l":"of(double[], int)","u":"of(double[],int)"},{"p":"smile.plot.swing","c":"Histogram","l":"of(double[], int, boolean)","u":"of(double[],int,boolean)"},{"p":"smile.plot.swing","c":"Histogram","l":"of(double[], int, boolean, Color)","u":"of(double[],int,boolean,java.awt.Color)"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[], Line.Style)","u":"of(double[],smile.plot.swing.Line.Style)"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[], Line.Style, Color)","u":"of(double[],smile.plot.swing.Line.Style,java.awt.Color)"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[], Line.Style, Color, String)","u":"of(double[],smile.plot.swing.Line.Style,java.awt.Color,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"of(double[], long...)","u":"of(double[],long...)"},{"p":"smile.data","c":"Tuple","l":"of(double[], StructType)","u":"of(double[],smile.data.type.StructType)"},{"p":"smile.plot.swing","c":"BoxPlot","l":"of(double[]...)"},{"p":"smile.clustering.linkage","c":"CompleteLinkage","l":"of(double[][])"},{"p":"smile.clustering.linkage","c":"SingleLinkage","l":"of(double[][])"},{"p":"smile.clustering.linkage","c":"UPGMALinkage","l":"of(double[][])"},{"p":"smile.clustering.linkage","c":"UPGMCLinkage","l":"of(double[][])"},{"p":"smile.clustering.linkage","c":"WardLinkage","l":"of(double[][])"},{"p":"smile.clustering.linkage","c":"WPGMALinkage","l":"of(double[][])"},{"p":"smile.clustering.linkage","c":"WPGMCLinkage","l":"of(double[][])"},{"p":"smile.manifold","c":"IsotonicMDS","l":"of(double[][])"},{"p":"smile.manifold","c":"MDS","l":"of(double[][])"},{"p":"smile.manifold","c":"SammonMapping","l":"of(double[][])"},{"p":"smile.manifold","c":"UMAP","l":"of(double[][])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"of(double[][])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"of(double[][])"},{"p":"smile.math.matrix","c":"Matrix","l":"of(double[][])"},{"p":"smile.neighbor","c":"KDTree","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Contour","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Heatmap","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Hexmap","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Histogram3D","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Line","l":"of(double[][])"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Point","l":"of(double[][])"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Staircase","l":"of(double[][])"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"of(double[][])"},{"p":"smile.plot.swing","c":"Line","l":"of(double[][], char)","u":"of(double[][],char)"},{"p":"smile.plot.swing","c":"Point","l":"of(double[][], char)","u":"of(double[][],char)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(double[][], char)","u":"of(double[][],char)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(double[][], char, Color)","u":"of(double[][],char,java.awt.Color)"},{"p":"smile.plot.swing","c":"Line","l":"of(double[][], Color)","u":"of(double[][],java.awt.Color)"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[][], Color)","u":"of(double[][],java.awt.Color)"},{"p":"smile.plot.swing","c":"Point","l":"of(double[][], Color)","u":"of(double[][],java.awt.Color)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(double[][], Color)","u":"of(double[][],java.awt.Color)"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"of(double[][], Color, String)","u":"of(double[][],java.awt.Color,java.lang.String)"},{"p":"smile.plot.swing","c":"Heatmap","l":"of(double[][], Color[])","u":"of(double[][],java.awt.Color[])"},{"p":"smile.plot.swing","c":"Hexmap","l":"of(double[][], Color[])","u":"of(double[][],java.awt.Color[])"},{"p":"smile.plot.swing","c":"Surface","l":"of(double[][], Color[])","u":"of(double[][],java.awt.Color[])"},{"p":"smile.deep","c":"Dataset","l":"of(double[][], double[], int)","u":"of(double[][],double[],int)"},{"p":"smile.manifold","c":"SammonMapping","l":"of(double[][], double[][], double, double, double, int)","u":"of(double[][],double[][],double,double,double,int)"},{"p":"smile.manifold","c":"IsotonicMDS","l":"of(double[][], double[][], double, int)","u":"of(double[][],double[][],double,int)"},{"p":"smile.manifold","c":"IsoMap","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.manifold","c":"IsotonicMDS","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.manifold","c":"LLE","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.manifold","c":"MDS","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.manifold","c":"SammonMapping","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.manifold","c":"UMAP","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.plot.swing","c":"Contour","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.plot.swing","c":"Heatmap","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.plot.swing","c":"Hexmap","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.plot.swing","c":"Surface","l":"of(double[][], int)","u":"of(double[][],int)"},{"p":"smile.manifold","c":"MDS","l":"of(double[][], int, boolean)","u":"of(double[][],int,boolean)"},{"p":"smile.plot.swing","c":"Histogram3D","l":"of(double[][], int, boolean)","u":"of(double[][],int,boolean)"},{"p":"smile.plot.swing","c":"Histogram3D","l":"of(double[][], int, boolean, Color[])","u":"of(double[][],int,boolean,java.awt.Color[])"},{"p":"smile.plot.swing","c":"Histogram3D","l":"of(double[][], int, Color[])","u":"of(double[][],int,java.awt.Color[])"},{"p":"smile.manifold","c":"SammonMapping","l":"of(double[][], int, double, double, double, int)","u":"of(double[][],int,double,double,double,int)"},{"p":"smile.manifold","c":"IsotonicMDS","l":"of(double[][], int, double, int)","u":"of(double[][],int,double,int)"},{"p":"smile.manifold","c":"LLE","l":"of(double[][], int, int)","u":"of(double[][],int,int)"},{"p":"smile.manifold","c":"IsoMap","l":"of(double[][], int, int, boolean)","u":"of(double[][],int,int,boolean)"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"of(double[][], int, int, double)","u":"of(double[][],int,int,double)"},{"p":"smile.manifold","c":"UMAP","l":"of(double[][], int, int, int, double, double, double, int, double)","u":"of(double[][],int,int,int,double,double,double,int,double)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(double[][], int[], char)","u":"of(double[][],int[],char)"},{"p":"smile.deep","c":"Dataset","l":"of(double[][], int[], int)","u":"of(double[][],int[],int)"},{"p":"smile.plot.swing","c":"Wireframe","l":"of(double[][], int[][])","u":"of(double[][],int[][])"},{"p":"smile.plot.swing","c":"Line","l":"of(double[][], Line.Style)","u":"of(double[][],smile.plot.swing.Line.Style)"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[][], Line.Style)","u":"of(double[][],smile.plot.swing.Line.Style)"},{"p":"smile.plot.swing","c":"Line","l":"of(double[][], Line.Style, Color)","u":"of(double[][],smile.plot.swing.Line.Style,java.awt.Color)"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[][], Line.Style, Color)","u":"of(double[][],smile.plot.swing.Line.Style,java.awt.Color)"},{"p":"smile.plot.swing","c":"LinePlot","l":"of(double[][], Line.Style, Color, String)","u":"of(double[][],smile.plot.swing.Line.Style,java.awt.Color,java.lang.String)"},{"p":"smile.manifold","c":"IsotonicMDS","l":"of(double[][], Properties)","u":"of(double[][],java.util.Properties)"},{"p":"smile.manifold","c":"MDS","l":"of(double[][], Properties)","u":"of(double[][],java.util.Properties)"},{"p":"smile.manifold","c":"SammonMapping","l":"of(double[][], Properties)","u":"of(double[][],java.util.Properties)"},{"p":"smile.data","c":"DataFrame","l":"of(double[][], String...)","u":"of(double[][],java.lang.String...)"},{"p":"smile.plot.swing","c":"BarPlot","l":"of(double[][], String[])","u":"of(double[][],java.lang.String[])"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"of(double[][], String[], char)","u":"of(double[][],java.lang.String[],char)"},{"p":"smile.plot.swing","c":"Grid","l":"of(double[][][])"},{"p":"smile.math","c":"Histogram","l":"of(float[])"},{"p":"smile.math","c":"Histogram","l":"of(float[], float[])","u":"of(float[],float[])"},{"p":"smile.math","c":"Histogram","l":"of(float[], int)","u":"of(float[],int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"of(float[], long...)","u":"of(float[],long...)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"of(float[][])"},{"p":"smile.deep","c":"Dataset","l":"of(float[][], float[], int)","u":"of(float[][],float[],int)"},{"p":"smile.deep","c":"Dataset","l":"of(float[][], int[], int)","u":"of(float[][],int[],int)"},{"p":"smile.data","c":"DataFrame","l":"of(float[][], String...)","u":"of(float[][],java.lang.String...)"},{"p":"smile.validation","c":"ClassificationValidation","l":"of(Formula, DataFrame, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"of(smile.data.formula.Formula,smile.data.DataFrame,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"RegressionValidation","l":"of(Formula, DataFrame, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"of(smile.data.formula.Formula,smile.data.DataFrame,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.deep","c":"Dataset","l":"of(Formula, DataFrame, int)","u":"of(smile.data.formula.Formula,smile.data.DataFrame,int)"},{"p":"smile.classification","c":"DataFrameClassifier","l":"of(Formula, DataFrame, Properties, Classifier.Trainer<double[], ?>)","u":"of(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties,smile.classification.Classifier.Trainer)"},{"p":"smile.regression","c":"DataFrameRegression","l":"of(Formula, DataFrame, Properties, Regression.Trainer<double[], ?>)","u":"of(smile.data.formula.Formula,smile.data.DataFrame,java.util.Properties,smile.regression.Regression.Trainer)"},{"p":"smile.math.matrix","c":"PageRank","l":"of(IMatrix)","u":"of(smile.math.matrix.IMatrix)"},{"p":"smile.math.matrix","c":"PageRank","l":"of(IMatrix, double[])","u":"of(smile.math.matrix.IMatrix,double[])"},{"p":"smile.math.matrix","c":"PageRank","l":"of(IMatrix, double[], double, double, int)","u":"of(smile.math.matrix.IMatrix,double[],double,double,int)"},{"p":"smile.deep.tensor","c":"Index","l":"of(int)"},{"p":"smile.util","c":"IntSet","l":"of(int)"},{"p":"smile.validation","c":"LOOCV","l":"of(int)"},{"p":"smile.validation","c":"Bootstrap","l":"of(int, int)","u":"of(int,int)"},{"p":"smile.validation","c":"CrossValidation","l":"of(int, int)","u":"of(int,int)"},{"p":"smile.vq","c":"Neighborhood","l":"of(int, int, int)","u":"of(int,int,int)"},{"p":"smile.base.mlp","c":"Layer","l":"of(int, int, String)","u":"of(int,int,java.lang.String)"},{"p":"smile.feature.extraction","c":"RandomProjection","l":"of(int, int, String...)","u":"of(int,int,java.lang.String...)"},{"p":"smile.association","c":"FPTree","l":"of(int, int[][])","u":"of(int,int[][])"},{"p":"smile.association","c":"FPTree","l":"of(int, Supplier<Stream<int[]>>)","u":"of(int,java.util.function.Supplier)"},{"p":"smile.data","c":"DataFrame","l":"of(int...)"},{"p":"smile.deep.tensor","c":"Index","l":"of(int...)"},{"p":"smile.math","c":"Histogram","l":"of(int[])"},{"p":"smile.plot.swing","c":"Bar","l":"of(int[])"},{"p":"smile.plot.swing","c":"BarPlot","l":"of(int[])"},{"p":"smile.plot.swing","c":"Histogram","l":"of(int[])"},{"p":"smile.util","c":"IntSet","l":"of(int[])"},{"p":"smile.plot.swing","c":"QQPlot","l":"of(int[], DiscreteDistribution)","u":"of(int[],smile.stat.distribution.DiscreteDistribution)"},{"p":"smile.math","c":"Histogram","l":"of(int[], double[])","u":"of(int[],double[])"},{"p":"smile.validation.metric","c":"AUC","l":"of(int[], double[])","u":"of(int[],double[])"},{"p":"smile.validation.metric","c":"LogLoss","l":"of(int[], double[])","u":"of(int[],double[])"},{"p":"smile.plot.swing","c":"Histogram","l":"of(int[], double[], boolean)","u":"of(int[],double[],boolean)"},{"p":"smile.plot.swing","c":"Histogram","l":"of(int[], double[], boolean, Color)","u":"of(int[],double[],boolean,java.awt.Color)"},{"p":"smile.validation.metric","c":"CrossEntropy","l":"of(int[], double[][])","u":"of(int[],double[][])"},{"p":"smile.math","c":"Histogram","l":"of(int[], int)","u":"of(int[],int)"},{"p":"smile.validation","c":"Bootstrap","l":"of(int[], int)","u":"of(int[],int)"},{"p":"smile.plot.swing","c":"Histogram","l":"of(int[], int, boolean)","u":"of(int[],int,boolean)"},{"p":"smile.plot.swing","c":"Histogram","l":"of(int[], int, boolean, Color)","u":"of(int[],int,boolean,java.awt.Color)"},{"p":"smile.plot.swing","c":"QQPlot","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.stat","c":"GoodTuring","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"Accuracy","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"AdjustedRandIndex","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"ConfusionMatrix","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"Error","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"Fallout","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"FDR","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"MatthewsCorrelation","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"MutualInformation","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"Precision","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"RandIndex","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"Recall","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"Sensitivity","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.validation.metric","c":"Specificity","l":"of(int[], int[])","u":"of(int[],int[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"of(int[], long...)","u":"of(int[],long...)"},{"p":"smile.data","c":"Tuple","l":"of(int[], StructType)","u":"of(int[],smile.data.type.StructType)"},{"p":"smile.data","c":"BinarySparseDataset","l":"of(int[][])"},{"p":"smile.data","c":"DataFrame","l":"of(int[][], String...)","u":"of(int[][],java.lang.String...)"},{"p":"smile.data.type","c":"DataType","l":"of(JDBCType, boolean, String)","u":"of(java.sql.JDBCType,boolean,java.lang.String)"},{"p":"smile.base.svm","c":"LinearKernelMachine","l":"of(KernelMachine<double[]>)","u":"of(smile.base.svm.KernelMachine)"},{"p":"smile.data","c":"DataFrame","l":"of(List<? extends Tuple>)","u":"of(java.util.List)"},{"p":"smile.data","c":"DataFrame","l":"of(List<? extends Tuple>, StructType)","u":"of(java.util.List,smile.data.type.StructType)"},{"p":"smile.data","c":"Dataset","l":"of(List<D>, List<T>)","u":"of(java.util.List,java.util.List)"},{"p":"smile.data","c":"DataFrame","l":"of(List<T>, Class<T>)","u":"of(java.util.List,java.lang.Class)"},{"p":"smile.neighbor","c":"LinearSearch","l":"of(List<T>, Distance<T>)","u":"of(java.util.List,smile.math.distance.Distance)"},{"p":"smile.neighbor","c":"BKTree","l":"of(List<T>, Metric<T>)","u":"of(java.util.List,smile.math.distance.Metric)"},{"p":"smile.neighbor","c":"CoverTree","l":"of(List<T>, Metric<T>)","u":"of(java.util.List,smile.math.distance.Metric)"},{"p":"smile.neighbor","c":"CoverTree","l":"of(List<T>, Metric<T>, double)","u":"of(java.util.List,smile.math.distance.Metric,double)"},{"p":"smile.deep.tensor","c":"Index","l":"of(long)"},{"p":"smile.deep.tensor","c":"Index","l":"of(long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"of(long[], long...)","u":"of(long[],long...)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"of(M, Formula, DataFrame)","u":"of(M,smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.validation","c":"RegressionMetrics","l":"of(M, Formula, DataFrame)","u":"of(M,smile.data.formula.Formula,smile.data.DataFrame)"},{"p":"smile.validation","c":"RegressionMetrics","l":"of(M, T[], double[])","u":"of(M,T[],double[])"},{"p":"smile.validation","c":"ClassificationMetrics","l":"of(M, T[], int[])","u":"of(M,T[],int[])"},{"p":"smile.data","c":"Tuple","l":"of(Object[], StructType)","u":"of(java.lang.Object[],smile.data.type.StructType)"},{"p":"smile.nlp.embedding","c":"GloVe","l":"of(Path)","u":"of(java.nio.file.Path)"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"of(Path)","u":"of(java.nio.file.Path)"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"of(Path, ByteOrder)","u":"of(java.nio.file.Path,java.nio.ByteOrder)"},{"p":"smile.data","c":"DataFrame","l":"of(ResultSet)","u":"of(java.sql.ResultSet)"},{"p":"smile.data","c":"Tuple","l":"of(ResultSet, StructType)","u":"of(java.sql.ResultSet,smile.data.type.StructType)"},{"p":"smile.deep.tensor","c":"Tensor","l":"of(short[], long...)","u":"of(short[],long...)"},{"p":"smile.data","c":"SparseDataset","l":"of(SparseArray[])","u":"of(smile.util.SparseArray[])"},{"p":"smile.data","c":"SparseDataset","l":"of(SparseArray[], int)","u":"of(smile.util.SparseArray[],int)"},{"p":"smile.graph","c":"AdjacencyList","l":"of(SparseMatrix)","u":"of(smile.math.matrix.SparseMatrix)"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"of(SparseMatrix)","u":"of(smile.math.matrix.SparseMatrix)"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"of(SparseMatrix, int)","u":"of(smile.math.matrix.SparseMatrix,int)"},{"p":"smile.data","c":"DataFrame","l":"of(Stream<? extends Tuple>)","u":"of(java.util.stream.Stream)"},{"p":"smile.data","c":"DataFrame","l":"of(Stream<? extends Tuple>, StructType)","u":"of(java.util.stream.Stream,smile.data.type.StructType)"},{"p":"smile.data","c":"SparseDataset","l":"of(Stream<SparseArray>)","u":"of(java.util.stream.Stream)"},{"p":"smile.data.formula","c":"Formula","l":"of(String)","u":"of(java.lang.String)"},{"p":"smile.data.type","c":"DataType","l":"of(String)","u":"of(java.lang.String)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"of(String)","u":"of(java.lang.String)"},{"p":"smile.math","c":"TimeFunction","l":"of(String)","u":"of(java.lang.String)"},{"p":"smile.nlp.keyword","c":"CooccurrenceKeywords","l":"of(String)","u":"of(java.lang.String)"},{"p":"smile.data.vector","c":"BooleanVector","l":"of(String, boolean[])","u":"of(java.lang.String,boolean[])"},{"p":"smile.data.vector","c":"ByteVector","l":"of(String, byte[])","u":"of(java.lang.String,byte[])"},{"p":"smile.data.vector","c":"CharVector","l":"of(String, char[])","u":"of(java.lang.String,char[])"},{"p":"smile.data.vector","c":"Vector","l":"of(String, Class<?>, T[])","u":"of(java.lang.String,java.lang.Class,T[])"},{"p":"smile.data.vector","c":"Vector","l":"of(String, DataType, T[])","u":"of(java.lang.String,smile.data.type.DataType,T[])"},{"p":"smile.data.vector","c":"DoubleVector","l":"of(String, double[])","u":"of(java.lang.String,double[])"},{"p":"smile.math","c":"Scaler","l":"of(String, double[])","u":"of(java.lang.String,double[])"},{"p":"smile.plot.swing","c":"Label","l":"of(String, double[])","u":"of(java.lang.String,double[])"},{"p":"smile.plot.swing","c":"Label","l":"of(String, double[], double, double, double)","u":"of(java.lang.String,double[],double,double,double)"},{"p":"smile.data.vector","c":"DoubleVector","l":"of(String, DoubleStream)","u":"of(java.lang.String,java.util.stream.DoubleStream)"},{"p":"smile.data.vector","c":"FloatVector","l":"of(String, float[])","u":"of(java.lang.String,float[])"},{"p":"smile.nlp.keyword","c":"CooccurrenceKeywords","l":"of(String, int)","u":"of(java.lang.String,int)"},{"p":"smile.data.vector","c":"IntVector","l":"of(String, int[])","u":"of(java.lang.String,int[])"},{"p":"smile.data.vector","c":"IntVector","l":"of(String, IntStream)","u":"of(java.lang.String,java.util.stream.IntStream)"},{"p":"smile.data.vector","c":"LongVector","l":"of(String, long[])","u":"of(java.lang.String,long[])"},{"p":"smile.data.vector","c":"LongVector","l":"of(String, LongStream)","u":"of(java.lang.String,java.util.stream.LongStream)"},{"p":"smile.data.vector","c":"ShortVector","l":"of(String, short[])","u":"of(java.lang.String,short[])"},{"p":"smile.plot.vega","c":"Predicate","l":"of(String, String, boolean)","u":"of(java.lang.String,java.lang.String,boolean)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, Class<R>, Function<T, R>)","u":"of(java.lang.String,java.lang.String,java.lang.Class,java.util.function.Function)"},{"p":"smile.plot.vega","c":"Predicate","l":"of(String, String, double)","u":"of(java.lang.String,java.lang.String,double)"},{"p":"smile.plot.vega","c":"Predicate","l":"of(String, String, String)","u":"of(java.lang.String,java.lang.String,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, String, Class<R>, BiFunction<T, U, R>)","u":"of(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.util.function.BiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, String, ToDoubleBiFunction<T, U>)","u":"of(java.lang.String,java.lang.String,java.lang.String,java.util.function.ToDoubleBiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, String, ToIntBiFunction<T, U>)","u":"of(java.lang.String,java.lang.String,java.lang.String,java.util.function.ToIntBiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, String, ToLongBiFunction<T, U>)","u":"of(java.lang.String,java.lang.String,java.lang.String,java.util.function.ToLongBiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, ToDoubleFunction<T>)","u":"of(java.lang.String,java.lang.String,java.util.function.ToDoubleFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, ToIntFunction<T>)","u":"of(java.lang.String,java.lang.String,java.util.function.ToIntFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, String, ToLongFunction<T>)","u":"of(java.lang.String,java.lang.String,java.util.function.ToLongFunction)"},{"p":"smile.data.formula","c":"Formula","l":"of(String, String...)","u":"of(java.lang.String,java.lang.String...)"},{"p":"smile.data.vector","c":"StringVector","l":"of(String, String...)","u":"of(java.lang.String,java.lang.String...)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, Class<R>, Function<T, R>)","u":"of(java.lang.String,smile.data.formula.Term,java.lang.Class,java.util.function.Function)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, Term, Class<R>, BiFunction<T, U, R>)","u":"of(java.lang.String,smile.data.formula.Term,smile.data.formula.Term,java.lang.Class,java.util.function.BiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, Term, ToDoubleBiFunction<T, U>)","u":"of(java.lang.String,smile.data.formula.Term,smile.data.formula.Term,java.util.function.ToDoubleBiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, Term, ToIntBiFunction<T, U>)","u":"of(java.lang.String,smile.data.formula.Term,smile.data.formula.Term,java.util.function.ToIntBiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, Term, ToLongBiFunction<T, U>)","u":"of(java.lang.String,smile.data.formula.Term,smile.data.formula.Term,java.util.function.ToLongBiFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, ToDoubleFunction<T>)","u":"of(java.lang.String,smile.data.formula.Term,java.util.function.ToDoubleFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, ToIntFunction<T>)","u":"of(java.lang.String,smile.data.formula.Term,java.util.function.ToIntFunction)"},{"p":"smile.data.formula","c":"Terms","l":"of(String, Term, ToLongFunction<T>)","u":"of(java.lang.String,smile.data.formula.Term,java.util.function.ToLongFunction)"},{"p":"smile.data.formula","c":"Formula","l":"of(String, Term...)","u":"of(java.lang.String,smile.data.formula.Term...)"},{"p":"smile.plot.swing","c":"TextPlot","l":"of(String[], double[][])","u":"of(java.lang.String[],double[][])"},{"p":"smile.plot.swing","c":"Heatmap","l":"of(String[], String[], double[][])","u":"of(java.lang.String[],java.lang.String[],double[][])"},{"p":"smile.plot.swing","c":"Heatmap","l":"of(String[], String[], double[][], int)","u":"of(java.lang.String[],java.lang.String[],double[][],int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"of(StructField, boolean[])","u":"of(smile.data.type.StructField,boolean[])"},{"p":"smile.data.vector","c":"ByteVector","l":"of(StructField, byte[])","u":"of(smile.data.type.StructField,byte[])"},{"p":"smile.data.vector","c":"CharVector","l":"of(StructField, char[])","u":"of(smile.data.type.StructField,char[])"},{"p":"smile.data.vector","c":"DoubleVector","l":"of(StructField, double[])","u":"of(smile.data.type.StructField,double[])"},{"p":"smile.data.vector","c":"DoubleVector","l":"of(StructField, DoubleStream)","u":"of(smile.data.type.StructField,java.util.stream.DoubleStream)"},{"p":"smile.data.vector","c":"FloatVector","l":"of(StructField, float[])","u":"of(smile.data.type.StructField,float[])"},{"p":"smile.data.vector","c":"IntVector","l":"of(StructField, int[])","u":"of(smile.data.type.StructField,int[])"},{"p":"smile.data.vector","c":"IntVector","l":"of(StructField, IntStream)","u":"of(smile.data.type.StructField,java.util.stream.IntStream)"},{"p":"smile.data.vector","c":"LongVector","l":"of(StructField, long[])","u":"of(smile.data.type.StructField,long[])"},{"p":"smile.data.vector","c":"LongVector","l":"of(StructField, LongStream)","u":"of(smile.data.type.StructField,java.util.stream.LongStream)"},{"p":"smile.data.vector","c":"ShortVector","l":"of(StructField, short[])","u":"of(smile.data.type.StructField,short[])"},{"p":"smile.data.vector","c":"StringVector","l":"of(StructField, String...)","u":"of(smile.data.type.StructField,java.lang.String...)"},{"p":"smile.data.vector","c":"Vector","l":"of(StructField, T[])","u":"of(smile.data.type.StructField,T[])"},{"p":"smile.neighbor","c":"Neighbor","l":"of(T, int, double)","u":"of(T,int,double)"},{"p":"smile.clustering.linkage","c":"CompleteLinkage","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.clustering.linkage","c":"SingleLinkage","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.clustering.linkage","c":"UPGMALinkage","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.clustering.linkage","c":"UPGMCLinkage","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.clustering.linkage","c":"WardLinkage","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.clustering.linkage","c":"WPGMALinkage","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.clustering.linkage","c":"WPGMCLinkage","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.manifold","c":"UMAP","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.neighbor","c":"LinearSearch","l":"of(T[], Distance<T>)","u":"of(T[],smile.math.distance.Distance)"},{"p":"smile.manifold","c":"IsoMap","l":"of(T[], Distance<T>, int)","u":"of(T[],smile.math.distance.Distance,int)"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"of(T[], Distance<T>, int)","u":"of(T[],smile.math.distance.Distance,int)"},{"p":"smile.manifold","c":"UMAP","l":"of(T[], Distance<T>, int)","u":"of(T[],smile.math.distance.Distance,int)"},{"p":"smile.manifold","c":"IsoMap","l":"of(T[], Distance<T>, int, int, boolean)","u":"of(T[],smile.math.distance.Distance,int,int,boolean)"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"of(T[], Distance<T>, int, int, double)","u":"of(T[],smile.math.distance.Distance,int,int,double)"},{"p":"smile.manifold","c":"UMAP","l":"of(T[], Distance<T>, int, int, int, double, double, double, int, double)","u":"of(T[],smile.math.distance.Distance,int,int,int,double,double,double,int,double)"},{"p":"smile.validation","c":"RegressionValidation","l":"of(T[], double[], T[], double[], BiFunction<T[], double[], M>)","u":"of(T[],double[],T[],double[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"ClassificationValidation","l":"of(T[], int[], T[], int[], BiFunction<T[], int[], M>)","u":"of(T[],int[],T[],int[],java.util.function.BiFunction)"},{"p":"smile.neighbor","c":"BKTree","l":"of(T[], Metric<T>)","u":"of(T[],smile.math.distance.Metric)"},{"p":"smile.neighbor","c":"CoverTree","l":"of(T[], Metric<T>)","u":"of(T[],smile.math.distance.Metric)"},{"p":"smile.neighbor","c":"CoverTree","l":"of(T[], Metric<T>, double)","u":"of(T[],smile.math.distance.Metric,double)"},{"p":"smile.base.rbf","c":"RBF","l":"of(T[], RadialBasisFunction, Metric<T>)","u":"of(T[],smile.math.rbf.RadialBasisFunction,smile.math.distance.Metric)"},{"p":"smile.base.rbf","c":"RBF","l":"of(T[], RadialBasisFunction[], Metric<T>)","u":"of(T[],smile.math.rbf.RadialBasisFunction[],smile.math.distance.Metric)"},{"p":"smile.deep.tensor","c":"Index","l":"of(Tensor)","u":"of(smile.deep.tensor.Tensor)"},{"p":"smile.data.formula","c":"Formula","l":"of(Term, Term...)","u":"of(smile.data.formula.Term,smile.data.formula.Term...)"},{"p":"smile.math.kernel","c":"HyperbolicTangent","l":"offset()"},{"p":"smile.math.kernel","c":"Polynomial","l":"offset()"},{"p":"smile.plot.vega","c":"Axis","l":"offset(double)"},{"p":"smile.plot.vega","c":"Legend","l":"offset(double)"},{"p":"smile.plot.vega","c":"StackTransform","l":"offset(String)","u":"offset(java.lang.String)"},{"p":"smile.swing","c":"FontChooser","l":"OK_OPTION"},{"p":"smile.timeseries","c":"AR.Method","l":"OLS"},{"p":"smile.regression","c":"OLS","l":"OLS()","u":"%3Cinit%3E()"},{"p":"smile.timeseries","c":"AR","l":"ols(double[], int)","u":"ols(double[],int)"},{"p":"smile.timeseries","c":"AR","l":"ols(double[], int, boolean)","u":"ols(double[],int,boolean)"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"omega()"},{"p":"smile.math","c":"MathEx","l":"omit(double[], double)","u":"omit(double[],double)"},{"p":"smile.math","c":"MathEx","l":"omit(float[], float)","u":"omit(float[],float)"},{"p":"smile.math","c":"MathEx","l":"omit(int[], int)","u":"omit(int[],int)"},{"p":"smile.math","c":"MathEx","l":"omitNaN(double[])"},{"p":"smile.math","c":"MathEx","l":"omitNaN(float[])"},{"p":"smile.data","c":"DataFrame","l":"omitNullRows()"},{"p":"smile.data","c":"CategoricalEncoder","l":"ONE_HOT"},{"p":"smile.plot.vega","c":"Predicate","l":"oneOf(String, double...)","u":"oneOf(java.lang.String,double...)"},{"p":"smile.plot.vega","c":"Predicate","l":"oneOf(String, String...)","u":"oneOf(java.lang.String,java.lang.String...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"ones(long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"ones(Tensor.Options, long...)","u":"ones(smile.deep.tensor.Tensor.Options,long...)"},{"p":"smile.classification","c":"OneVersusOne","l":"OneVersusOne(Classifier<T>[][], PlattScaling[][])","u":"%3Cinit%3E(smile.classification.Classifier[][],smile.classification.PlattScaling[][])"},{"p":"smile.classification","c":"OneVersusOne","l":"OneVersusOne(Classifier<T>[][], PlattScaling[][], IntSet)","u":"%3Cinit%3E(smile.classification.Classifier[][],smile.classification.PlattScaling[][],smile.util.IntSet)"},{"p":"smile.classification","c":"OneVersusRest","l":"OneVersusRest(Classifier<T>[], PlattScaling[])","u":"%3Cinit%3E(smile.classification.Classifier[],smile.classification.PlattScaling[])"},{"p":"smile.classification","c":"OneVersusRest","l":"OneVersusRest(Classifier<T>[], PlattScaling[], IntSet)","u":"%3Cinit%3E(smile.classification.Classifier[],smile.classification.PlattScaling[],smile.util.IntSet)"},{"p":"smile.classification","c":"Classifier","l":"online()"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"online()"},{"p":"smile.classification","c":"LogisticRegression","l":"online()"},{"p":"smile.classification","c":"Maxent","l":"online()"},{"p":"smile.classification","c":"MLP","l":"online()"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"online()"},{"p":"smile.regression","c":"LinearModel","l":"online()"},{"p":"smile.regression","c":"MLP","l":"online()"},{"p":"smile.regression","c":"Regression","l":"online()"},{"p":"smile.validation","c":"Bag","l":"oob"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"op()"},{"p":"smile.plot.vega","c":"PivotTransform","l":"op(String)","u":"op(java.lang.String)"},{"p":"smile.plot.vega","c":"Background","l":"opacity(double)"},{"p":"smile.plot.vega","c":"Mark","l":"opacity(double)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"opacity(double)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"open"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"OpenBLAS()","u":"%3Cinit%3E()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"OPENING_PARENTHESIS"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"OPENING_QUOTATION"},{"p":"smile.data.formula","c":"Operator","l":"Operator(String, Term, Term)","u":"%3Cinit%3E(java.lang.String,smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.deep.tensor","c":"Tensor.Options","l":"Options()","u":"%3Cinit%3E()"},{"p":"smile.llm","c":"Transformer.Options","l":"Options(int)","u":"%3Cinit%3E(int)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"Options(int, int, int)","u":"%3Cinit%3E(int,int,int)"},{"p":"smile.llm","c":"Transformer.Options","l":"Options(int, int, int, int, int, int, double, String)","u":"%3Cinit%3E(int,int,int,int,int,int,double,java.lang.String)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"Options(int, int, int, int, int, int, int, IntFunction<Layer>, ActivationFunction)","u":"%3Cinit%3E(int,int,int,int,int,int,int,java.util.function.IntFunction,smile.deep.activation.ActivationFunction)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"Options(int, int, int, int, int, IntFunction<Layer>, ActivationFunction)","u":"%3Cinit%3E(int,int,int,int,int,java.util.function.IntFunction,smile.deep.activation.ActivationFunction)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"Options(int, int, int, int, IntFunction<Layer>, ActivationFunction)","u":"%3Cinit%3E(int,int,int,int,java.util.function.IntFunction,smile.deep.activation.ActivationFunction)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"Options(int, int, int, IntFunction<Layer>, ActivationFunction)","u":"%3Cinit%3E(int,int,int,java.util.function.IntFunction,smile.deep.activation.ActivationFunction)"},{"p":"smile.deep.tensor","c":"Tensor","l":"or_(Tensor)","u":"or_(smile.deep.tensor.Tensor)"},{"p":"smile.plot.vega","c":"Predicate","l":"or(Predicate...)","u":"or(smile.plot.vega.Predicate...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"or(Tensor)","u":"or(smile.deep.tensor.Tensor)"},{"p":"smile.plot.swing","c":"Palette","l":"ORANGE"},{"p":"smile.base.cart","c":"CART","l":"order"},{"p":"smile.plot.vega","c":"SortField","l":"order()"},{"p":"smile.plot.vega","c":"Mark","l":"order(boolean)"},{"p":"smile.base.cart","c":"CART","l":"order(DataFrame)","u":"order(smile.data.DataFrame)"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"order(int)"},{"p":"smile.sequence","c":"HMMLabeler","l":"ordinal"},{"p":"smile.util","c":"Strings","l":"ordinal(int)"},{"p":"smile.base.cart","c":"OrdinalNode","l":"OrdinalNode(int, double, double, double, Node, Node)","u":"%3Cinit%3E(int,double,double,double,smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.data.measure","c":"OrdinalScale","l":"OrdinalScale(Class<? extends Enum>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"smile.data.measure","c":"OrdinalScale","l":"OrdinalScale(int[], String[])","u":"%3Cinit%3E(int[],java.lang.String[])"},{"p":"smile.data.measure","c":"OrdinalScale","l":"OrdinalScale(List<String>)","u":"%3Cinit%3E(java.util.List)"},{"p":"smile.data.measure","c":"OrdinalScale","l":"OrdinalScale(String...)","u":"%3Cinit%3E(java.lang.String...)"},{"p":"smile.base.cart","c":"OrdinalSplit","l":"OrdinalSplit(LeafNode, int, double, double, int, int, int, int, IntPredicate)","u":"%3Cinit%3E(smile.base.cart.LeafNode,int,double,double,int,int,int,int,java.util.function.IntPredicate)"},{"p":"smile.math.blas","c":"LAPACK","l":"orgqr(Layout, int, int, int, double[], int, double[])","u":"orgqr(smile.math.blas.Layout,int,int,int,double[],int,double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"orgqr(Layout, int, int, int, double[], int, double[])","u":"orgqr(smile.math.blas.Layout,int,int,int,double[],int,double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"orgqr(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer)","u":"orgqr(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"orgqr(Layout, int, int, int, DoubleBuffer, int, DoubleBuffer)","u":"orgqr(smile.math.blas.Layout,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"orgqr(Layout, int, int, int, DoublePointer, int, DoublePointer)","u":"orgqr(smile.math.blas.Layout,int,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"orgqr(Layout, int, int, int, DoublePointer, int, DoublePointer)","u":"orgqr(smile.math.blas.Layout,int,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.blas","c":"LAPACK","l":"orgqr(Layout, int, int, int, float[], int, float[])","u":"orgqr(smile.math.blas.Layout,int,int,int,float[],int,float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"orgqr(Layout, int, int, int, float[], int, float[])","u":"orgqr(smile.math.blas.Layout,int,int,int,float[],int,float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"orgqr(Layout, int, int, int, FloatBuffer, int, FloatBuffer)","u":"orgqr(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"orgqr(Layout, int, int, int, FloatBuffer, int, FloatBuffer)","u":"orgqr(smile.math.blas.Layout,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.plot.vega","c":"Axis","l":"orient(String)","u":"orient(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"orient(String)","u":"orient(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"orient(String)","u":"orient(java.lang.String)"},{"p":"smile.math.blas","c":"LAPACK","l":"ormqr(Layout, Side, Transpose, int, int, int, double[], int, double[], double[], int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,double[],int,double[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ormqr(Layout, Side, Transpose, int, int, int, double[], int, double[], double[], int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,double[],int,double[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"ormqr(Layout, Side, Transpose, int, int, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ormqr(Layout, Side, Transpose, int, int, int, DoubleBuffer, int, DoubleBuffer, DoubleBuffer, int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"ormqr(Layout, Side, Transpose, int, int, int, DoublePointer, int, DoublePointer, DoublePointer, int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ormqr(Layout, Side, Transpose, int, int, int, DoublePointer, int, DoublePointer, DoublePointer, int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"ormqr(Layout, Side, Transpose, int, int, int, float[], int, float[], float[], int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,float[],int,float[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ormqr(Layout, Side, Transpose, int, int, int, float[], int, float[], float[], int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,float[],int,float[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"ormqr(Layout, Side, Transpose, int, int, int, FloatBuffer, int, FloatBuffer, FloatBuffer, int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ormqr(Layout, Side, Transpose, int, int, int, FloatBuffer, int, FloatBuffer, FloatBuffer, int)","u":"ormqr(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.Transpose,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"out()"},{"p":"smile.plot.vega","c":"Mark","l":"outerRadius(double)"},{"p":"smile.clustering","c":"PartitionClustering","l":"OUTLIER"},{"p":"smile.vq","c":"VectorQuantizer","l":"OUTLIER"},{"p":"smile.base.mlp","c":"Layer","l":"output"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"output"},{"p":"smile.base.cart","c":"DecisionNode","l":"output()"},{"p":"smile.base.cart","c":"RegressionNode","l":"output()"},{"p":"smile.base.mlp","c":"Layer","l":"output()"},{"p":"smile.base.cart","c":"Loss","l":"output(int[], int[])","u":"output(int[],int[])"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"outputChannels()"},{"p":"smile.base.mlp","c":"Layer","l":"outputGradient"},{"p":"smile.base.mlp","c":"OutputLayer","l":"OutputLayer(int, int, OutputFunction, Cost)","u":"%3Cinit%3E(int,int,smile.base.mlp.OutputFunction,smile.base.mlp.Cost)"},{"p":"smile.base.mlp","c":"OutputLayerBuilder","l":"OutputLayerBuilder(int, OutputFunction, Cost)","u":"%3Cinit%3E(int,smile.base.mlp.OutputFunction,smile.base.mlp.Cost)"},{"p":"smile.math.blas","c":"SVDJob","l":"OVERWRITE"},{"p":"smile.base.mlp","c":"Layer","l":"p"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"p"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"p"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"p"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"p"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"p"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"p"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"p"},{"p":"smile.stat","c":"GoodTuring","l":"p"},{"p":"smile.timeseries","c":"AR","l":"p()"},{"p":"smile.timeseries","c":"ARMA","l":"p()"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"FDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"p(double)"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"Mixture","l":"p(double)"},{"p":"smile.stat.distribution","c":"TDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"p(double)"},{"p":"smile.stat.distribution","c":"MultivariateDistribution","l":"p(double[])"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"p(double[])"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"p(double[])"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"p(int)"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"p(int)"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"p(int)"},{"p":"smile.sequence","c":"HMM","l":"p(int[])"},{"p":"smile.sequence","c":"HMM","l":"p(int[], int[])","u":"p(int[],int[])"},{"p":"smile.sequence","c":"HMMLabeler","l":"p(T[])"},{"p":"smile.sequence","c":"HMMLabeler","l":"p(T[], int[])","u":"p(T[],int[])"},{"p":"smile.stat","c":"GoodTuring","l":"p0"},{"p":"smile.timeseries","c":"TimeSeries","l":"pacf(double[], int)","u":"pacf(double[],int)"},{"p":"smile.plot.vega","c":"Mark","l":"padAngle(double)"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"padding()"},{"p":"smile.plot.vega","c":"Legend","l":"padding(double)"},{"p":"smile.plot.vega","c":"Concat","l":"padding(int)"},{"p":"smile.plot.vega","c":"Config","l":"padding(int)"},{"p":"smile.plot.vega","c":"Facet","l":"padding(int)"},{"p":"smile.plot.vega","c":"Repeat","l":"padding(int)"},{"p":"smile.plot.vega","c":"VegaLite","l":"padding(int)"},{"p":"smile.plot.vega","c":"View","l":"padding(int)"},{"p":"smile.plot.vega","c":"Concat","l":"padding(int, int, int, int)","u":"padding(int,int,int,int)"},{"p":"smile.plot.vega","c":"Config","l":"padding(int, int, int, int)","u":"padding(int,int,int,int)"},{"p":"smile.plot.vega","c":"Facet","l":"padding(int, int, int, int)","u":"padding(int,int,int,int)"},{"p":"smile.plot.vega","c":"Repeat","l":"padding(int, int, int, int)","u":"padding(int,int,int,int)"},{"p":"smile.plot.vega","c":"VegaLite","l":"padding(int, int, int, int)","u":"padding(int,int,int,int)"},{"p":"smile.plot.vega","c":"View","l":"padding(int, int, int, int)","u":"padding(int,int,int,int)"},{"p":"smile.swing.table","c":"PageTableModel","l":"pageDown()"},{"p":"smile.swing.table","c":"PageTableModel","l":"PageTableModel()","u":"%3Cinit%3E()"},{"p":"smile.swing.table","c":"PageTableModel","l":"PageTableModel(int)","u":"%3Cinit%3E(int)"},{"p":"smile.swing.table","c":"PageTableModel","l":"pageUp()"},{"p":"smile.plot.swing","c":"Axis","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Bar","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"BarPlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"BoxPlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Contour","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Dendrogram","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Grid","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Heatmap","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Hexmap","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Histogram3D","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Isoline","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Label","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Line","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"LinePlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Point","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"QQPlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"ScreePlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Shape","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Staircase","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Surface","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"TextPlot","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Wireframe","l":"paint(Graphics)","u":"paint(smile.plot.swing.Graphics)"},{"p":"smile.plot.swing","c":"Canvas","l":"paint(Graphics2D, int, int)","u":"paint(java.awt.Graphics2D,int,int)"},{"p":"smile.swing","c":"AlphaIcon","l":"paintIcon(Component, Graphics, int, int)","u":"paintIcon(java.awt.Component,java.awt.Graphics,int,int)"},{"p":"smile.plot.swing","c":"Canvas","l":"panel()"},{"p":"smile.plot.vega","c":"Projection","l":"parallels(double...)"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"param()"},{"p":"smile.math","c":"LevenbergMarquardt","l":"parameters"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"params(boolean)"},{"p":"smile.io","c":"Read","l":"parquet(Path)","u":"parquet(java.nio.file.Path)"},{"p":"smile.io","c":"Read","l":"parquet(String)","u":"parquet(java.lang.String)"},{"p":"smile.data","c":"SQL","l":"parquet(String, Map<String, String>, String...)","u":"parquet(java.lang.String,java.util.Map,java.lang.String...)"},{"p":"smile.data","c":"SQL","l":"parquet(String, String...)","u":"parquet(java.lang.String,java.lang.String...)"},{"p":"smile.util","c":"Strings","l":"parseDoubleArray(String)","u":"parseDoubleArray(java.lang.String)"},{"p":"smile.util","c":"Strings","l":"parseIntArray(String)","u":"parseIntArray(java.lang.String)"},{"p":"smile.data.type","c":"StructType","l":"parser()"},{"p":"smile.clustering","c":"HierarchicalClustering","l":"partition(double)"},{"p":"smile.clustering","c":"HierarchicalClustering","l":"partition(int)"},{"p":"smile.clustering","c":"PartitionClustering","l":"PartitionClustering(int, int[])","u":"%3Cinit%3E(int,int[])"},{"p":"smile.plot.swing","c":"Palette","l":"PASTEL_GREEN"},{"p":"smile.anomaly","c":"IsolationTree","l":"path(double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrf(Layout, UPLO, int, int, double[], int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrf(Layout, UPLO, int, int, double[], int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrf(Layout, UPLO, int, int, DoubleBuffer, int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrf(Layout, UPLO, int, int, DoubleBuffer, int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrf(Layout, UPLO, int, int, float[], int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrf(Layout, UPLO, int, int, float[], int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrf(Layout, UPLO, int, int, FloatBuffer, int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrf(Layout, UPLO, int, int, FloatBuffer, int)","u":"pbtrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrs(Layout, UPLO, int, int, int, double[], int, double[], int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrs(Layout, UPLO, int, int, int, double[], int, double[], int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrs(Layout, UPLO, int, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrs(Layout, UPLO, int, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrs(Layout, UPLO, int, int, int, float[], int, float[], int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrs(Layout, UPLO, int, int, int, float[], int, float[], int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,float[],int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pbtrs(Layout, UPLO, int, int, int, FloatBuffer, int, FloatBuffer, int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pbtrs(Layout, UPLO, int, int, int, FloatBuffer, int, FloatBuffer, int)","u":"pbtrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.feature.extraction","c":"PCA","l":"PCA(double[], double[], Matrix, Matrix, String...)","u":"%3Cinit%3E(double[],double[],smile.math.matrix.Matrix,smile.math.matrix.Matrix,java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"pdist(double[][])"},{"p":"smile.math","c":"MathEx","l":"pdist(double[][], boolean)","u":"pdist(double[][],boolean)"},{"p":"smile.math","c":"MathEx","l":"pdist(float[][])"},{"p":"smile.math","c":"MathEx","l":"pdist(float[][], boolean)","u":"pdist(float[][],boolean)"},{"p":"smile.math","c":"MathEx","l":"pdist(int[][])"},{"p":"smile.math","c":"MathEx","l":"pdist(int[][], boolean)","u":"pdist(int[][],boolean)"},{"p":"smile.math","c":"MathEx","l":"pdist(SparseArray[])","u":"pdist(smile.util.SparseArray[])"},{"p":"smile.math","c":"MathEx","l":"pdist(SparseArray[], boolean)","u":"pdist(smile.util.SparseArray[],boolean)"},{"p":"smile.math","c":"MathEx","l":"pdist(T[], double[][], Distance<T>)","u":"pdist(T[],double[][],smile.math.distance.Distance)"},{"p":"smile.math","c":"MathEx","l":"pdot(double[][])"},{"p":"smile.math","c":"MathEx","l":"pdot(float[][])"},{"p":"smile.math","c":"MathEx","l":"pdot(int[][])"},{"p":"smile.math","c":"MathEx","l":"pdot(SparseArray[])","u":"pdot(smile.util.SparseArray[])"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"PDT"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"pearson(double[], double[])","u":"pearson(double[],double[])"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"PearsonKernel(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"PearsonKernel(double, double, double, double)","u":"%3Cinit%3E(double,double,double,double)"},{"p":"smile.sort","c":"DoubleHeapSelect","l":"peek()"},{"p":"smile.sort","c":"FloatHeapSelect","l":"peek()"},{"p":"smile.sort","c":"HeapSelect","l":"peek()"},{"p":"smile.sort","c":"IntHeapSelect","l":"peek()"},{"p":"smile.data.measure","c":"Measure","l":"Percent"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"PERCENT"},{"p":"smile.hash","c":"PerfectHash","l":"PerfectHash(int[], String...)","u":"%3Cinit%3E(int[],java.lang.String...)"},{"p":"smile.hash","c":"PerfectHash","l":"PerfectHash(String...)","u":"%3Cinit%3E(java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"permutate(double[])"},{"p":"smile.math","c":"Random","l":"permutate(double[])"},{"p":"smile.math","c":"MathEx","l":"permutate(float[])"},{"p":"smile.math","c":"Random","l":"permutate(float[])"},{"p":"smile.math","c":"MathEx","l":"permutate(int)"},{"p":"smile.math","c":"Random","l":"permutate(int)"},{"p":"smile.math","c":"MathEx","l":"permutate(int[])"},{"p":"smile.math","c":"Random","l":"permutate(int[])"},{"p":"smile.math","c":"MathEx","l":"permutate(Object[])","u":"permutate(java.lang.Object[])"},{"p":"smile.math","c":"Random","l":"permutate(Object[])","u":"permutate(java.lang.Object[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"permute(long...)"},{"p":"smile.math","c":"Complex","l":"phase()"},{"p":"smile.util","c":"Regex","l":"PHONE_NUMBER"},{"p":"smile.util","c":"Regex","l":"PHONE_NUMBER_EXTENSION"},{"p":"smile.math","c":"TimeFunction","l":"piecewise(int[], double[])","u":"piecewise(int[],double[])"},{"p":"smile.math","c":"TimeFunction","l":"piecewise(int[], TimeFunction...)","u":"piecewise(int[],smile.math.TimeFunction...)"},{"p":"smile.timeseries","c":"BoxTest","l":"pierce(double[], int)","u":"pierce(double[],int)"},{"p":"smile.plot.swing","c":"Palette","l":"PINK"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"pinv()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"pinv()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"pinv()"},{"p":"smile.data.transform","c":"Transform","l":"pipeline(Transform...)","u":"pipeline(smile.data.transform.Transform...)"},{"p":"smile.plot.vega","c":"Transform","l":"pivot(String, String)","u":"pivot(java.lang.String,java.lang.String)"},{"p":"smile.classification","c":"PlattScaling","l":"PlattScaling(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.plot.swing","c":"Plot","l":"Plot()","u":"%3Cinit%3E()"},{"p":"smile.plot.swing","c":"Plot","l":"Plot(Color)","u":"%3Cinit%3E(java.awt.Color)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"PlotGrid(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"PlotGrid(PlotPanel...)","u":"%3Cinit%3E(smile.plot.swing.PlotPanel...)"},{"p":"smile.plot.swing","c":"PlotPanel","l":"PlotPanel(Canvas)","u":"%3Cinit%3E(smile.plot.swing.Canvas)"},{"p":"smile.plot.swing","c":"Palette","l":"PLUM"},{"p":"smile.plot.vega","c":"Mark","l":"point(boolean)"},{"p":"smile.plot.swing","c":"Point","l":"Point(double[][], char, Color)","u":"%3Cinit%3E(double[][],char,java.awt.Color)"},{"p":"smile.plot.vega","c":"Projection","l":"pointRadius(double)"},{"p":"smile.neighbor.lsh","c":"Bucket","l":"points()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"PoissonDistribution(double)","u":"%3Cinit%3E(double)"},{"p":"smile.util","c":"PriorityQueue","l":"poll()"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"POLYAURN"},{"p":"smile.math","c":"TimeFunction","l":"polynomial(double, double, double, double)","u":"polynomial(double,double,double,double)"},{"p":"smile.math","c":"TimeFunction","l":"polynomial(double, double, double, double, boolean)","u":"polynomial(double,double,double,double,boolean)"},{"p":"smile.math.kernel","c":"Polynomial","l":"Polynomial(int, double, double, double[], double[])","u":"%3Cinit%3E(int,double,double,double[],double[])"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"PolynomialKernel(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"PolynomialKernel(int, double, double)","u":"%3Cinit%3E(int,double,double)"},{"p":"smile.math.kernel","c":"PolynomialKernel","l":"PolynomialKernel(int, double, double, double[], double[])","u":"%3Cinit%3E(int,double,double,double[],double[])"},{"p":"smile.gap","c":"GeneticAlgorithm","l":"population()"},{"p":"smile.nlp.stemmer","c":"PorterStemmer","l":"PorterStemmer()","u":"%3Cinit%3E()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"POS"},{"p":"smile.plot.vega","c":"Axis","l":"position(double)"},{"p":"smile.llm","c":"PositionalEncoding","l":"PositionalEncoding(int)","u":"%3Cinit%3E(int)"},{"p":"smile.llm","c":"PositionalEncoding","l":"PositionalEncoding(int, double, int)","u":"%3Cinit%3E(int,double,int)"},{"p":"smile.validation","c":"ClassificationValidation","l":"posteriori"},{"p":"smile.stat.distribution","c":"Mixture","l":"posteriori(double)"},{"p":"smile.base.cart","c":"DecisionNode","l":"posteriori(double[])"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"posteriori(double[])"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"posteriori(int)"},{"p":"smile.base.cart","c":"DecisionNode","l":"posteriori(int[], double[])","u":"posteriori(int[],double[])"},{"p":"smile.neighbor.lsh","c":"PosterioriModel","l":"PosterioriModel(MultiProbeHash, MultiProbeSample[], int, double)","u":"%3Cinit%3E(smile.neighbor.lsh.MultiProbeHash,smile.neighbor.lsh.MultiProbeSample[],int,double)"},{"p":"smile.feature.extraction","c":"PCA","l":"postprocess(double[])"},{"p":"smile.feature.extraction","c":"ProbabilisticPCA","l":"postprocess(double[])"},{"p":"smile.feature.extraction","c":"Projection","l":"postprocess(double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"posv(Layout, UPLO, int, int, double[], int, double[], int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"posv(Layout, UPLO, int, int, double[], int, double[], int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"posv(Layout, UPLO, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"posv(Layout, UPLO, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"posv(Layout, UPLO, int, int, float[], int, float[], int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"posv(Layout, UPLO, int, int, float[], int, float[], int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"posv(Layout, UPLO, int, int, FloatBuffer, int, FloatBuffer, int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"posv(Layout, UPLO, int, int, FloatBuffer, int, FloatBuffer, int)","u":"posv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf(Layout, UPLO, int, double[], int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf(Layout, UPLO, int, double[], int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf(Layout, UPLO, int, DoubleBuffer, int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf(Layout, UPLO, int, DoubleBuffer, int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf(Layout, UPLO, int, DoublePointer, int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf(Layout, UPLO, int, DoublePointer, int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf(Layout, UPLO, int, float[], int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf(Layout, UPLO, int, float[], int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf(Layout, UPLO, int, FloatBuffer, int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf(Layout, UPLO, int, FloatBuffer, int)","u":"potrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf2(Layout, UPLO, int, double[], int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf2(Layout, UPLO, int, double[], int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf2(Layout, UPLO, int, DoubleBuffer, int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf2(Layout, UPLO, int, DoubleBuffer, int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf2(Layout, UPLO, int, float[], int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf2(Layout, UPLO, int, float[], int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrf2(Layout, UPLO, int, FloatBuffer, int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrf2(Layout, UPLO, int, FloatBuffer, int)","u":"potrf2(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrs(Layout, UPLO, int, int, double[], int, double[], int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrs(Layout, UPLO, int, int, double[], int, double[], int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrs(Layout, UPLO, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrs(Layout, UPLO, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrs(Layout, UPLO, int, int, DoublePointer, int, DoublePointer, int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrs(Layout, UPLO, int, int, DoublePointer, int, DoublePointer, int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrs(Layout, UPLO, int, int, float[], int, float[], int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrs(Layout, UPLO, int, int, float[], int, float[], int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"potrs(Layout, UPLO, int, int, FloatBuffer, int, FloatBuffer, int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"potrs(Layout, UPLO, int, int, FloatBuffer, int, FloatBuffer, int)","u":"potrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"POUND"},{"p":"smile.math","c":"MathEx","l":"pow(double[], double)","u":"pow(double[],double)"},{"p":"smile.math","c":"MathEx","l":"pow2(double)"},{"p":"smile.interpolation.variogram","c":"PowerVariogram","l":"PowerVariogram(double[][], double[])","u":"%3Cinit%3E(double[][],double[])"},{"p":"smile.interpolation.variogram","c":"PowerVariogram","l":"PowerVariogram(double[][], double[], double)","u":"%3Cinit%3E(double[][],double[],double)"},{"p":"smile.interpolation.variogram","c":"PowerVariogram","l":"PowerVariogram(double[][], double[], double, double)","u":"%3Cinit%3E(double[][],double[],double,double)"},{"p":"smile.math.blas","c":"LAPACK","l":"ppsv(Layout, UPLO, int, int, double[], double[], int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ppsv(Layout, UPLO, int, int, double[], double[], int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"ppsv(Layout, UPLO, int, int, DoubleBuffer, DoubleBuffer, int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ppsv(Layout, UPLO, int, int, DoubleBuffer, DoubleBuffer, int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"ppsv(Layout, UPLO, int, int, float[], float[], int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ppsv(Layout, UPLO, int, int, float[], float[], int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"ppsv(Layout, UPLO, int, int, FloatBuffer, FloatBuffer, int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"ppsv(Layout, UPLO, int, int, FloatBuffer, FloatBuffer, int)","u":"ppsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrf(Layout, UPLO, int, double[])","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrf(Layout, UPLO, int, double[])","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrf(Layout, UPLO, int, DoubleBuffer)","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrf(Layout, UPLO, int, DoubleBuffer)","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrf(Layout, UPLO, int, float[])","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrf(Layout, UPLO, int, float[])","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrf(Layout, UPLO, int, FloatBuffer)","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrf(Layout, UPLO, int, FloatBuffer)","u":"pptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrs(Layout, UPLO, int, int, double[], double[], int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrs(Layout, UPLO, int, int, double[], double[], int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrs(Layout, UPLO, int, int, DoubleBuffer, DoubleBuffer, int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrs(Layout, UPLO, int, int, DoubleBuffer, DoubleBuffer, int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrs(Layout, UPLO, int, int, float[], float[], int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrs(Layout, UPLO, int, int, float[], float[], int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"pptrs(Layout, UPLO, int, int, FloatBuffer, FloatBuffer, int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"pptrs(Layout, UPLO, int, int, FloatBuffer, FloatBuffer, int)","u":"pptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.neighbor.lsh","c":"PrH","l":"pr"},{"p":"smile.validation","c":"ClassificationMetrics","l":"precision"},{"p":"smile.deep.metric","c":"Precision","l":"Precision()","u":"%3Cinit%3E()"},{"p":"smile.validation.metric","c":"Precision","l":"Precision()","u":"%3Cinit%3E()"},{"p":"smile.deep.metric","c":"Precision","l":"Precision(Averaging)","u":"%3Cinit%3E(smile.deep.metric.Averaging)"},{"p":"smile.plot.vega","c":"Projection","l":"precision(double)"},{"p":"smile.deep.metric","c":"Precision","l":"Precision(double)","u":"%3Cinit%3E(double)"},{"p":"smile.base.cart","c":"NominalSplit","l":"predicate()"},{"p":"smile.base.cart","c":"OrdinalSplit","l":"predicate()"},{"p":"smile.base.cart","c":"Split","l":"predicate()"},{"p":"smile.plot.vega","c":"Predicate","l":"Predicate(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.plot.vega","c":"Predicate","l":"Predicate(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"smile.classification","c":"DataFrameClassifier","l":"predict(DataFrame)","u":"predict(smile.data.DataFrame)"},{"p":"smile.glm","c":"GLM","l":"predict(DataFrame)","u":"predict(smile.data.DataFrame)"},{"p":"smile.regression","c":"DataFrameRegression","l":"predict(DataFrame)","u":"predict(smile.data.DataFrame)"},{"p":"smile.regression","c":"LinearModel","l":"predict(DataFrame)","u":"predict(smile.data.DataFrame)"},{"p":"smile.classification","c":"DataFrameClassifier","l":"predict(DataFrame, List<double[]>)","u":"predict(smile.data.DataFrame,java.util.List)"},{"p":"smile.classification","c":"Classifier","l":"predict(Dataset<T, ?>)","u":"predict(smile.data.Dataset)"},{"p":"smile.regression","c":"Regression","l":"predict(Dataset<T, ?>)","u":"predict(smile.data.Dataset)"},{"p":"smile.classification","c":"Classifier","l":"predict(Dataset<T, ?>, List<double[]>)","u":"predict(smile.data.Dataset,java.util.List)"},{"p":"smile.classification","c":"IsotonicRegressionScaling","l":"predict(double)"},{"p":"smile.classification","c":"FLD","l":"predict(double[])"},{"p":"smile.classification","c":"LDA","l":"predict(double[])"},{"p":"smile.classification","c":"LogisticRegression.Binomial","l":"predict(double[])"},{"p":"smile.classification","c":"LogisticRegression.Multinomial","l":"predict(double[])"},{"p":"smile.classification","c":"MLP","l":"predict(double[])"},{"p":"smile.classification","c":"NaiveBayes","l":"predict(double[])"},{"p":"smile.classification","c":"QDA","l":"predict(double[])"},{"p":"smile.clustering","c":"DENCLUE","l":"predict(double[])"},{"p":"smile.regression","c":"LinearModel","l":"predict(double[])"},{"p":"smile.regression","c":"MLP","l":"predict(double[])"},{"p":"smile.classification","c":"LDA","l":"predict(double[], double[])","u":"predict(double[],double[])"},{"p":"smile.classification","c":"LogisticRegression.Binomial","l":"predict(double[], double[])","u":"predict(double[],double[])"},{"p":"smile.classification","c":"LogisticRegression.Multinomial","l":"predict(double[], double[])","u":"predict(double[],double[])"},{"p":"smile.classification","c":"MLP","l":"predict(double[], double[])","u":"predict(double[],double[])"},{"p":"smile.classification","c":"NaiveBayes","l":"predict(double[], double[])","u":"predict(double[],double[])"},{"p":"smile.classification","c":"QDA","l":"predict(double[], double[])","u":"predict(double[],double[])"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"predict(int[])"},{"p":"smile.classification","c":"Maxent.Binomial","l":"predict(int[])"},{"p":"smile.classification","c":"Maxent.Multinomial","l":"predict(int[])"},{"p":"smile.sequence","c":"HMM","l":"predict(int[])"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"predict(int[], double[])","u":"predict(int[],double[])"},{"p":"smile.classification","c":"Maxent.Binomial","l":"predict(int[], double[])","u":"predict(int[],double[])"},{"p":"smile.classification","c":"Maxent.Multinomial","l":"predict(int[], double[])","u":"predict(int[],double[])"},{"p":"smile.classification","c":"Classifier","l":"predict(List<T>)","u":"predict(java.util.List)"},{"p":"smile.regression","c":"Regression","l":"predict(List<T>)","u":"predict(java.util.List)"},{"p":"smile.classification","c":"Classifier","l":"predict(List<T>, List<double[]>)","u":"predict(java.util.List,java.util.List)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"predict(SparseArray)","u":"predict(smile.util.SparseArray)"},{"p":"smile.classification","c":"SparseLogisticRegression.Binomial","l":"predict(SparseArray)","u":"predict(smile.util.SparseArray)"},{"p":"smile.classification","c":"SparseLogisticRegression.Multinomial","l":"predict(SparseArray)","u":"predict(smile.util.SparseArray)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"predict(SparseArray, double[])","u":"predict(smile.util.SparseArray,double[])"},{"p":"smile.classification","c":"SparseLogisticRegression.Binomial","l":"predict(SparseArray, double[])","u":"predict(smile.util.SparseArray,double[])"},{"p":"smile.classification","c":"SparseLogisticRegression.Multinomial","l":"predict(SparseArray, double[])","u":"predict(smile.util.SparseArray,double[])"},{"p":"smile.classification","c":"Classifier","l":"predict(T)"},{"p":"smile.classification","c":"KNN","l":"predict(T)"},{"p":"smile.classification","c":"OneVersusOne","l":"predict(T)"},{"p":"smile.classification","c":"OneVersusRest","l":"predict(T)"},{"p":"smile.classification","c":"RBFNetwork","l":"predict(T)"},{"p":"smile.classification","c":"SVM","l":"predict(T)"},{"p":"smile.clustering","c":"DBSCAN","l":"predict(T)"},{"p":"smile.clustering","c":"MEC","l":"predict(T)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"predict(T)"},{"p":"smile.regression","c":"KernelMachine","l":"predict(T)"},{"p":"smile.regression","c":"RBFNetwork","l":"predict(T)"},{"p":"smile.regression","c":"Regression","l":"predict(T)"},{"p":"smile.classification","c":"Classifier","l":"predict(T, double[])","u":"predict(T,double[])"},{"p":"smile.classification","c":"KNN","l":"predict(T, double[])","u":"predict(T,double[])"},{"p":"smile.classification","c":"OneVersusOne","l":"predict(T, double[])","u":"predict(T,double[])"},{"p":"smile.classification","c":"OneVersusRest","l":"predict(T, double[])","u":"predict(T,double[])"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"predict(T, double[])","u":"predict(T,double[])"},{"p":"smile.classification","c":"Classifier","l":"predict(T[])"},{"p":"smile.regression","c":"Regression","l":"predict(T[])"},{"p":"smile.sequence","c":"CRFLabeler","l":"predict(T[])"},{"p":"smile.sequence","c":"HMMLabeler","l":"predict(T[])"},{"p":"smile.sequence","c":"SequenceLabeler","l":"predict(T[])"},{"p":"smile.classification","c":"Classifier","l":"predict(T[], double[][])","u":"predict(T[],double[][])"},{"p":"smile.base.cart","c":"InternalNode","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.base.cart","c":"LeafNode","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.base.cart","c":"Node","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.base.cart","c":"NominalNode","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.base.cart","c":"OrdinalNode","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.classification","c":"AdaBoost","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.classification","c":"DecisionTree","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.classification","c":"RandomForest","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.glm","c":"GLM","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.regression","c":"GradientTreeBoost","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.regression","c":"LinearModel","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.regression","c":"RandomForest","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.regression","c":"RegressionTree","l":"predict(Tuple)","u":"predict(smile.data.Tuple)"},{"p":"smile.classification","c":"AdaBoost","l":"predict(Tuple, double[])","u":"predict(smile.data.Tuple,double[])"},{"p":"smile.classification","c":"DecisionTree","l":"predict(Tuple, double[])","u":"predict(smile.data.Tuple,double[])"},{"p":"smile.classification","c":"GradientTreeBoost","l":"predict(Tuple, double[])","u":"predict(smile.data.Tuple,double[])"},{"p":"smile.classification","c":"RandomForest","l":"predict(Tuple, double[])","u":"predict(smile.data.Tuple,double[])"},{"p":"smile.sequence","c":"CRF","l":"predict(Tuple[])","u":"predict(smile.data.Tuple[])"},{"p":"smile.clustering","c":"CentroidClustering","l":"predict(U)"},{"p":"smile.validation","c":"ClassificationValidation","l":"prediction"},{"p":"smile.validation","c":"RegressionValidation","l":"prediction"},{"p":"smile.data.formula","c":"Formula","l":"predictors()"},{"p":"smile.base.cart","c":"CART","l":"predictors(Tuple)","u":"predictors(smile.data.Tuple)"},{"p":"smile.deep.tensor","c":"Device","l":"preferredDevice()"},{"p":"smile.feature.extraction","c":"Projection","l":"preprocess(double[])"},{"p":"smile.neighbor.lsh","c":"PrZ","l":"prh"},{"p":"smile.neighbor.lsh","c":"PrH","l":"PrH(int, double)","u":"%3Cinit%3E(int,double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"print()"},{"p":"smile.plot.swing","c":"PlotGrid","l":"print()"},{"p":"smile.plot.swing","c":"PlotPanel","l":"print()"},{"p":"smile.plot.swing","c":"PlotGrid","l":"print(Graphics, PageFormat, int)","u":"print(java.awt.Graphics,java.awt.print.PageFormat,int)"},{"p":"smile.swing","c":"Printer","l":"print(Printable)","u":"print(java.awt.print.Printable)"},{"p":"smile.classification","c":"ClassLabels","l":"priori"},{"p":"smile.stat.distribution","c":"DiscreteMixture.Component","l":"priori"},{"p":"smile.stat.distribution","c":"Mixture.Component","l":"priori"},{"p":"smile.stat.distribution","c":"MultivariateMixture.Component","l":"priori"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"priori()"},{"p":"smile.classification","c":"LDA","l":"priori()"},{"p":"smile.classification","c":"NaiveBayes","l":"priori()"},{"p":"smile.classification","c":"QDA","l":"priori()"},{"p":"smile.util","c":"PriorityQueue","l":"PriorityQueue(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.util","c":"PriorityQueue","l":"PriorityQueue(int, double[])","u":"%3Cinit%3E(int,double[])"},{"p":"smile.feature.extraction","c":"ProbabilisticPCA","l":"ProbabilisticPCA(double, double[], Matrix, Matrix, String...)","u":"%3Cinit%3E(double,double[],smile.math.matrix.Matrix,smile.math.matrix.Matrix,java.lang.String...)"},{"p":"smile.math","c":"MathEx","l":"probablePrime(long, int)","u":"probablePrime(long,int)"},{"p":"smile.neighbor.lsh","c":"Probe","l":"Probe(int[])","u":"%3Cinit%3E(int[])"},{"p":"smile.plot.vega","c":"QuantileTransform","l":"probs(double[])"},{"p":"smile.math.kernel","c":"ProductKernel","l":"ProductKernel(MercerKernel<T>, MercerKernel<T>)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,smile.math.kernel.MercerKernel)"},{"p":"smile.classification","c":"FLD","l":"project(double[])"},{"p":"smile.classification","c":"FLD","l":"project(double[][])"},{"p":"smile.feature.extraction","c":"Projection","l":"projection"},{"p":"smile.manifold","c":"KPCA","l":"projection()"},{"p":"smile.feature.extraction","c":"Projection","l":"Projection(Matrix, String, String...)","u":"%3Cinit%3E(smile.math.matrix.Matrix,java.lang.String,java.lang.String...)"},{"p":"smile.plot.vega","c":"View","l":"projection(String)","u":"projection(java.lang.String)"},{"p":"smile.data.type","c":"DataType","l":"prompt(DataType, DataType)","u":"prompt(smile.data.type.DataType,smile.data.type.DataType)"},{"p":"smile.base.mlp","c":"InputLayer","l":"propagate(double[])"},{"p":"smile.base.mlp","c":"Layer","l":"propagate(double[])"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"propagate(double[], boolean)","u":"propagate(double[],boolean)"},{"p":"smile.base.mlp","c":"Layer","l":"propagateDropout()"},{"p":"smile.swing","c":"Table.RowHeader","l":"propertyChange(PropertyChangeEvent)","u":"propertyChange(java.beans.PropertyChangeEvent)"},{"p":"smile.manifold","c":"MDS","l":"proportion"},{"p":"smile.clustering.linkage","c":"Linkage","l":"proximity(double[][])"},{"p":"smile.clustering.linkage","c":"Linkage","l":"proximity(T[], Distance<T>)","u":"proximity(T[],smile.math.distance.Distance)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"PRP"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"PRP$"},{"p":"smile.classification","c":"DecisionTree","l":"prune(DataFrame)","u":"prune(smile.data.DataFrame)"},{"p":"smile.classification","c":"RandomForest","l":"prune(DataFrame)","u":"prune(smile.data.DataFrame)"},{"p":"smile.neighbor.lsh","c":"PrZ","l":"PrZ(int, PrH[])","u":"%3Cinit%3E(int,smile.neighbor.lsh.PrH[])"},{"p":"smile.plot.swing","c":"Palette","l":"PURPLE"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"pushRelabel(double[][], int, int)","u":"pushRelabel(double[][],int,int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(byte, int...)","u":"put_(byte,int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(byte, long...)","u":"put_(byte,long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(double, int...)","u":"put_(double,int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(double, long...)","u":"put_(double,long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(float, int...)","u":"put_(float,int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(float, long...)","u":"put_(float,long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(int, int...)","u":"put_(int,int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(int, long...)","u":"put_(int,long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(long, int...)","u":"put_(long,int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(long, long...)","u":"put_(long,long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(short, int...)","u":"put_(short,int...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(short, long...)","u":"put_(short,long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(Tensor, Index...)","u":"put_(smile.deep.tensor.Tensor,smile.deep.tensor.Index...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put_(Tensor, Tensor)","u":"put_(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.neighbor","c":"LSH","l":"put(double[], E)","u":"put(double[],E)"},{"p":"smile.neighbor","c":"MutableLSH","l":"put(double[], E)","u":"put(double[],E)"},{"p":"smile.util","c":"IntDoubleHashMap","l":"put(int, double)","u":"put(int,double)"},{"p":"smile.neighbor","c":"SNLSH","l":"put(K, V)","u":"put(K,V)"},{"p":"smile.nlp","c":"Trie","l":"put(K[], V)","u":"put(K[],V)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put(Tensor, Index...)","u":"put(smile.deep.tensor.Tensor,smile.deep.tensor.Index...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"put(Tensor, Tensor)","u":"put(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"pvalue"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"pvalue"},{"p":"smile.stat.hypothesis","c":"FTest","l":"pvalue"},{"p":"smile.stat.hypothesis","c":"KSTest","l":"pvalue"},{"p":"smile.stat.hypothesis","c":"TTest","l":"pvalue"},{"p":"smile.timeseries","c":"BoxTest","l":"pvalue"},{"p":"smile.regression","c":"LinearModel","l":"pvalue()"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"q"},{"p":"smile.timeseries","c":"BoxTest","l":"q"},{"p":"smile.timeseries","c":"ARMA","l":"q()"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"Q()"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"Q()"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"Q()"},{"p":"smile.math","c":"MathEx","l":"q1(double[])"},{"p":"smile.sort","c":"QuickSelect","l":"q1(double[])"},{"p":"smile.math","c":"MathEx","l":"q1(float[])"},{"p":"smile.sort","c":"QuickSelect","l":"q1(float[])"},{"p":"smile.math","c":"MathEx","l":"q1(int[])"},{"p":"smile.sort","c":"QuickSelect","l":"q1(int[])"},{"p":"smile.math","c":"MathEx","l":"q1(T[])"},{"p":"smile.sort","c":"QuickSelect","l":"q1(T[])"},{"p":"smile.math","c":"MathEx","l":"q3(double[])"},{"p":"smile.sort","c":"QuickSelect","l":"q3(double[])"},{"p":"smile.math","c":"MathEx","l":"q3(float[])"},{"p":"smile.sort","c":"QuickSelect","l":"q3(float[])"},{"p":"smile.math","c":"MathEx","l":"q3(int[])"},{"p":"smile.sort","c":"QuickSelect","l":"q3(int[])"},{"p":"smile.math","c":"MathEx","l":"q3(T[])"},{"p":"smile.sort","c":"QuickSelect","l":"q3(T[])"},{"p":"smile.classification","c":"QDA","l":"QDA(double[], double[][], double[][], Matrix[])","u":"%3Cinit%3E(double[],double[][],double[][],smile.math.matrix.Matrix[])"},{"p":"smile.classification","c":"QDA","l":"QDA(double[], double[][], double[][], Matrix[], IntSet)","u":"%3Cinit%3E(double[],double[][],double[][],smile.math.matrix.Matrix[],smile.util.IntSet)"},{"p":"smile.deep.tensor","c":"ScalarType","l":"QInt8"},{"p":"smile.plot.swing","c":"QQPlot","l":"QQPlot(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"qr"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"qr"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"qr"},{"p":"smile.math.matrix","c":"BigMatrix","l":"qr()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"qr()"},{"p":"smile.math.matrix","c":"Matrix","l":"qr()"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"QR(BigMatrix, DoublePointer)","u":"%3Cinit%3E(smile.math.matrix.BigMatrix,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"qr(boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"qr(boolean)"},{"p":"smile.math.matrix","c":"Matrix","l":"qr(boolean)"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"QR(Matrix, double[])","u":"%3Cinit%3E(smile.math.matrix.Matrix,double[])"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"QR(Matrix, float[])","u":"%3Cinit%3E(smile.math.matrix.fp32.Matrix,float[])"},{"p":"smile.base.cart","c":"Loss.Type","l":"Quantile"},{"p":"smile.base.cart","c":"Loss","l":"quantile(double)"},{"p":"smile.sort","c":"IQAgent","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"FDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"Mixture","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"TDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"quantile(double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"quantile(double, double, double)","u":"quantile(double,double,double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"quantile(double, double, double, double)","u":"quantile(double,double,double,double)"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"quantile(double, int, int)","u":"quantile(double,int,int)"},{"p":"smile.plot.vega","c":"Transform","l":"quantile(String)","u":"quantile(java.lang.String)"},{"p":"smile.stat.distribution","c":"TDistribution","l":"quantile2tailed(double)"},{"p":"smile.vq","c":"BIRCH","l":"quantize(double[])"},{"p":"smile.vq","c":"GrowingNeuralGas","l":"quantize(double[])"},{"p":"smile.vq","c":"NeuralGas","l":"quantize(double[])"},{"p":"smile.vq","c":"NeuralMap","l":"quantize(double[])"},{"p":"smile.vq","c":"SOM","l":"quantize(double[])"},{"p":"smile.vq","c":"VectorQuantizer","l":"quantize(double[])"},{"p":"smile.data.formula","c":"DateFeature","l":"QUARTER"},{"p":"smile.neighbor.lsh","c":"MultiProbeSample","l":"query"},{"p":"smile.data","c":"SQL","l":"query(String)","u":"query(java.lang.String)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"query(T[])"},{"p":"smile.deep.tensor","c":"ScalarType","l":"QUInt8"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"r"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"R()"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"R()"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"R()"},{"p":"smile.validation","c":"RegressionMetrics","l":"r2"},{"p":"smile.validation.metric","c":"R2","l":"R2()","u":"%3Cinit%3E()"},{"p":"smile.timeseries","c":"AR","l":"R2()"},{"p":"smile.timeseries","c":"ARMA","l":"R2()"},{"p":"smile.clustering","c":"DBSCAN","l":"radius"},{"p":"smile.clustering","c":"MEC","l":"radius"},{"p":"smile.plot.vega","c":"Mark","l":"radius(double)"},{"p":"smile.plot.vega","c":"Mark","l":"radius2(double)"},{"p":"smile.plot.vega","c":"Mark","l":"radius2Offset(double)"},{"p":"smile.plot.vega","c":"Mark","l":"radiusOffset(double)"},{"p":"smile.math","c":"MathEx","l":"RADIX"},{"p":"smile.plot.swing","c":"Palette","l":"rainbow(int)"},{"p":"smile.plot.swing","c":"Palette","l":"rainbow(int, float)","u":"rainbow(int,float)"},{"p":"smile.plot.swing","c":"Palette","l":"rainbow(int, float, float, float)","u":"rainbow(int,float,float,float)"},{"p":"smile.plot.swing","c":"Palette","l":"rainbow(int, float, float, float, float, float)","u":"rainbow(int,float,float,float,float,float)"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"rand()"},{"p":"smile.stat.distribution","c":"Distribution","l":"rand()"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"FDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"rand()"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"Mixture","l":"rand()"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"TDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"rand()"},{"p":"smile.stat.distribution","c":"Distribution","l":"rand(int)"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"rand(int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"rand(int, int)","u":"rand(int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"rand(int, int)","u":"rand(int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"rand(int, int)","u":"rand(int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"rand(int, int, Distribution)","u":"rand(int,int,smile.stat.distribution.Distribution)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"rand(int, int, Distribution)","u":"rand(int,int,smile.stat.distribution.Distribution)"},{"p":"smile.math.matrix","c":"Matrix","l":"rand(int, int, Distribution)","u":"rand(int,int,smile.stat.distribution.Distribution)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"rand(int, int, double, double)","u":"rand(int,int,double,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"rand(int, int, double, double)","u":"rand(int,int,double,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"rand(int, int, float, float)","u":"rand(int,int,float,float)"},{"p":"smile.deep.tensor","c":"Tensor","l":"rand(long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"rand(Tensor.Options, long...)","u":"rand(smile.deep.tensor.Tensor.Options,long...)"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"randi()"},{"p":"smile.stat.distribution","c":"DiscreteDistribution","l":"randi(int)"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"randi(int)"},{"p":"smile.validation.metric","c":"RandIndex","l":"RandIndex()","u":"%3Cinit%3E()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"randn(int, int)","u":"randn(int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"randn(int, int)","u":"randn(int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"randn(int, int)","u":"randn(int,int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"randn(long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"randn(Tensor.Options, long...)","u":"randn(smile.deep.tensor.Tensor.Options,long...)"},{"p":"smile.hpo","c":"Hyperparameters","l":"random()"},{"p":"smile.math","c":"MathEx","l":"random()"},{"p":"smile.math","c":"Random","l":"Random()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"MathEx","l":"random(double, double)","u":"random(double,double)"},{"p":"smile.math","c":"MathEx","l":"random(double, double, int)","u":"random(double,double,int)"},{"p":"smile.math","c":"MathEx","l":"random(double[])"},{"p":"smile.math","c":"MathEx","l":"random(double[], int)","u":"random(double[],int)"},{"p":"smile.math","c":"MathEx","l":"random(int)"},{"p":"smile.stat","c":"Sampling","l":"random(int, double)","u":"random(int,double)"},{"p":"smile.math","c":"Random","l":"Random(long)","u":"%3Cinit%3E(long)"},{"p":"smile.classification","c":"RandomForest","l":"RandomForest(Formula, int, RandomForest.Model[], ClassificationMetrics, double[])","u":"%3Cinit%3E(smile.data.formula.Formula,int,smile.classification.RandomForest.Model[],smile.validation.ClassificationMetrics,double[])"},{"p":"smile.classification","c":"RandomForest","l":"RandomForest(Formula, int, RandomForest.Model[], ClassificationMetrics, double[], IntSet)","u":"%3Cinit%3E(smile.data.formula.Formula,int,smile.classification.RandomForest.Model[],smile.validation.ClassificationMetrics,double[],smile.util.IntSet)"},{"p":"smile.regression","c":"RandomForest","l":"RandomForest(Formula, RandomForest.Model[], RegressionMetrics, double[])","u":"%3Cinit%3E(smile.data.formula.Formula,smile.regression.RandomForest.Model[],smile.validation.RegressionMetrics,double[])"},{"p":"smile.math","c":"MathEx","l":"randomInt(int)"},{"p":"smile.math","c":"MathEx","l":"randomInt(int, int)","u":"randomInt(int,int)"},{"p":"smile.math","c":"MathEx","l":"randomLong()"},{"p":"smile.feature.extraction","c":"RandomProjection","l":"RandomProjection(Matrix, String...)","u":"%3Cinit%3E(smile.math.matrix.Matrix,java.lang.String...)"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"range()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"range()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"range()"},{"p":"smile.plot.vega","c":"Field","l":"range(double...)"},{"p":"smile.plot.vega","c":"Predicate","l":"range(String, double, double)","u":"range(java.lang.String,double,double)"},{"p":"smile.plot.vega","c":"Field","l":"range(String...)","u":"range(java.lang.String...)"},{"p":"smile.plot.vega","c":"Field","l":"rangeMax(double)"},{"p":"smile.plot.vega","c":"Field","l":"rangeMax(String)","u":"rangeMax(java.lang.String)"},{"p":"smile.plot.vega","c":"Field","l":"rangeMin(double)"},{"p":"smile.plot.vega","c":"Field","l":"rangeMin(String)","u":"rangeMin(java.lang.String)"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"rank()"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"rank()"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"rank()"},{"p":"smile.gap","c":"Selection","l":"Rank()"},{"p":"smile.nlp.relevance","c":"BM25","l":"rank(Corpus, TextTerms, String, int, int)","u":"rank(smile.nlp.Corpus,smile.nlp.TextTerms,java.lang.String,int,int)"},{"p":"smile.nlp.relevance","c":"RelevanceRanker","l":"rank(Corpus, TextTerms, String, int, int)","u":"rank(smile.nlp.Corpus,smile.nlp.TextTerms,java.lang.String,int,int)"},{"p":"smile.nlp.relevance","c":"TFIDF","l":"rank(Corpus, TextTerms, String, int, int)","u":"rank(smile.nlp.Corpus,smile.nlp.TextTerms,java.lang.String,int,int)"},{"p":"smile.nlp.relevance","c":"BM25","l":"rank(Corpus, TextTerms, String[], int[], int)","u":"rank(smile.nlp.Corpus,smile.nlp.TextTerms,java.lang.String[],int[],int)"},{"p":"smile.nlp.relevance","c":"RelevanceRanker","l":"rank(Corpus, TextTerms, String[], int[], int)","u":"rank(smile.nlp.Corpus,smile.nlp.TextTerms,java.lang.String[],int[],int)"},{"p":"smile.nlp.relevance","c":"TFIDF","l":"rank(Corpus, TextTerms, String[], int[], int)","u":"rank(smile.nlp.Corpus,smile.nlp.TextTerms,java.lang.String[],int[],int)"},{"p":"smile.nlp.relevance","c":"TFIDF","l":"rank(int, int, long, long)","u":"rank(int,int,long,long)"},{"p":"smile.data.measure","c":"RatioScale","l":"RatioScale(NumberFormat)","u":"%3Cinit%3E(java.text.NumberFormat)"},{"p":"smile.interpolation","c":"AbstractInterpolation","l":"rawinterp(int, double)","u":"rawinterp(int,double)"},{"p":"smile.interpolation","c":"CubicSplineInterpolation1D","l":"rawinterp(int, double)","u":"rawinterp(int,double)"},{"p":"smile.interpolation","c":"LinearInterpolation","l":"rawinterp(int, double)","u":"rawinterp(int,double)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"RB"},{"p":"smile.base.rbf","c":"RBF","l":"RBF(T, RadialBasisFunction, Metric<T>)","u":"%3Cinit%3E(T,smile.math.rbf.RadialBasisFunction,smile.math.distance.Metric)"},{"p":"smile.interpolation","c":"RBFInterpolation","l":"RBFInterpolation(double[][], double[], RadialBasisFunction)","u":"%3Cinit%3E(double[][],double[],smile.math.rbf.RadialBasisFunction)"},{"p":"smile.interpolation","c":"RBFInterpolation","l":"RBFInterpolation(double[][], double[], RadialBasisFunction, boolean)","u":"%3Cinit%3E(double[][],double[],smile.math.rbf.RadialBasisFunction,boolean)"},{"p":"smile.interpolation","c":"RBFInterpolation1D","l":"RBFInterpolation1D(double[], double[], RadialBasisFunction)","u":"%3Cinit%3E(double[],double[],smile.math.rbf.RadialBasisFunction)"},{"p":"smile.interpolation","c":"RBFInterpolation1D","l":"RBFInterpolation1D(double[], double[], RadialBasisFunction, boolean)","u":"%3Cinit%3E(double[],double[],smile.math.rbf.RadialBasisFunction,boolean)"},{"p":"smile.interpolation","c":"RBFInterpolation2D","l":"RBFInterpolation2D(double[], double[], double[], RadialBasisFunction)","u":"%3Cinit%3E(double[],double[],double[],smile.math.rbf.RadialBasisFunction)"},{"p":"smile.interpolation","c":"RBFInterpolation2D","l":"RBFInterpolation2D(double[], double[], double[], RadialBasisFunction, boolean)","u":"%3Cinit%3E(double[],double[],double[],smile.math.rbf.RadialBasisFunction,boolean)"},{"p":"smile.classification","c":"RBFNetwork","l":"RBFNetwork(int, RBF<T>[], Matrix, boolean)","u":"%3Cinit%3E(int,smile.base.rbf.RBF[],smile.math.matrix.Matrix,boolean)"},{"p":"smile.classification","c":"RBFNetwork","l":"RBFNetwork(int, RBF<T>[], Matrix, boolean, IntSet)","u":"%3Cinit%3E(int,smile.base.rbf.RBF[],smile.math.matrix.Matrix,boolean,smile.util.IntSet)"},{"p":"smile.regression","c":"RBFNetwork","l":"RBFNetwork(RBF<T>[], double[], boolean)","u":"%3Cinit%3E(smile.base.rbf.RBF[],double[],boolean)"},{"p":"smile.math","c":"MathEx","l":"rbind(double[]...)"},{"p":"smile.math","c":"MathEx","l":"rbind(float[]...)"},{"p":"smile.math","c":"MathEx","l":"rbind(int[]...)"},{"p":"smile.math","c":"MathEx","l":"rbind(String[]...)","u":"rbind(java.lang.String[]...)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"RBR"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"RBS"},{"p":"smile.classification","c":"RDA","l":"RDA(double[], double[][], double[][], Matrix[])","u":"%3Cinit%3E(double[],double[][],double[][],smile.math.matrix.Matrix[])"},{"p":"smile.classification","c":"RDA","l":"RDA(double[], double[][], double[][], Matrix[], IntSet)","u":"%3Cinit%3E(double[],double[][],double[][],smile.math.matrix.Matrix[],smile.util.IntSet)"},{"p":"smile.math","c":"Complex","l":"re"},{"p":"smile.io","c":"Arff","l":"read()"},{"p":"smile.io","c":"JSON","l":"read(BufferedReader, int)","u":"read(java.io.BufferedReader,int)"},{"p":"smile.io","c":"Parquet","l":"read(InputFile)","u":"read(org.apache.parquet.io.InputFile)"},{"p":"smile.io","c":"Parquet","l":"read(InputFile, int)","u":"read(org.apache.parquet.io.InputFile,int)"},{"p":"smile.io","c":"Arrow","l":"read(InputStream, int)","u":"read(java.io.InputStream,int)"},{"p":"smile.io","c":"Avro","l":"read(InputStream, int)","u":"read(java.io.InputStream,int)"},{"p":"smile.io","c":"SAS","l":"read(InputStream, int)","u":"read(java.io.InputStream,int)"},{"p":"smile.io","c":"Arff","l":"read(int)"},{"p":"smile.io","c":"Arrow","l":"read(Path)","u":"read(java.nio.file.Path)"},{"p":"smile.io","c":"Avro","l":"read(Path)","u":"read(java.nio.file.Path)"},{"p":"smile.io","c":"CSV","l":"read(Path)","u":"read(java.nio.file.Path)"},{"p":"smile.io","c":"JSON","l":"read(Path)","u":"read(java.nio.file.Path)"},{"p":"smile.io","c":"Parquet","l":"read(Path)","u":"read(java.nio.file.Path)"},{"p":"smile.io","c":"SAS","l":"read(Path)","u":"read(java.nio.file.Path)"},{"p":"smile.io","c":"Arrow","l":"read(Path, int)","u":"read(java.nio.file.Path,int)"},{"p":"smile.io","c":"CSV","l":"read(Path, int)","u":"read(java.nio.file.Path,int)"},{"p":"smile.io","c":"JSON","l":"read(Path, int)","u":"read(java.nio.file.Path,int)"},{"p":"smile.io","c":"Parquet","l":"read(Path, int)","u":"read(java.nio.file.Path,int)"},{"p":"smile.nlp.pos","c":"HMMPOSTagger","l":"read(Path, List<String[]>, List<PennTreebankPOS[]>)","u":"read(java.nio.file.Path,java.util.List,java.util.List)"},{"p":"smile.io","c":"Arrow","l":"read(String)","u":"read(java.lang.String)"},{"p":"smile.io","c":"Avro","l":"read(String)","u":"read(java.lang.String)"},{"p":"smile.io","c":"CSV","l":"read(String)","u":"read(java.lang.String)"},{"p":"smile.io","c":"JSON","l":"read(String)","u":"read(java.lang.String)"},{"p":"smile.io","c":"Parquet","l":"read(String)","u":"read(java.lang.String)"},{"p":"smile.io","c":"SAS","l":"read(String)","u":"read(java.lang.String)"},{"p":"smile.io","c":"Arrow","l":"read(String, int)","u":"read(java.lang.String,int)"},{"p":"smile.io","c":"CSV","l":"read(String, int)","u":"read(java.lang.String,int)"},{"p":"smile.io","c":"JSON","l":"read(String, int)","u":"read(java.lang.String,int)"},{"p":"smile.io","c":"Parquet","l":"read(String, int)","u":"read(java.lang.String,int)"},{"p":"smile.io","c":"HadoopInput","l":"reader(String)","u":"reader(java.lang.String)"},{"p":"smile.io","c":"Input","l":"reader(String)","u":"reader(java.lang.String)"},{"p":"smile.io","c":"HadoopInput","l":"reader(String, Charset)","u":"reader(java.lang.String,java.nio.charset.Charset)"},{"p":"smile.io","c":"Input","l":"reader(String, Charset)","u":"reader(java.lang.String,java.nio.charset.Charset)"},{"p":"smile.deep.metric","c":"Recall","l":"Recall()","u":"%3Cinit%3E()"},{"p":"smile.validation.metric","c":"Recall","l":"Recall()","u":"%3Cinit%3E()"},{"p":"smile.deep.metric","c":"Recall","l":"Recall(Averaging)","u":"%3Cinit%3E(smile.deep.metric.Averaging)"},{"p":"smile.deep.metric","c":"Recall","l":"Recall(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math","c":"Complex","l":"reciprocal()"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"rectifier()"},{"p":"smile.base.mlp","c":"Layer","l":"rectifier(int)"},{"p":"smile.base.mlp","c":"Layer","l":"rectifier(int, double)","u":"rectifier(int,double)"},{"p":"smile.plot.swing","c":"Palette","l":"RED"},{"p":"smile.plot.swing","c":"Palette","l":"redblue(int)"},{"p":"smile.plot.swing","c":"Palette","l":"redblue(int, float)","u":"redblue(int,float)"},{"p":"smile.plot.swing","c":"Palette","l":"redgreen(int)"},{"p":"smile.plot.swing","c":"Palette","l":"redgreen(int, float)","u":"redgreen(int,float)"},{"p":"smile.validation","c":"LOOCV","l":"regression(Formula, DataFrame, BiFunction<Formula, DataFrame, DataFrameRegression>)","u":"regression(smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"Bootstrap","l":"regression(int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"regression(int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"regression(int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"regression(int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"regression(int, int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"regression(int,int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"regression(int, int, T[], double[], BiFunction<T[], double[], M>)","u":"regression(int,int,T[],double[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"Bootstrap","l":"regression(int, T[], double[], BiFunction<T[], double[], M>)","u":"regression(int,T[],double[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"regression(int, T[], double[], BiFunction<T[], double[], M>)","u":"regression(int,T[],double[],java.util.function.BiFunction)"},{"p":"smile.plot.vega","c":"Transform","l":"regression(String, String)","u":"regression(java.lang.String,java.lang.String)"},{"p":"smile.validation","c":"LOOCV","l":"regression(T[], double[], BiFunction<T[], double[], M>)","u":"regression(T[],double[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"RegressionMetrics","l":"RegressionMetrics(double, double, int, double, double, double, double, double)","u":"%3Cinit%3E(double,double,int,double,double,double,double,double)"},{"p":"smile.base.cart","c":"RegressionNode","l":"RegressionNode(int, double, double, double)","u":"%3Cinit%3E(int,double,double,double)"},{"p":"smile.regression","c":"RegressionTree","l":"RegressionTree(DataFrame, Loss, StructField, int, int, int, int, int[], int[][])","u":"%3Cinit%3E(smile.data.DataFrame,smile.base.cart.Loss,smile.data.type.StructField,int,int,int,int,int[],int[][])"},{"p":"smile.validation","c":"RegressionValidation","l":"RegressionValidation(M, double[], double[], RegressionMetrics)","u":"%3Cinit%3E(M,double[],double[],smile.validation.RegressionMetrics)"},{"p":"smile.validation","c":"RegressionValidations","l":"RegressionValidations(List<RegressionValidation<M>>)","u":"%3Cinit%3E(java.util.List)"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"regressors"},{"p":"smile.math.special","c":"Beta","l":"regularizedIncompleteBetaFunction(double, double, double)","u":"regularizedIncompleteBetaFunction(double,double,double)"},{"p":"smile.math.special","c":"Gamma","l":"regularizedIncompleteGamma(double, double)","u":"regularizedIncompleteGamma(double,double)"},{"p":"smile.math.special","c":"Gamma","l":"regularizedUpperIncompleteGamma(double, double)","u":"regularizedUpperIncompleteGamma(double,double)"},{"p":"smile.stat.distribution","c":"Distribution","l":"rejectionSampling(double, double, double)","u":"rejectionSampling(double,double,double)"},{"p":"smile.nlp.relevance","c":"Relevance","l":"Relevance(Text, double)","u":"%3Cinit%3E(smile.nlp.Text,double)"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"relu()"},{"p":"smile.base.mlp.activation","c":"ReLU","l":"ReLU()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"ReLU","l":"ReLU(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.deep.layer","c":"Layer","l":"relu(int, int)","u":"relu(int,int)"},{"p":"smile.deep.layer","c":"Layer","l":"relu(int, int, double)","u":"relu(int,int,double)"},{"p":"smile.neighbor","c":"MutableLSH","l":"remove(double[], E)","u":"remove(double[],E)"},{"p":"smile.neighbor.lsh","c":"Bucket","l":"remove(int)"},{"p":"smile.util","c":"DoubleArrayList","l":"remove(int)"},{"p":"smile.util","c":"IntArrayList","l":"remove(int)"},{"p":"smile.util","c":"IntDoubleHashMap","l":"remove(int)"},{"p":"smile.util","c":"IntHashSet","l":"remove(int)"},{"p":"smile.util","c":"SparseArray","l":"remove(int)"},{"p":"smile.plot.swing","c":"Canvas","l":"remove(Plot)","u":"remove(smile.plot.swing.Plot)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"remove(PlotPanel)","u":"remove(smile.plot.swing.PlotPanel)"},{"p":"smile.plot.swing","c":"Canvas","l":"remove(Shape)","u":"remove(smile.plot.swing.Shape)"},{"p":"smile.taxonomy","c":"Concept","l":"removeChild(Concept)","u":"removeChild(smile.taxonomy.Concept)"},{"p":"smile.graph","c":"AdjacencyList","l":"removeEdge(Graph.Edge)","u":"removeEdge(smile.graph.Graph.Edge)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"removeEdge(Graph.Edge)","u":"removeEdge(smile.graph.Graph.Edge)"},{"p":"smile.graph","c":"Graph","l":"removeEdge(Graph.Edge)","u":"removeEdge(smile.graph.Graph.Edge)"},{"p":"smile.graph","c":"AdjacencyList","l":"removeEdge(int, int)","u":"removeEdge(int,int)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"removeEdge(int, int)","u":"removeEdge(int,int)"},{"p":"smile.graph","c":"Graph","l":"removeEdge(int, int)","u":"removeEdge(int,int)"},{"p":"smile.vq.hebb","c":"Neuron","l":"removeEdge(Neuron)","u":"removeEdge(smile.vq.hebb.Neuron)"},{"p":"smile.graph","c":"AdjacencyList","l":"removeEdges(Collection<Graph.Edge>)","u":"removeEdges(java.util.Collection)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"removeEdges(Collection<Graph.Edge>)","u":"removeEdges(java.util.Collection)"},{"p":"smile.graph","c":"Graph","l":"removeEdges(Collection<Graph.Edge>)","u":"removeEdges(java.util.Collection)"},{"p":"smile.taxonomy","c":"Concept","l":"removeKeyword(String)","u":"removeKeyword(java.lang.String)"},{"p":"smile.plot.vega","c":"Field","l":"removeLegend()"},{"p":"smile.plot.swing","c":"Canvas","l":"removePropertyChangeListener(PropertyChangeListener)","u":"removePropertyChangeListener(java.beans.PropertyChangeListener)"},{"p":"smile.plot.vega","c":"Repeat","l":"Repeat(VegaLite, String...)","u":"%3Cinit%3E(smile.plot.vega.VegaLite,java.lang.String...)"},{"p":"smile.plot.vega","c":"Repeat","l":"Repeat(VegaLite, String[], String[])","u":"%3Cinit%3E(smile.plot.vega.VegaLite,java.lang.String[],java.lang.String[])"},{"p":"smile.base.cart","c":"InternalNode","l":"replace(Node, Node)","u":"replace(smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.base.cart","c":"NominalNode","l":"replace(Node, Node)","u":"replace(smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.base.cart","c":"OrdinalNode","l":"replace(Node, Node)","u":"replace(smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"replaceNaN(double)"},{"p":"smile.math.matrix","c":"Matrix","l":"replaceNaN(double)"},{"p":"smile.util","c":"Array2D","l":"replaceNaN(double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"replaceNaN(float)"},{"p":"smile.deep.tensor","c":"Tensor","l":"requireGrad()"},{"p":"smile.deep.tensor","c":"Tensor","l":"requireGrad(boolean)"},{"p":"smile.deep.tensor","c":"Tensor.Options","l":"requireGradients(boolean)"},{"p":"smile.deep.metric","c":"Accuracy","l":"reset()"},{"p":"smile.deep.metric","c":"Metric","l":"reset()"},{"p":"smile.deep.metric","c":"Precision","l":"reset()"},{"p":"smile.deep.metric","c":"Recall","l":"reset()"},{"p":"smile.deep","c":"Optimizer","l":"reset()"},{"p":"smile.plot.swing","c":"Axis","l":"reset()"},{"p":"smile.plot.swing","c":"Base","l":"reset()"},{"p":"smile.plot.swing","c":"PlotPanel","l":"reset()"},{"p":"smile.plot.swing","c":"Graphics","l":"resetProjection()"},{"p":"smile.deep.tensor","c":"Tensor","l":"reshape(long...)"},{"p":"smile.base.cart","c":"Loss","l":"residual()"},{"p":"smile.math","c":"LevenbergMarquardt","l":"residuals"},{"p":"smile.regression","c":"LinearModel","l":"residuals()"},{"p":"smile.timeseries","c":"AR","l":"residuals()"},{"p":"smile.timeseries","c":"ARMA","l":"residuals()"},{"p":"smile.vision.transform","c":"Transform","l":"resize(BufferedImage, int, int)","u":"resize(java.awt.image.BufferedImage,int,int)"},{"p":"smile.plot.vega","c":"Concat","l":"resolveAxis(String, String)","u":"resolveAxis(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"resolveAxis(String, String)","u":"resolveAxis(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Layer","l":"resolveAxis(String, String)","u":"resolveAxis(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"resolveAxis(String, String)","u":"resolveAxis(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"ViewComposition","l":"resolveAxis(String, String)","u":"resolveAxis(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Concat","l":"resolveLegend(String, String)","u":"resolveLegend(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"resolveLegend(String, String)","u":"resolveLegend(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Layer","l":"resolveLegend(String, String)","u":"resolveLegend(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"resolveLegend(String, String)","u":"resolveLegend(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"ViewComposition","l":"resolveLegend(String, String)","u":"resolveLegend(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Concat","l":"resolveScale(String, String)","u":"resolveScale(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"resolveScale(String, String)","u":"resolveScale(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Layer","l":"resolveScale(String, String)","u":"resolveScale(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"resolveScale(String, String)","u":"resolveScale(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"ViewComposition","l":"resolveScale(String, String)","u":"resolveScale(java.lang.String,java.lang.String)"},{"p":"smile.base.cart","c":"CART","l":"response"},{"p":"smile.base.cart","c":"Loss","l":"response()"},{"p":"smile.data.formula","c":"Formula","l":"response()"},{"p":"smile.math","c":"MathEx","l":"reverse(double[])"},{"p":"smile.math","c":"MathEx","l":"reverse(float[])"},{"p":"smile.math","c":"MathEx","l":"reverse(int[])"},{"p":"smile.math","c":"MathEx","l":"reverse(T[])"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"rho"},{"p":"smile.data.formula","c":"Formula","l":"rhs(String...)","u":"rhs(java.lang.String...)"},{"p":"smile.data.formula","c":"Formula","l":"rhs(Term...)","u":"rhs(smile.data.formula.Term...)"},{"p":"smile.regression","c":"RidgeRegression","l":"RidgeRegression()","u":"%3Cinit%3E()"},{"p":"smile.math.blas","c":"Side","l":"RIGHT"},{"p":"smile.util","c":"Strings","l":"rightPad(String, int, char)","u":"rightPad(java.lang.String,int,char)"},{"p":"smile.data.formula","c":"Terms","l":"rint(String)","u":"rint(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"rint(Term)","u":"rint(smile.data.formula.Term)"},{"p":"smile.validation","c":"RegressionMetrics","l":"rmse"},{"p":"smile.validation.metric","c":"RMSE","l":"RMSE()","u":"%3Cinit%3E()"},{"p":"smile.base.mlp.optimizer","c":"RMSProp","l":"RMSProp()","u":"%3Cinit%3E()"},{"p":"smile.deep","c":"Optimizer","l":"RMSprop(Model, double)","u":"RMSprop(smile.deep.Model,double)"},{"p":"smile.deep","c":"Optimizer","l":"RMSprop(Model, double, double, double, double, double, boolean)","u":"RMSprop(smile.deep.Model,double,double,double,double,double,boolean)"},{"p":"smile.base.mlp.optimizer","c":"RMSProp","l":"RMSProp(TimeFunction)","u":"%3Cinit%3E(smile.math.TimeFunction)"},{"p":"smile.base.mlp.optimizer","c":"RMSProp","l":"RMSProp(TimeFunction, double, double)","u":"%3Cinit%3E(smile.math.TimeFunction,double,double)"},{"p":"smile.feature.transform","c":"RobustStandardizer","l":"RobustStandardizer()","u":"%3Cinit%3E()"},{"p":"smile.base.cart","c":"CART","l":"root"},{"p":"smile.base.cart","c":"CART","l":"root()"},{"p":"smile.plot.swing","c":"Graphics","l":"rotate(double, double)","u":"rotate(double,double)"},{"p":"smile.plot.vega","c":"Projection","l":"rotate(double, double, double)","u":"rotate(double,double,double)"},{"p":"smile.gap","c":"Selection","l":"RouletteWheel()"},{"p":"smile.math","c":"MathEx","l":"ROUND_STYLE"},{"p":"smile.math","c":"MathEx","l":"round(double, int)","u":"round(double,int)"},{"p":"smile.data.formula","c":"Terms","l":"round(String)","u":"round(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"round(Term)","u":"round(smile.data.formula.Term)"},{"p":"smile.validation","c":"ClassificationValidations","l":"rounds"},{"p":"smile.validation","c":"RegressionValidations","l":"rounds"},{"p":"smile.math.blas","c":"Layout","l":"ROW_MAJOR"},{"p":"smile.math.matrix","c":"BigMatrix","l":"row(double[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"row(double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"row(double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"row(double[], int, int)","u":"row(double[],int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"row(double[], int, int)","u":"row(double[],int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"row(double[], int, int)","u":"row(double[],int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"row(float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"row(float[], int, int)","u":"row(float[],int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"row(int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"row(int)"},{"p":"smile.math.matrix","c":"Matrix","l":"row(int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"row(int...)"},{"p":"smile.plot.vega","c":"Facet","l":"row(String)","u":"row(java.lang.String)"},{"p":"smile.swing","c":"Table.RowHeader","l":"RowHeader()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"MathEx","l":"rowMax(double[][])"},{"p":"smile.math","c":"MathEx","l":"rowMax(int[][])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"rowMeans()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"rowMeans()"},{"p":"smile.math.matrix","c":"Matrix","l":"rowMeans()"},{"p":"smile.math","c":"MathEx","l":"rowMeans(double[][])"},{"p":"smile.math","c":"MathEx","l":"rowMin(double[][])"},{"p":"smile.math","c":"MathEx","l":"rowMin(int[][])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"rowName(int)"},{"p":"smile.math.matrix","c":"IMatrix","l":"rowName(int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"rowNames()"},{"p":"smile.math.matrix","c":"IMatrix","l":"rowNames()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"rowNames(String[])","u":"rowNames(java.lang.String[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"rowNames(String[])","u":"rowNames(java.lang.String[])"},{"p":"smile.plot.vega","c":"Legend","l":"rowPadding(double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"rows(int...)"},{"p":"smile.math.matrix","c":"Matrix","l":"rows(int...)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"rowSds()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"rowSds()"},{"p":"smile.math.matrix","c":"Matrix","l":"rowSds()"},{"p":"smile.math","c":"MathEx","l":"rowSds(double[][])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"rowSums()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"rowSums()"},{"p":"smile.math.matrix","c":"Matrix","l":"rowSums()"},{"p":"smile.math","c":"MathEx","l":"rowSums(double[][])"},{"p":"smile.math","c":"MathEx","l":"rowSums(int[][])"},{"p":"smile.plot.swing","c":"Palette","l":"ROYAL_BLUE"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"RP"},{"p":"smile.regression","c":"LinearModel","l":"RSquared()"},{"p":"smile.validation","c":"RegressionMetrics","l":"rss"},{"p":"smile.validation.metric","c":"RSS","l":"RSS()","u":"%3Cinit%3E()"},{"p":"smile.regression","c":"LinearModel","l":"RSS()"},{"p":"smile.timeseries","c":"AR","l":"RSS()"},{"p":"smile.timeseries","c":"ARMA","l":"RSS()"},{"p":"smile.clustering","c":"PartitionClustering","l":"run(int, Supplier<T>)","u":"run(int,java.util.function.Supplier)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"rutherford(Path)","u":"rutherford(java.nio.file.Path)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"rutherford(Path)","u":"rutherford(java.nio.file.Path)"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"s"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"s"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"s"},{"p":"smile.feature.selection","c":"SignalNoiseRatio","l":"s2n"},{"p":"smile.math.matrix","c":"ARPACK.SymmOption","l":"SA"},{"p":"smile.math.matrix.fp32","c":"ARPACK.SymmOption","l":"SA"},{"p":"smile.plot.swing","c":"Palette","l":"SALMON"},{"p":"smile.manifold","c":"SammonMapping","l":"SammonMapping(double, double[][])","u":"%3Cinit%3E(double,double[][])"},{"p":"smile.plot.vega","c":"Transform","l":"sample(int)"},{"p":"smile.regression","c":"GaussianProcessRegression.JointPrediction","l":"sample(int)"},{"p":"smile.deep","c":"SampleBatch","l":"SampleBatch(Tensor, Tensor)","u":"%3Cinit%3E(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.data","c":"SampleInstance","l":"SampleInstance(D)","u":"%3Cinit%3E(D)"},{"p":"smile.data","c":"SampleInstance","l":"SampleInstance(D, T)","u":"%3Cinit%3E(D,T)"},{"p":"smile.base.cart","c":"CART","l":"samples"},{"p":"smile.validation","c":"Bag","l":"samples"},{"p":"smile.io","c":"Read","l":"sas(Path)","u":"sas(java.nio.file.Path)"},{"p":"smile.io","c":"Read","l":"sas(String)","u":"sas(java.lang.String)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"save()"},{"p":"smile.plot.swing","c":"PlotPanel","l":"save()"},{"p":"smile.plot.swing","c":"PlotGrid","l":"save(File)","u":"save(java.io.File)"},{"p":"smile.plot.swing","c":"PlotPanel","l":"save(File)","u":"save(java.io.File)"},{"p":"smile.deep","c":"Model","l":"save(String)","u":"save(java.lang.String)"},{"p":"smile.math.blas","c":"BLAS","l":"sbmv(Layout, UPLO, int, int, double, double[], int, double[], int, double, double[], int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sbmv(Layout, UPLO, int, int, double, double[], int, double[], int, double, double[], int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"sbmv(Layout, UPLO, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sbmv(Layout, UPLO, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"sbmv(Layout, UPLO, int, int, float, float[], int, float[], int, float, float[], int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sbmv(Layout, UPLO, int, int, float, float[], int, float[], int, float, float[], int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"sbmv(Layout, UPLO, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sbmv(Layout, UPLO, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"sbmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"scal(double, double[])","u":"scal(double,double[])"},{"p":"smile.math.blas","c":"BLAS","l":"scal(float, float[])","u":"scal(float,float[])"},{"p":"smile.math.blas","c":"BLAS","l":"scal(int, double, double[], int)","u":"scal(int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"scal(int, double, double[], int)","u":"scal(int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"scal(int, float, float[], int)","u":"scal(int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"scal(int, float, float[], int)","u":"scal(int,float,float[],int)"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"scale"},{"p":"smile.classification","c":"ClassLabels","l":"scale()"},{"p":"smile.math.kernel","c":"Gaussian","l":"scale()"},{"p":"smile.math.kernel","c":"HyperbolicTangent","l":"scale()"},{"p":"smile.math.kernel","c":"Laplacian","l":"scale()"},{"p":"smile.math.kernel","c":"Matern","l":"scale()"},{"p":"smile.math.kernel","c":"Polynomial","l":"scale()"},{"p":"smile.math.kernel","c":"ThinPlateSpline","l":"scale()"},{"p":"smile.classification","c":"PlattScaling","l":"scale(double)"},{"p":"smile.math","c":"Complex","l":"scale(double)"},{"p":"smile.plot.vega","c":"Projection","l":"scale(double)"},{"p":"smile.math","c":"MathEx","l":"scale(double, double[])","u":"scale(double,double[])"},{"p":"smile.math","c":"MathEx","l":"scale(double, double[], double[])","u":"scale(double,double[],double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"scale(double[], double[])","u":"scale(double[],double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"scale(double[], double[])","u":"scale(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"scale(double[][])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"scale(float[], float[])","u":"scale(float[],float[])"},{"p":"smile.plot.vega","c":"Field","l":"scale(String)","u":"scale(java.lang.String)"},{"p":"smile.gap","c":"Selection","l":"ScaledRouletteWheel()"},{"p":"smile.feature.transform","c":"Scaler","l":"Scaler()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"Scaler","l":"Scaler(double, double, boolean)","u":"%3Cinit%3E(double,double,boolean)"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"scatter()"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"ScatterPlot(Point...)","u":"%3Cinit%3E(smile.plot.swing.Point...)"},{"p":"smile.plot.swing","c":"ScatterPlot","l":"ScatterPlot(Point[], Legend[])","u":"%3Cinit%3E(smile.plot.swing.Point[],smile.plot.swing.Legend[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"scatterReduce_(int, Tensor, Tensor, String)","u":"scatterReduce_(int,smile.deep.tensor.Tensor,smile.deep.tensor.Tensor,java.lang.String)"},{"p":"smile.deep.tensor","c":"Tensor","l":"scatterReduce(int, Tensor, Tensor, String)","u":"scatterReduce(int,smile.deep.tensor.Tensor,smile.deep.tensor.Tensor,java.lang.String)"},{"p":"smile.base.cart","c":"CART","l":"schema"},{"p":"smile.feature.extraction","c":"Projection","l":"schema"},{"p":"smile.classification","c":"AdaBoost","l":"schema()"},{"p":"smile.classification","c":"DataFrameClassifier","l":"schema()"},{"p":"smile.classification","c":"DecisionTree","l":"schema()"},{"p":"smile.classification","c":"GradientTreeBoost","l":"schema()"},{"p":"smile.classification","c":"RandomForest","l":"schema()"},{"p":"smile.data","c":"DataFrame","l":"schema()"},{"p":"smile.data","c":"IndexDataFrame","l":"schema()"},{"p":"smile.data","c":"Tuple","l":"schema()"},{"p":"smile.io","c":"Arff","l":"schema()"},{"p":"smile.regression","c":"DataFrameRegression","l":"schema()"},{"p":"smile.regression","c":"GradientTreeBoost","l":"schema()"},{"p":"smile.regression","c":"LinearModel","l":"schema()"},{"p":"smile.regression","c":"RandomForest","l":"schema()"},{"p":"smile.regression","c":"RegressionTree","l":"schema()"},{"p":"smile.io","c":"CSV","l":"schema(StructType)","u":"schema(smile.data.type.StructType)"},{"p":"smile.io","c":"JSON","l":"schema(StructType)","u":"schema(smile.data.type.StructType)"},{"p":"smile.nlp.collocation","c":"Bigram","l":"score"},{"p":"smile.nlp.relevance","c":"Relevance","l":"score"},{"p":"smile.base.cart","c":"InternalNode","l":"score()"},{"p":"smile.nlp.relevance","c":"BM25","l":"score(double, int, double, long, long)","u":"score(double,int,double,long,long)"},{"p":"smile.nlp.relevance","c":"BM25","l":"score(double, long, long)","u":"score(double,long,long)"},{"p":"smile.anomaly","c":"IsolationForest","l":"score(double[])"},{"p":"smile.classification","c":"LogisticRegression.Binomial","l":"score(double[])"},{"p":"smile.validation.metric","c":"MAD","l":"score(double[], double[])","u":"score(double[],double[])"},{"p":"smile.validation.metric","c":"MSE","l":"score(double[], double[])","u":"score(double[],double[])"},{"p":"smile.validation.metric","c":"R2","l":"score(double[], double[])","u":"score(double[],double[])"},{"p":"smile.validation.metric","c":"RegressionMetric","l":"score(double[], double[])","u":"score(double[],double[])"},{"p":"smile.validation.metric","c":"RMSE","l":"score(double[], double[])","u":"score(double[],double[])"},{"p":"smile.validation.metric","c":"RSS","l":"score(double[], double[])","u":"score(double[],double[])"},{"p":"smile.anomaly","c":"IsolationForest","l":"score(double[][])"},{"p":"smile.nlp.relevance","c":"BM25","l":"score(int, int, double, int, int, double, int, int, double, long, long)","u":"score(int,int,double,int,int,double,int,int,double,long,long)"},{"p":"smile.classification","c":"Maxent.Binomial","l":"score(int[])"},{"p":"smile.validation.metric","c":"AUC","l":"score(int[], double[])","u":"score(int[],double[])"},{"p":"smile.validation.metric","c":"LogLoss","l":"score(int[], double[])","u":"score(int[],double[])"},{"p":"smile.validation.metric","c":"ProbabilisticClassificationMetric","l":"score(int[], double[])","u":"score(int[],double[])"},{"p":"smile.validation.metric","c":"Accuracy","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"AdjustedRandIndex","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"ClassificationMetric","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"ClusteringMetric","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"Error","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"Fallout","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"FDR","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"FScore","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"MatthewsCorrelation","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"MutualInformation","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"Precision","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"RandIndex","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"Recall","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"Sensitivity","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.validation.metric","c":"Specificity","l":"score(int[], int[])","u":"score(int[],int[])"},{"p":"smile.classification","c":"SparseLogisticRegression.Binomial","l":"score(SparseArray)","u":"score(smile.util.SparseArray)"},{"p":"smile.base.svm","c":"KernelMachine","l":"score(T)"},{"p":"smile.classification","c":"Classifier","l":"score(T)"},{"p":"smile.gap","c":"Fitness","l":"score(T)"},{"p":"smile.manifold","c":"MDS","l":"scores"},{"p":"smile.validation","c":"ClassificationMetrics","l":"scoreTime"},{"p":"smile.validation","c":"RegressionMetrics","l":"scoreTime"},{"p":"smile.math","c":"Histogram","l":"scott(double[])"},{"p":"smile.plot.swing","c":"ScreePlot","l":"ScreePlot(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.regression","c":"GaussianProcessRegression.JointPrediction","l":"sd"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"sd"},{"p":"smile.validation","c":"ClassificationValidations","l":"sd"},{"p":"smile.validation","c":"RegressionValidations","l":"sd"},{"p":"smile.neighbor.lsh","c":"HashValueParzenModel","l":"sd()"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"Distribution","l":"sd()"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"sd()"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"sd()"},{"p":"smile.stat.distribution","c":"TDistribution","l":"sd()"},{"p":"smile.math","c":"MathEx","l":"sd(double[])"},{"p":"smile.math","c":"MathEx","l":"sd(float[])"},{"p":"smile.math","c":"MathEx","l":"sd(int[])"},{"p":"smile.interpolation","c":"AbstractInterpolation","l":"search(double)"},{"p":"smile.neighbor","c":"KDTree","l":"search(double[], double, List<Neighbor<double[], E>>)","u":"search(double[],double,java.util.List)"},{"p":"smile.neighbor","c":"LSH","l":"search(double[], double, List<Neighbor<double[], E>>)","u":"search(double[],double,java.util.List)"},{"p":"smile.neighbor","c":"MPLSH","l":"search(double[], double, List<Neighbor<double[], E>>)","u":"search(double[],double,java.util.List)"},{"p":"smile.neighbor","c":"MPLSH","l":"search(double[], double, List<Neighbor<double[], E>>, double, int)","u":"search(double[],double,java.util.List,double,int)"},{"p":"smile.neighbor","c":"KDTree","l":"search(double[], int)","u":"search(double[],int)"},{"p":"smile.neighbor","c":"LSH","l":"search(double[], int)","u":"search(double[],int)"},{"p":"smile.neighbor","c":"MPLSH","l":"search(double[], int)","u":"search(double[],int)"},{"p":"smile.neighbor","c":"MPLSH","l":"search(double[], int, double, int)","u":"search(double[],int,double,int)"},{"p":"smile.neighbor","c":"BKTree","l":"search(K, double, List<Neighbor<K, V>>)","u":"search(K,double,java.util.List)"},{"p":"smile.neighbor","c":"CoverTree","l":"search(K, double, List<Neighbor<K, V>>)","u":"search(K,double,java.util.List)"},{"p":"smile.neighbor","c":"LinearSearch","l":"search(K, double, List<Neighbor<K, V>>)","u":"search(K,double,java.util.List)"},{"p":"smile.neighbor","c":"RNNSearch","l":"search(K, double, List<Neighbor<K, V>>)","u":"search(K,double,java.util.List)"},{"p":"smile.neighbor","c":"SNLSH","l":"search(K, double, List<Neighbor<K, V>>)","u":"search(K,double,java.util.List)"},{"p":"smile.neighbor","c":"CoverTree","l":"search(K, int)","u":"search(K,int)"},{"p":"smile.neighbor","c":"KNNSearch","l":"search(K, int)","u":"search(K,int)"},{"p":"smile.neighbor","c":"LinearSearch","l":"search(K, int)","u":"search(K,int)"},{"p":"smile.neighbor","c":"BKTree","l":"search(K, int, List<Neighbor<K, V>>)","u":"search(K,int,java.util.List)"},{"p":"smile.nlp","c":"Corpus","l":"search(RelevanceRanker, String)","u":"search(smile.nlp.relevance.RelevanceRanker,java.lang.String)"},{"p":"smile.nlp","c":"SimpleCorpus","l":"search(RelevanceRanker, String)","u":"search(smile.nlp.relevance.RelevanceRanker,java.lang.String)"},{"p":"smile.nlp","c":"Corpus","l":"search(RelevanceRanker, String[])","u":"search(smile.nlp.relevance.RelevanceRanker,java.lang.String[])"},{"p":"smile.nlp","c":"SimpleCorpus","l":"search(RelevanceRanker, String[])","u":"search(smile.nlp.relevance.RelevanceRanker,java.lang.String[])"},{"p":"smile.nlp","c":"Corpus","l":"search(String)","u":"search(java.lang.String)"},{"p":"smile.nlp","c":"SimpleCorpus","l":"search(String)","u":"search(java.lang.String)"},{"p":"smile.data.formula","c":"DateFeature","l":"SECOND"},{"p":"smile.vq","c":"NeuralGas","l":"seed(int, double[][])","u":"seed(int,double[][])"},{"p":"smile.clustering","c":"PartitionClustering","l":"seed(T[], T[], int[], ToDoubleBiFunction<T, T>)","u":"seed(T[],T[],int[],java.util.function.ToDoubleBiFunction)"},{"p":"smile.math","c":"MathEx","l":"seeds()"},{"p":"smile.sort","c":"QuickSelect","l":"select(double[], int)","u":"select(double[],int)"},{"p":"smile.sort","c":"QuickSelect","l":"select(float[], int)","u":"select(float[],int)"},{"p":"smile.data","c":"DataFrame","l":"select(int...)"},{"p":"smile.data","c":"IndexDataFrame","l":"select(int...)"},{"p":"smile.sort","c":"QuickSelect","l":"select(int[], int)","u":"select(int[],int)"},{"p":"smile.data","c":"DataFrame","l":"select(String...)","u":"select(java.lang.String...)"},{"p":"smile.sort","c":"QuickSelect","l":"select(T[], int)","u":"select(T[],int)"},{"p":"smile.validation","c":"ClassificationMetrics","l":"sensitivity"},{"p":"smile.validation.metric","c":"Sensitivity","l":"Sensitivity()","u":"%3Cinit%3E()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"SENT"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"sentencePiece(String)","u":"sentencePiece(java.lang.String)"},{"p":"smile.llm.tokenizer","c":"SentencePiece","l":"SentencePiece(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.deep.layer","c":"SequentialBlock","l":"SequentialBlock()","u":"%3Cinit%3E()"},{"p":"smile.deep.layer","c":"SequentialBlock","l":"SequentialBlock(Layer...)","u":"%3Cinit%3E(smile.deep.layer.Layer...)"},{"p":"smile.deep.layer","c":"SequentialBlock","l":"SequentialBlock(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"set(BigMatrix)","u":"set(smile.math.matrix.BigMatrix)"},{"p":"smile.math","c":"Complex.Array","l":"set(int, Complex)","u":"set(int,smile.math.Complex)"},{"p":"smile.math","c":"Complex.Array","l":"set(int, double)","u":"set(int,double)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"set(int, double)","u":"set(int,double)"},{"p":"smile.util","c":"DoubleArrayList","l":"set(int, double)","u":"set(int,double)"},{"p":"smile.util","c":"SparseArray","l":"set(int, double)","u":"set(int,double)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"set(int, float)","u":"set(int,float)"},{"p":"smile.util","c":"IntArrayList","l":"set(int, int)","u":"set(int,int)"},{"p":"smile.math.matrix","c":"BandMatrix","l":"set(int, int, double)","u":"set(int,int,double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"set(int, int, double)","u":"set(int,int,double)"},{"p":"smile.math.matrix","c":"IMatrix","l":"set(int, int, double)","u":"set(int,int,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"set(int, int, double)","u":"set(int,int,double)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"set(int, int, double)","u":"set(int,int,double)"},{"p":"smile.util","c":"Array2D","l":"set(int, int, double)","u":"set(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"set(int, int, float)","u":"set(int,int,float)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"set(int, int, float)","u":"set(int,int,float)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"set(int, int, float)","u":"set(int,int,float)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"set(int, int, float)","u":"set(int,int,float)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"set(int, int, float)","u":"set(int,int,float)"},{"p":"smile.util","c":"IntArray2D","l":"set(int, int, int)","u":"set(int,int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"set(Matrix)","u":"set(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"set(Matrix)","u":"set(smile.math.matrix.Matrix)"},{"p":"smile.nlp","c":"AnchorText","l":"setAnchor(String)","u":"setAnchor(java.lang.String)"},{"p":"smile.nlp","c":"SimpleText","l":"setAnchor(String)","u":"setAnchor(java.lang.String)"},{"p":"smile.plot.swing","c":"Canvas","l":"setAxisLabel(int, String)","u":"setAxisLabel(int,java.lang.String)"},{"p":"smile.plot.swing","c":"Canvas","l":"setAxisLabels(String...)","u":"setAxisLabels(java.lang.String...)"},{"p":"smile.plot.swing","c":"Base","l":"setBound(double[], double[])","u":"setBound(double[],double[])"},{"p":"smile.plot.swing","c":"Canvas","l":"setBound(double[], double[])","u":"setBound(double[],double[])"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"setClipNorm(double)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"setClipValue(double)"},{"p":"smile.plot.swing","c":"Graphics","l":"setColor(Color)","u":"setColor(java.awt.Color)"},{"p":"smile.deep.tensor","c":"Device","l":"setDefaultDevice()"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"setDescription(String)","u":"setDescription(java.lang.String)"},{"p":"smile.vq.hebb","c":"Neuron","l":"setEdgeAge(Neuron, int)","u":"setEdgeAge(smile.vq.hebb.Neuron,int)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"setFocusBorder(Border)","u":"setFocusBorder(javax.swing.border.Border)"},{"p":"smile.plot.swing","c":"Graphics","l":"setFont(Font)","u":"setFont(java.awt.Font)"},{"p":"smile.plot.swing","c":"Axis","l":"setFrameVisible(boolean)"},{"p":"smile.plot.swing","c":"Graphics","l":"setGraphics(Graphics2D, int, int)","u":"setGraphics(java.awt.Graphics2D,int,int)"},{"p":"smile.plot.swing","c":"Axis","l":"setGridVisible(boolean)"},{"p":"smile.plot.swing","c":"Axis","l":"setLabel(String)","u":"setLabel(java.lang.String)"},{"p":"smile.classification","c":"LogisticRegression","l":"setLearningRate(double)"},{"p":"smile.classification","c":"Maxent","l":"setLearningRate(double)"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"setLearningRate(double)"},{"p":"smile.deep","c":"Optimizer","l":"setLearningRate(double)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"setLearningRate(TimeFunction)","u":"setLearningRate(smile.math.TimeFunction)"},{"p":"smile.deep","c":"Model","l":"setLearningRateSchedule(TimeFunction)","u":"setLearningRateSchedule(smile.math.TimeFunction)"},{"p":"smile.plot.swing","c":"Canvas","l":"setLegendVisible(boolean)"},{"p":"smile.gap","c":"GeneticAlgorithm","l":"setLocalSearchSteps(int)"},{"p":"smile.plot.swing","c":"Canvas","l":"setMargin(double)"},{"p":"smile.swing.table","c":"ButtonCellRenderer","l":"setMnemonic(int)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"setMomentum(TimeFunction)","u":"setMomentum(smile.math.TimeFunction)"},{"p":"smile.swing.table","c":"PageTableModel","l":"setPage(int)"},{"p":"smile.swing.table","c":"PageTableModel","l":"setPageSize(int)"},{"p":"smile.plot.swing","c":"Graphics","l":"setPaint(Paint)","u":"setPaint(java.awt.Paint)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"setParameters(Properties)","u":"setParameters(java.util.Properties)"},{"p":"smile.neighbor.lsh","c":"Probe","l":"setProb(PrZ[])","u":"setProb(smile.neighbor.lsh.PrZ[])"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"setRMSProp(double, double)","u":"setRMSProp(double,double)"},{"p":"smile.plot.swing","c":"Axis","l":"setRotation(double)"},{"p":"smile.math.random","c":"MersenneTwister","l":"setSeed(int)"},{"p":"smile.math.random","c":"MersenneTwister","l":"setSeed(int[])"},{"p":"smile.math","c":"MathEx","l":"setSeed(long)"},{"p":"smile.math.random","c":"MersenneTwister","l":"setSeed(long)"},{"p":"smile.math.random","c":"MersenneTwister64","l":"setSeed(long)"},{"p":"smile.math.random","c":"RandomNumberGenerator","l":"setSeed(long)"},{"p":"smile.math","c":"Random","l":"setSeed(long)"},{"p":"smile.math.random","c":"UniversalGenerator","l":"setSeed(long)"},{"p":"smile.math.random","c":"MersenneTwister64","l":"setSeed(long[])"},{"p":"smile.swing","c":"FontChooser","l":"setSelectedFont(Font)","u":"setSelectedFont(java.awt.Font)"},{"p":"smile.swing","c":"FontChooser","l":"setSelectedFontFamily(String)","u":"setSelectedFontFamily(java.lang.String)"},{"p":"smile.swing","c":"FontChooser","l":"setSelectedFontSize(int)"},{"p":"smile.swing","c":"FontChooser","l":"setSelectedFontStyle(int)"},{"p":"smile.plot.swing","c":"Graphics","l":"setStroke(Stroke)","u":"setStroke(java.awt.Stroke)"},{"p":"smile.plot.swing","c":"Axis","l":"setTicks(String[], double[])","u":"setTicks(java.lang.String[],double[])"},{"p":"smile.plot.swing","c":"Axis","l":"setTickVisible(boolean)"},{"p":"smile.plot.swing","c":"Canvas","l":"setTitle(String)","u":"setTitle(java.lang.String)"},{"p":"smile.plot.swing","c":"Canvas","l":"setTitleColor(Color)","u":"setTitleColor(java.awt.Color)"},{"p":"smile.plot.swing","c":"Canvas","l":"setTitleFont(Font)","u":"setTitleFont(java.awt.Font)"},{"p":"smile.swing.table","c":"ByteArrayCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"DoubleArrayCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"FloatArrayCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"FontCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"IntegerArrayCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"LongArrayCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"NumberCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.swing.table","c":"ShortArrayCellRenderer","l":"setValue(Object)","u":"setValue(java.lang.Object)"},{"p":"smile.graph","c":"AdjacencyList","l":"setWeight(int, int, double)","u":"setWeight(int,int,double)"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"setWeight(int, int, double)","u":"setWeight(int,int,double)"},{"p":"smile.graph","c":"Graph","l":"setWeight(int, int, double)","u":"setWeight(int,int,double)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"setWeightDecay(double)"},{"p":"smile.base.mlp.optimizer","c":"SGD","l":"SGD()","u":"%3Cinit%3E()"},{"p":"smile.deep","c":"Optimizer","l":"SGD(Model, double)","u":"SGD(smile.deep.Model,double)"},{"p":"smile.deep","c":"Optimizer","l":"SGD(Model, double, double, double, double, boolean)","u":"SGD(smile.deep.Model,double,double,double,double,boolean)"},{"p":"smile.base.mlp.optimizer","c":"SGD","l":"SGD(TimeFunction)","u":"%3Cinit%3E(smile.math.TimeFunction)"},{"p":"smile.base.mlp.optimizer","c":"SGD","l":"SGD(TimeFunction, TimeFunction)","u":"%3Cinit%3E(smile.math.TimeFunction,smile.math.TimeFunction)"},{"p":"smile.base.cart","c":"CART","l":"shap(DataFrame)","u":"shap(smile.data.DataFrame)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"shap(DataFrame)","u":"shap(smile.data.DataFrame)"},{"p":"smile.feature.importance","c":"TreeSHAP","l":"shap(DataFrame)","u":"shap(smile.data.DataFrame)"},{"p":"smile.feature.importance","c":"SHAP","l":"shap(Stream<T>)","u":"shap(java.util.stream.Stream)"},{"p":"smile.feature.importance","c":"SHAP","l":"shap(T)"},{"p":"smile.base.cart","c":"CART","l":"shap(Tuple)","u":"shap(smile.data.Tuple)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"shap(Tuple)","u":"shap(smile.data.Tuple)"},{"p":"smile.feature.importance","c":"TreeSHAP","l":"shap(Tuple)","u":"shap(smile.data.Tuple)"},{"p":"smile.deep.tensor","c":"Tensor","l":"shape()"},{"p":"smile.plot.swing","c":"Shape","l":"Shape()","u":"%3Cinit%3E()"},{"p":"smile.plot.swing","c":"Shape","l":"Shape(Color)","u":"%3Cinit%3E(java.awt.Color)"},{"p":"smile.plot.vega","c":"Mark","l":"shape(String)","u":"shape(java.lang.String)"},{"p":"smile.interpolation","c":"ShepardInterpolation","l":"ShepardInterpolation(double[][], double[])","u":"%3Cinit%3E(double[][],double[])"},{"p":"smile.interpolation","c":"ShepardInterpolation","l":"ShepardInterpolation(double[][], double[], double)","u":"%3Cinit%3E(double[][],double[],double)"},{"p":"smile.interpolation","c":"ShepardInterpolation1D","l":"ShepardInterpolation1D(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"smile.interpolation","c":"ShepardInterpolation1D","l":"ShepardInterpolation1D(double[], double[], double)","u":"%3Cinit%3E(double[],double[],double)"},{"p":"smile.interpolation","c":"ShepardInterpolation2D","l":"ShepardInterpolation2D(double[], double[], double[])","u":"%3Cinit%3E(double[],double[],double[])"},{"p":"smile.interpolation","c":"ShepardInterpolation2D","l":"ShepardInterpolation2D(double[], double[], double[], double)","u":"%3Cinit%3E(double[],double[],double[],double)"},{"p":"smile.neighbor.lsh","c":"Probe","l":"shift()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"ShiftedGeometricDistribution(double)","u":"%3Cinit%3E(double)"},{"p":"smile.data.type","c":"DataType.ID","l":"Short"},{"p":"smile.swing.table","c":"ShortArrayCellRenderer","l":"ShortArrayCellRenderer()","u":"%3Cinit%3E()"},{"p":"smile.data.type","c":"DataTypes","l":"ShortArrayType"},{"p":"smile.data.type","c":"DataTypes","l":"ShortObjectType"},{"p":"smile.data.type","c":"DataTypes","l":"ShortType"},{"p":"smile.deep.tensor","c":"Tensor","l":"shortValue()"},{"p":"smile.data","c":"DataFrame","l":"shortVector(Enum<?>)","u":"shortVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"shortVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"shortVector(int)"},{"p":"smile.data","c":"DataFrame","l":"shortVector(String)","u":"shortVector(java.lang.String)"},{"p":"smile.plot.swing","c":"Headless","l":"show()"},{"p":"smile.plot.vega","c":"VegaLite","l":"show()"},{"p":"smile.plot.vega","c":"VegaLite","l":"show(boolean)"},{"p":"smile.swing","c":"FontChooser","l":"showDialog(Component)","u":"showDialog(java.awt.Component)"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"SI"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"SI"},{"p":"smile.clustering","c":"SIB","l":"SIB(double, double[][], int[])","u":"%3Cinit%3E(double,double[][],int[])"},{"p":"smile.sort","c":"Sort","l":"siftDown(double[], int, int)","u":"siftDown(double[],int,int)"},{"p":"smile.sort","c":"Sort","l":"siftDown(float[], int, int)","u":"siftDown(float[],int,int)"},{"p":"smile.sort","c":"Sort","l":"siftDown(int[], int, int)","u":"siftDown(int[],int,int)"},{"p":"smile.sort","c":"Sort","l":"siftDown(T[], int, int)","u":"siftDown(T[],int,int)"},{"p":"smile.sort","c":"Sort","l":"siftUp(double[], int)","u":"siftUp(double[],int)"},{"p":"smile.sort","c":"Sort","l":"siftUp(float[], int)","u":"siftUp(float[],int)"},{"p":"smile.sort","c":"Sort","l":"siftUp(int[], int)","u":"siftUp(int[],int)"},{"p":"smile.sort","c":"Sort","l":"siftUp(T[], int)","u":"siftUp(T[],int)"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"sigma"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"sigma"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"sigma"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"sigma()"},{"p":"smile.base.mlp","c":"OutputFunction","l":"SIGMOID"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"sigmoid()"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"sigmoid()"},{"p":"smile.base.mlp.activation","c":"Sigmoid","l":"Sigmoid()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"Sigmoid","l":"Sigmoid(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.math","c":"MathEx","l":"sigmoid(double)"},{"p":"smile.base.mlp","c":"Layer","l":"sigmoid(int)"},{"p":"smile.base.mlp","c":"Layer","l":"sigmoid(int, double)","u":"sigmoid(int,double)"},{"p":"smile.deep.layer","c":"Layer","l":"sigmoid(int, int)","u":"sigmoid(int,int)"},{"p":"smile.data.formula","c":"Terms","l":"sign(String)","u":"sign(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"sign(Term)","u":"sign(smile.data.formula.Term)"},{"p":"smile.feature.selection","c":"SignalNoiseRatio","l":"SignalNoiseRatio(String, double)","u":"%3Cinit%3E(java.lang.String,double)"},{"p":"smile.stat","c":"Hypothesis","l":"significance(double)"},{"p":"smile.data.formula","c":"Terms","l":"signum(String)","u":"signum(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"signum(Term)","u":"signum(smile.data.formula.Term)"},{"p":"smile.deep.activation","c":"SiLU","l":"SiLU(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.deep.layer","c":"Layer","l":"silu(int, int)","u":"silu(int,int)"},{"p":"smile.deep.layer","c":"Layer","l":"silu(int, int, double)","u":"silu(int,int,double)"},{"p":"smile.nlp","c":"SimpleCorpus","l":"SimpleCorpus()","u":"%3Cinit%3E()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"SimpleCorpus(SentenceSplitter, Tokenizer, StopWords, Punctuations)","u":"%3Cinit%3E(smile.nlp.tokenizer.SentenceSplitter,smile.nlp.tokenizer.Tokenizer,smile.nlp.dictionary.StopWords,smile.nlp.dictionary.Punctuations)"},{"p":"smile.nlp.dictionary","c":"SimpleDictionary","l":"SimpleDictionary(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"SimpleFileFilter(String, Collection<String>)","u":"%3Cinit%3E(java.lang.String,java.util.Collection)"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"SimpleFileFilter(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"smile.swing","c":"FileChooser.SimpleFileFilter","l":"SimpleFileFilter(String, String...)","u":"%3Cinit%3E(java.lang.String,java.lang.String...)"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"SimpleImputer(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"smile.nlp","c":"SimpleText","l":"SimpleText(String, String, String, String[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])"},{"p":"smile.nlp.tokenizer","c":"SimpleTokenizer","l":"SimpleTokenizer()","u":"%3Cinit%3E()"},{"p":"smile.nlp.tokenizer","c":"SimpleTokenizer","l":"SimpleTokenizer(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sin_()"},{"p":"smile.deep.tensor","c":"Tensor","l":"sin()"},{"p":"smile.math","c":"Complex","l":"sin()"},{"p":"smile.data.formula","c":"Terms","l":"sin(String)","u":"sin(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"sin(Term)","u":"sin(smile.data.formula.Term)"},{"p":"smile.io","c":"JSON.Mode","l":"SINGLE_LINE"},{"p":"smile.gap","c":"Crossover","l":"SINGLE_POINT"},{"p":"smile.clustering.linkage","c":"SingleLinkage","l":"SingleLinkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"SingleLinkage","l":"SingleLinkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.data.formula","c":"Terms","l":"sinh(String)","u":"sinh(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"sinh(Term)","u":"sinh(smile.data.formula.Term)"},{"p":"smile.base.cart","c":"LeafNode","l":"size"},{"p":"smile.clustering","c":"PartitionClustering","l":"size"},{"p":"smile.validation","c":"ClassificationMetrics","l":"size"},{"p":"smile.validation","c":"RegressionMetrics","l":"size"},{"p":"smile.anomaly","c":"IsolationForest","l":"size()"},{"p":"smile.association","c":"FPGrowth","l":"size()"},{"p":"smile.association","c":"FPTree","l":"size()"},{"p":"smile.base.cart","c":"CART","l":"size()"},{"p":"smile.base.cart","c":"InternalNode","l":"size()"},{"p":"smile.base.cart","c":"LeafNode","l":"size()"},{"p":"smile.base.cart","c":"Node","l":"size()"},{"p":"smile.classification","c":"AdaBoost","l":"size()"},{"p":"smile.classification","c":"GradientTreeBoost","l":"size()"},{"p":"smile.classification","c":"RandomForest","l":"size()"},{"p":"smile.clustering.linkage","c":"Linkage","l":"size()"},{"p":"smile.data","c":"DataFrame","l":"size()"},{"p":"smile.data","c":"Dataset","l":"size()"},{"p":"smile.data.formula","c":"FactorInteraction","l":"size()"},{"p":"smile.data","c":"IndexDataFrame","l":"size()"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"size()"},{"p":"smile.data.vector","c":"BaseVector","l":"size()"},{"p":"smile.deep","c":"Dataset","l":"size()"},{"p":"smile.math.matrix","c":"BandMatrix","l":"size()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"size()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"size()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"size()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"size()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"size()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"size()"},{"p":"smile.math.matrix","c":"IMatrix","l":"size()"},{"p":"smile.math.matrix","c":"Matrix","l":"size()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"size()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"size()"},{"p":"smile.nlp","c":"Corpus","l":"size()"},{"p":"smile.nlp.dictionary","c":"Dictionary","l":"size()"},{"p":"smile.nlp.dictionary","c":"EnglishDictionary","l":"size()"},{"p":"smile.nlp.dictionary","c":"EnglishPunctuations","l":"size()"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"size()"},{"p":"smile.nlp.dictionary","c":"SimpleDictionary","l":"size()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"size()"},{"p":"smile.nlp","c":"SimpleText","l":"size()"},{"p":"smile.nlp","c":"TextTerms","l":"size()"},{"p":"smile.nlp","c":"Trie","l":"size()"},{"p":"smile.regression","c":"GradientTreeBoost","l":"size()"},{"p":"smile.regression","c":"RandomForest","l":"size()"},{"p":"smile.sort","c":"HeapSelect","l":"size()"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"size()"},{"p":"smile.stat.distribution","c":"Mixture","l":"size()"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"size()"},{"p":"smile.util","c":"DoubleArrayList","l":"size()"},{"p":"smile.util","c":"IntArrayList","l":"size()"},{"p":"smile.util","c":"IntDoubleHashMap","l":"size()"},{"p":"smile.util","c":"IntHashSet","l":"size()"},{"p":"smile.util","c":"IntSet","l":"size()"},{"p":"smile.util","c":"SparseArray","l":"size()"},{"p":"smile.vision","c":"ImageDataset","l":"size()"},{"p":"smile.deep.tensor","c":"Tensor","l":"size(int)"},{"p":"smile.plot.vega","c":"Mark","l":"size(int)"},{"p":"smile.plot.swing","c":"Palette","l":"SKY_BLUE"},{"p":"smile.plot.swing","c":"Palette","l":"SLATE_BLUE"},{"p":"smile.plot.swing","c":"Palette","l":"SLATE_GRAY"},{"p":"smile.math","c":"MathEx","l":"slice(double[], int[])","u":"slice(double[],int[])"},{"p":"smile.math","c":"MathEx","l":"slice(E[], int[])","u":"slice(E[],int[])"},{"p":"smile.math","c":"MathEx","l":"slice(float[], int[])","u":"slice(float[],int[])"},{"p":"smile.data","c":"DataFrame","l":"slice(int, int)","u":"slice(int,int)"},{"p":"smile.util","c":"Bytes","l":"slice(int, int)","u":"slice(int,int)"},{"p":"smile.math","c":"MathEx","l":"slice(int[], int[])","u":"slice(int[],int[])"},{"p":"smile.deep.tensor","c":"Index","l":"slice(Integer, Integer)","u":"slice(java.lang.Integer,java.lang.Integer)"},{"p":"smile.deep.tensor","c":"Index","l":"slice(Integer, Integer, Integer)","u":"slice(java.lang.Integer,java.lang.Integer,java.lang.Integer)"},{"p":"smile.deep.tensor","c":"Index","l":"slice(Long, Long)","u":"slice(java.lang.Long,java.lang.Long)"},{"p":"smile.deep.tensor","c":"Index","l":"slice(Long, Long, Long)","u":"slice(java.lang.Long,java.lang.Long,java.lang.Long)"},{"p":"smile.plot.swing","c":"Axis","l":"slices()"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"SM"},{"p":"smile.math.matrix","c":"ARPACK.SymmOption","l":"SM"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"SM"},{"p":"smile.math.matrix.fp32","c":"ARPACK.SymmOption","l":"SM"},{"p":"smile.math.kernel","c":"Matern","l":"smoothness()"},{"p":"smile.neighbor","c":"SNLSH","l":"SNLSH(int, SimHash<K>)","u":"%3Cinit%3E(int,smile.hash.SimHash)"},{"p":"smile.classification","c":"AdaBoost","l":"soft()"},{"p":"smile.classification","c":"Classifier","l":"soft()"},{"p":"smile.classification","c":"DecisionTree","l":"soft()"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"soft()"},{"p":"smile.classification","c":"GradientTreeBoost","l":"soft()"},{"p":"smile.classification","c":"KNN","l":"soft()"},{"p":"smile.classification","c":"LDA","l":"soft()"},{"p":"smile.classification","c":"LogisticRegression","l":"soft()"},{"p":"smile.classification","c":"Maxent","l":"soft()"},{"p":"smile.classification","c":"MLP","l":"soft()"},{"p":"smile.classification","c":"NaiveBayes","l":"soft()"},{"p":"smile.classification","c":"OneVersusOne","l":"soft()"},{"p":"smile.classification","c":"OneVersusRest","l":"soft()"},{"p":"smile.classification","c":"QDA","l":"soft()"},{"p":"smile.classification","c":"RandomForest","l":"soft()"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"soft()"},{"p":"smile.base.mlp","c":"OutputFunction","l":"SOFTMAX"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"softmax()"},{"p":"smile.base.mlp.activation","c":"Softmax","l":"Softmax()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"Softmax","l":"Softmax()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"MathEx","l":"softmax(double[])"},{"p":"smile.math","c":"MathEx","l":"softmax(double[], int)","u":"softmax(double[],int)"},{"p":"smile.deep.layer","c":"Layer","l":"softmax(int, int)","u":"softmax(int,int)"},{"p":"smile.deep.activation","c":"SoftShrink","l":"SoftShrink()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"SoftShrink","l":"SoftShrink(double)","u":"%3Cinit%3E(double)"},{"p":"smile.deep.layer","c":"Layer","l":"softShrink(int, int)","u":"softShrink(int,int)"},{"p":"smile.plot.swing","c":"Line.Style","l":"SOLID"},{"p":"smile.math.matrix","c":"BigMatrix.Cholesky","l":"solve(BigMatrix)","u":"solve(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"solve(BigMatrix)","u":"solve(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"solve(BigMatrix)","u":"solve(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix","c":"BandMatrix.Cholesky","l":"solve(double[])"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"solve(double[])"},{"p":"smile.math.matrix","c":"BigMatrix.Cholesky","l":"solve(double[])"},{"p":"smile.math.matrix","c":"BigMatrix.LU","l":"solve(double[])"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"solve(double[])"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"solve(double[])"},{"p":"smile.math.matrix","c":"Matrix.Cholesky","l":"solve(double[])"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"solve(double[])"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"solve(double[])"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"solve(double[])"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"solve(double[])"},{"p":"smile.math.matrix","c":"SymmMatrix.Cholesky","l":"solve(double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"solve(double[], double[])","u":"solve(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"solve(double[], double[], double[], double[])","u":"solve(double[],double[],double[],double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"solve(double[], double[], IMatrix.Preconditioner, double, int, int)","u":"solve(double[],double[],smile.math.matrix.IMatrix.Preconditioner,double,int,int)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.Cholesky","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix.Cholesky","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.Cholesky","l":"solve(float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"solve(float[], float[])","u":"solve(float[],float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"solve(float[], float[], IMatrix.Preconditioner, float, int, int)","u":"solve(float[],float[],smile.math.matrix.fp32.IMatrix.Preconditioner,float,int,int)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.Cholesky","l":"solve(Matrix)","u":"solve(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix.LU","l":"solve(Matrix)","u":"solve(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix.Cholesky","l":"solve(Matrix)","u":"solve(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix.LU","l":"solve(Matrix)","u":"solve(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"solve(Matrix)","u":"solve(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.BunchKaufman","l":"solve(Matrix)","u":"solve(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix.Cholesky","l":"solve(Matrix)","u":"solve(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"BandMatrix.Cholesky","l":"solve(Matrix)","u":"solve(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"BandMatrix.LU","l":"solve(Matrix)","u":"solve(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"Matrix.Cholesky","l":"solve(Matrix)","u":"solve(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"Matrix.LU","l":"solve(Matrix)","u":"solve(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"solve(Matrix)","u":"solve(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"SymmMatrix.BunchKaufman","l":"solve(Matrix)","u":"solve(smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"SymmMatrix.Cholesky","l":"solve(Matrix)","u":"solve(smile.math.matrix.Matrix)"},{"p":"smile.vq","c":"SOM","l":"SOM(double[][][], TimeFunction, Neighborhood)","u":"%3Cinit%3E(double[][][],smile.math.TimeFunction,smile.vq.Neighborhood)"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"sort()"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"sort()"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"sort()"},{"p":"smile.sort","c":"DoubleHeapSelect","l":"sort()"},{"p":"smile.sort","c":"FloatHeapSelect","l":"sort()"},{"p":"smile.sort","c":"HeapSelect","l":"sort()"},{"p":"smile.sort","c":"IntHeapSelect","l":"sort()"},{"p":"smile.util","c":"SparseArray","l":"sort()"},{"p":"smile.sort","c":"HeapSort","l":"sort(double[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(double[])"},{"p":"smile.sort","c":"ShellSort","l":"sort(double[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(double[], double[])","u":"sort(double[],double[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(double[], double[], int)","u":"sort(double[],double[],int)"},{"p":"smile.sort","c":"QuickSort","l":"sort(double[], int[])","u":"sort(double[],int[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(double[], int[], int)","u":"sort(double[],int[],int)"},{"p":"smile.sort","c":"QuickSort","l":"sort(double[], Object[])","u":"sort(double[],java.lang.Object[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(double[], Object[], int)","u":"sort(double[],java.lang.Object[],int)"},{"p":"smile.math","c":"MathEx","l":"sort(double[][])"},{"p":"smile.sort","c":"HeapSort","l":"sort(float[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(float[])"},{"p":"smile.sort","c":"ShellSort","l":"sort(float[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(float[], float[])","u":"sort(float[],float[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(float[], float[], int)","u":"sort(float[],float[],int)"},{"p":"smile.sort","c":"QuickSort","l":"sort(float[], int[])","u":"sort(float[],int[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(float[], int[], int)","u":"sort(float[],int[],int)"},{"p":"smile.sort","c":"QuickSort","l":"sort(float[], Object[])","u":"sort(float[],java.lang.Object[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(float[], Object[], int)","u":"sort(float[],java.lang.Object[],int)"},{"p":"smile.sort","c":"HeapSort","l":"sort(int[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(int[])"},{"p":"smile.sort","c":"ShellSort","l":"sort(int[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(int[], double[])","u":"sort(int[],double[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(int[], double[], int)","u":"sort(int[],double[],int)"},{"p":"smile.sort","c":"QuickSort","l":"sort(int[], int[])","u":"sort(int[],int[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(int[], int[], int)","u":"sort(int[],int[],int)"},{"p":"smile.sort","c":"QuickSort","l":"sort(int[], Object[])","u":"sort(int[],java.lang.Object[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(int[], Object[], int)","u":"sort(int[],java.lang.Object[],int)"},{"p":"smile.plot.vega","c":"StackTransform","l":"sort(SortField...)","u":"sort(smile.plot.vega.SortField...)"},{"p":"smile.plot.vega","c":"WindowTransform","l":"sort(SortField...)","u":"sort(smile.plot.vega.SortField...)"},{"p":"smile.plot.vega","c":"Field","l":"sort(String)","u":"sort(java.lang.String)"},{"p":"smile.plot.vega","c":"StackTransform","l":"sort(String...)","u":"sort(java.lang.String...)"},{"p":"smile.plot.vega","c":"WindowTransform","l":"sort(String...)","u":"sort(java.lang.String...)"},{"p":"smile.sort","c":"HeapSort","l":"sort(T[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(T[])"},{"p":"smile.sort","c":"ShellSort","l":"sort(T[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(T[], int[])","u":"sort(T[],int[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(T[], int[], int)","u":"sort(T[],int[],int)"},{"p":"smile.sort","c":"QuickSort","l":"sort(T[], int[], int, Comparator<T>)","u":"sort(T[],int[],int,java.util.Comparator)"},{"p":"smile.sort","c":"QuickSort","l":"sort(T[], Object[])","u":"sort(T[],java.lang.Object[])"},{"p":"smile.sort","c":"QuickSort","l":"sort(T[], Object[], int)","u":"sort(T[],java.lang.Object[],int)"},{"p":"smile.graph","c":"AdjacencyList","l":"sortbfs()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"sortbfs()"},{"p":"smile.graph","c":"Graph","l":"sortbfs()"},{"p":"smile.graph","c":"AdjacencyList","l":"sortdfs()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"sortdfs()"},{"p":"smile.graph","c":"Graph","l":"sortdfs()"},{"p":"smile.plot.vega","c":"SortField","l":"SortField(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"FacetField","l":"spacing(double)"},{"p":"smile.plot.vega","c":"Field","l":"spacing(double)"},{"p":"smile.plot.vega","c":"Concat","l":"spacing(int)"},{"p":"smile.plot.vega","c":"Facet","l":"spacing(int)"},{"p":"smile.plot.vega","c":"FacetField","l":"spacing(int)"},{"p":"smile.plot.vega","c":"Repeat","l":"spacing(int)"},{"p":"smile.plot.vega","c":"ViewLayoutComposition","l":"spacing(int)"},{"p":"smile.plot.vega","c":"Concat","l":"spacing(int, int)","u":"spacing(int,int)"},{"p":"smile.plot.vega","c":"Facet","l":"spacing(int, int)","u":"spacing(int,int)"},{"p":"smile.plot.vega","c":"Repeat","l":"spacing(int, int)","u":"spacing(int,int)"},{"p":"smile.plot.vega","c":"ViewLayoutComposition","l":"spacing(int, int)","u":"spacing(int,int)"},{"p":"smile.feature.extraction","c":"RandomProjection","l":"sparse(int, int, String...)","u":"sparse(int,int,java.lang.String...)"},{"p":"smile.base.svm","c":"LinearKernelMachine","l":"sparse(int, KernelMachine<SparseArray>)","u":"sparse(int,smile.base.svm.KernelMachine)"},{"p":"smile.math.kernel","c":"MercerKernel","l":"sparse(String)","u":"sparse(java.lang.String)"},{"p":"smile.util","c":"SparseArray","l":"SparseArray()","u":"%3Cinit%3E()"},{"p":"smile.util","c":"SparseArray","l":"SparseArray(int)","u":"%3Cinit%3E(int)"},{"p":"smile.util","c":"SparseArray","l":"SparseArray(List<SparseArray.Entry>)","u":"%3Cinit%3E(java.util.List)"},{"p":"smile.util","c":"SparseArray","l":"SparseArray(Stream<SparseArray.Entry>)","u":"%3Cinit%3E(java.util.stream.Stream)"},{"p":"smile.deep.tensor","c":"Layout","l":"SparseBSC"},{"p":"smile.deep.tensor","c":"Layout","l":"SparseBSR"},{"p":"smile.math.distance","c":"SparseChebyshevDistance","l":"SparseChebyshevDistance()","u":"%3Cinit%3E()"},{"p":"smile.deep.tensor","c":"Layout","l":"SparseCOO"},{"p":"smile.deep.tensor","c":"Layout","l":"SparseCSC"},{"p":"smile.deep.tensor","c":"Layout","l":"SparseCSR"},{"p":"smile.feature.extraction","c":"SparseEncoder","l":"SparseEncoder(StructType, String...)","u":"%3Cinit%3E(smile.data.type.StructType,java.lang.String...)"},{"p":"smile.math.distance","c":"SparseEuclideanDistance","l":"SparseEuclideanDistance()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"SparseEuclideanDistance","l":"SparseEuclideanDistance(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"SparseGaussianKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"SparseGaussianKernel","l":"SparseGaussianKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"SparseHyperbolicTangentKernel()","u":"%3Cinit%3E()"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"SparseHyperbolicTangentKernel(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"SparseHyperbolicTangentKernel","l":"SparseHyperbolicTangentKernel(double, double, double[], double[])","u":"%3Cinit%3E(double,double,double[],double[])"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"SparseLaplacianKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"SparseLaplacianKernel","l":"SparseLaplacianKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"SparseLinearKernel()","u":"%3Cinit%3E()"},{"p":"smile.classification","c":"SparseLogisticRegression","l":"SparseLogisticRegression(int, double, double, IntSet)","u":"%3Cinit%3E(int,double,double,smile.util.IntSet)"},{"p":"smile.math.distance","c":"SparseManhattanDistance","l":"SparseManhattanDistance()","u":"%3Cinit%3E()"},{"p":"smile.math.distance","c":"SparseManhattanDistance","l":"SparseManhattanDistance(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"SparseMaternKernel(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.math.kernel","c":"SparseMaternKernel","l":"SparseMaternKernel(double, double, double, double)","u":"%3Cinit%3E(double,double,double,double)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"SparseMatrix(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"SparseMatrix(double[][], double)","u":"%3Cinit%3E(double[][],double)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"SparseMatrix(float[][])","u":"%3Cinit%3E(float[][])"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"SparseMatrix(float[][], float)","u":"%3Cinit%3E(float[][],float)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"SparseMatrix(int, int, double[], int[], int[])","u":"%3Cinit%3E(int,int,double[],int[],int[])"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"SparseMatrix(int, int, float[], int[], int[])","u":"%3Cinit%3E(int,int,float[],int[],int[])"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"SparseMatrixPlot(SparseMatrix, Color)","u":"%3Cinit%3E(smile.math.matrix.SparseMatrix,java.awt.Color)"},{"p":"smile.plot.swing","c":"SparseMatrixPlot","l":"SparseMatrixPlot(SparseMatrix, Color[])","u":"%3Cinit%3E(smile.math.matrix.SparseMatrix,java.awt.Color[])"},{"p":"smile.math.distance","c":"SparseMinkowskiDistance","l":"SparseMinkowskiDistance(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.distance","c":"SparseMinkowskiDistance","l":"SparseMinkowskiDistance(int, double[])","u":"%3Cinit%3E(int,double[])"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"SparsePolynomialKernel(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"SparsePolynomialKernel(int, double, double)","u":"%3Cinit%3E(int,double,double)"},{"p":"smile.math.kernel","c":"SparsePolynomialKernel","l":"SparsePolynomialKernel(int, double, double, double[], double[])","u":"%3Cinit%3E(int,double,double,double[],double[])"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"SparseThinPlateSplineKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"SparseThinPlateSplineKernel","l":"SparseThinPlateSplineKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.math","c":"MathEx","l":"spearman(double[], double[])","u":"spearman(double[],double[])"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"spearman(double[], double[])","u":"spearman(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"spearman(float[], float[])","u":"spearman(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"spearman(int[], int[])","u":"spearman(int[],int[])"},{"p":"smile.plot.vega","c":"VegaLite","l":"spec()"},{"p":"smile.plot.vega","c":"ViewComposition","l":"spec()"},{"p":"smile.validation","c":"ClassificationMetrics","l":"specificity"},{"p":"smile.validation.metric","c":"Specificity","l":"Specificity()","u":"%3Cinit%3E()"},{"p":"smile.clustering","c":"SpectralClustering","l":"SpectralClustering(double, int, int[])","u":"%3Cinit%3E(double,int,int[])"},{"p":"smile.interpolation.variogram","c":"SphericalVariogram","l":"SphericalVariogram(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.interpolation.variogram","c":"SphericalVariogram","l":"SphericalVariogram(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.base.cart","c":"Split","l":"Split(LeafNode, int, double, int, int, int, int)","u":"%3Cinit%3E(smile.base.cart.LeafNode,int,double,int,int,int,int)"},{"p":"smile.base.cart","c":"CART","l":"split(Split, PriorityQueue<Split>)","u":"split(smile.base.cart.Split,java.util.PriorityQueue)"},{"p":"smile.nlp.tokenizer","c":"BreakIteratorSentenceSplitter","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"BreakIteratorTokenizer","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"ParagraphSplitter","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"PennTreebankTokenizer","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"SentenceSplitter","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"SimpleParagraphSplitter","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"SimpleSentenceSplitter","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"SimpleTokenizer","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.nlp.tokenizer","c":"Tokenizer","l":"split(String)","u":"split(java.lang.String)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"splom(DataFrame, char, Color)","u":"splom(smile.data.DataFrame,char,java.awt.Color)"},{"p":"smile.plot.swing","c":"PlotGrid","l":"splom(DataFrame, char, String)","u":"splom(smile.data.DataFrame,char,java.lang.String)"},{"p":"smile.math.blas","c":"BLAS","l":"spmv(Layout, UPLO, int, double, double[], double[], int, double, double[], int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],double[],int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spmv(Layout, UPLO, int, double, double[], double[], int, double, double[], int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],double[],int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"spmv(Layout, UPLO, int, double, DoubleBuffer, DoubleBuffer, int, double, DoubleBuffer, int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spmv(Layout, UPLO, int, double, DoubleBuffer, DoubleBuffer, int, double, DoubleBuffer, int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"spmv(Layout, UPLO, int, float, float[], float[], int, float, float[], int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],float[],int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spmv(Layout, UPLO, int, float, float[], float[], int, float, float[], int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],float[],int,float,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"spmv(Layout, UPLO, int, float, FloatBuffer, FloatBuffer, int, float, FloatBuffer, int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spmv(Layout, UPLO, int, float, FloatBuffer, FloatBuffer, int, float, FloatBuffer, int)","u":"spmv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"spr(Layout, UPLO, int, double, double[], int, double[])","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],int,double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spr(Layout, UPLO, int, double, double[], int, double[])","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],int,double[])"},{"p":"smile.math.blas","c":"BLAS","l":"spr(Layout, UPLO, int, double, DoubleBuffer, int, DoubleBuffer)","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spr(Layout, UPLO, int, double, DoubleBuffer, int, DoubleBuffer)","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"BLAS","l":"spr(Layout, UPLO, int, float, float[], int, float[])","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],int,float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spr(Layout, UPLO, int, float, float[], int, float[])","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],int,float[])"},{"p":"smile.math.blas","c":"BLAS","l":"spr(Layout, UPLO, int, float, FloatBuffer, int, FloatBuffer)","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spr(Layout, UPLO, int, float, FloatBuffer, int, FloatBuffer)","u":"spr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"spsv(Layout, UPLO, int, int, double[], int[], double[], int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spsv(Layout, UPLO, int, int, double[], int[], double[], int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"spsv(Layout, UPLO, int, int, DoubleBuffer, IntBuffer, DoubleBuffer, int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spsv(Layout, UPLO, int, int, DoubleBuffer, IntBuffer, DoubleBuffer, int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"spsv(Layout, UPLO, int, int, float[], int[], float[], int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spsv(Layout, UPLO, int, int, float[], int[], float[], int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"spsv(Layout, UPLO, int, int, FloatBuffer, IntBuffer, FloatBuffer, int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"spsv(Layout, UPLO, int, int, FloatBuffer, IntBuffer, FloatBuffer, int)","u":"spsv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrf(Layout, UPLO, int, double[], int[])","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[],int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrf(Layout, UPLO, int, double[], int[])","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,double[],int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrf(Layout, UPLO, int, DoubleBuffer, IntBuffer)","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrf(Layout, UPLO, int, DoubleBuffer, IntBuffer)","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrf(Layout, UPLO, int, float[], int[])","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[],int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrf(Layout, UPLO, int, float[], int[])","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,float[],int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrf(Layout, UPLO, int, FloatBuffer, IntBuffer)","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrf(Layout, UPLO, int, FloatBuffer, IntBuffer)","u":"sptrf(smile.math.blas.Layout,smile.math.blas.UPLO,int,java.nio.FloatBuffer,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrs(Layout, UPLO, int, int, double[], int[], double[], int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrs(Layout, UPLO, int, int, double[], int[], double[], int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrs(Layout, UPLO, int, int, DoubleBuffer, IntBuffer, DoubleBuffer, int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrs(Layout, UPLO, int, int, DoubleBuffer, IntBuffer, DoubleBuffer, int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrs(Layout, UPLO, int, int, float[], int[], float[], int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrs(Layout, UPLO, int, int, float[], int[], float[], int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sptrs(Layout, UPLO, int, int, FloatBuffer, IntBuffer, FloatBuffer, int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sptrs(Layout, UPLO, int, int, FloatBuffer, IntBuffer, FloatBuffer, int)","u":"sptrs(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.data","c":"SQL","l":"SQL()","u":"%3Cinit%3E()"},{"p":"smile.data","c":"SQL","l":"SQL(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation.Method","l":"SQRT"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation.Method","l":"SQRT"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"SQRT"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"SQRT"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"sqrt(int[], int[])","u":"sqrt(int[],int[])"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"sqrt(int[], int[])","u":"sqrt(int[],int[])"},{"p":"smile.data.formula","c":"Terms","l":"sqrt(String)","u":"sqrt(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"sqrt(Term)","u":"sqrt(smile.data.formula.Term)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"square()"},{"p":"smile.math.matrix","c":"IMatrix","l":"square()"},{"p":"smile.math","c":"MathEx","l":"squaredDistance(double[], double[])","u":"squaredDistance(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"squaredDistance(float[], float[])","u":"squaredDistance(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"squaredDistance(int[], int[])","u":"squaredDistance(int[],int[])"},{"p":"smile.math","c":"MathEx","l":"squaredDistance(SparseArray, SparseArray)","u":"squaredDistance(smile.util.SparseArray,smile.util.SparseArray)"},{"p":"smile.math","c":"MathEx","l":"squaredDistanceWithMissingValues(double[], double[])","u":"squaredDistanceWithMissingValues(double[],double[])"},{"p":"smile.vision.layer","c":"SqueezeExcitation","l":"SqueezeExcitation(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.vision.layer","c":"SqueezeExcitation","l":"SqueezeExcitation(int, int, ActivationFunction, ActivationFunction)","u":"%3Cinit%3E(int,int,smile.deep.activation.ActivationFunction,smile.deep.activation.ActivationFunction)"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"SR"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"SR"},{"p":"smile.math","c":"LevenbergMarquardt","l":"sse"},{"p":"smile.feature.selection","c":"SumSquaresRatio","l":"ssr"},{"p":"smile.plot.vega","c":"Field","l":"stack(String)","u":"stack(java.lang.String)"},{"p":"smile.plot.vega","c":"Transform","l":"stack(String, String, String...)","u":"stack(java.lang.String,java.lang.String,java.lang.String...)"},{"p":"smile.plot.swing","c":"Staircase","l":"Staircase(double[][], Color)","u":"%3Cinit%3E(double[][],java.awt.Color)"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"StaircasePlot(Staircase...)","u":"%3Cinit%3E(smile.plot.swing.Staircase...)"},{"p":"smile.plot.swing","c":"StaircasePlot","l":"StaircasePlot(Staircase[], Legend[])","u":"%3Cinit%3E(smile.plot.swing.Staircase[],smile.plot.swing.Legend[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"standardize()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"standardize()"},{"p":"smile.math.matrix","c":"Matrix","l":"standardize()"},{"p":"smile.math","c":"MathEx","l":"standardize(double[])"},{"p":"smile.math","c":"MathEx","l":"standardize(double[][])"},{"p":"smile.feature.transform","c":"Standardizer","l":"Standardizer()","u":"%3Cinit%3E()"},{"p":"smile.math","c":"Scaler","l":"standardizer(double[])"},{"p":"smile.math","c":"Scaler","l":"standardizer(double[], boolean)","u":"standardizer(double[],boolean)"},{"p":"smile.swing","c":"Table.RowHeader","l":"stateChanged(ChangeEvent)","u":"stateChanged(javax.swing.event.ChangeEvent)"},{"p":"smile.plot.swing","c":"Palette","l":"STEEL_BLUE"},{"p":"smile.nlp.stemmer","c":"LancasterStemmer","l":"stem(String)","u":"stem(java.lang.String)"},{"p":"smile.nlp.stemmer","c":"PorterStemmer","l":"stem(String)","u":"stem(java.lang.String)"},{"p":"smile.nlp.stemmer","c":"Stemmer","l":"stem(String)","u":"stem(java.lang.String)"},{"p":"smile.deep","c":"Optimizer","l":"step()"},{"p":"smile.plot.vega","c":"BinParams","l":"step(double)"},{"p":"smile.plot.vega","c":"QuantileTransform","l":"step(double)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"step(int)"},{"p":"smile.plot.vega","c":"BinParams","l":"steps(double...)"},{"p":"smile.plot.vega","c":"DensityTransform","l":"steps(int)"},{"p":"smile.vision.layer","c":"StochasticDepth","l":"StochasticDepth(double, String)","u":"%3Cinit%3E(double,java.lang.String)"},{"p":"smile.swing.table","c":"DateCellEditor","l":"stopCellEditing()"},{"p":"smile.swing.table","c":"DoubleArrayCellEditor","l":"stopCellEditing()"},{"p":"smile.swing.table","c":"DoubleCellEditor","l":"stopCellEditing()"},{"p":"smile.swing.table","c":"IntegerArrayCellEditor","l":"stopCellEditing()"},{"p":"smile.swing.table","c":"IntegerCellEditor","l":"stopCellEditing()"},{"p":"smile.stat","c":"Sampling","l":"strata(int[])"},{"p":"smile.validation","c":"CrossValidation","l":"stratify(int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"stratify(int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"stratify(int, int, Formula, DataFrame, BiFunction<Formula, DataFrame, M>)","u":"stratify(int,int,smile.data.formula.Formula,smile.data.DataFrame,java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"stratify(int, int, T[], int[], BiFunction<T[], int[], M>)","u":"stratify(int,int,T[],int[],java.util.function.BiFunction)"},{"p":"smile.validation","c":"CrossValidation","l":"stratify(int, T[], int[], BiFunction<T[], int[], M>)","u":"stratify(int,T[],int[],java.util.function.BiFunction)"},{"p":"smile.stat","c":"Sampling","l":"stratify(int[], double)","u":"stratify(int[],double)"},{"p":"smile.validation","c":"CrossValidation","l":"stratify(int[], int)","u":"stratify(int[],int)"},{"p":"smile.data","c":"DataFrame","l":"stream()"},{"p":"smile.data","c":"Dataset","l":"stream()"},{"p":"smile.data","c":"IndexDataFrame","l":"stream()"},{"p":"smile.data.vector","c":"BaseVector","l":"stream()"},{"p":"smile.util","c":"DoubleArrayList","l":"stream()"},{"p":"smile.util","c":"IntArrayList","l":"stream()"},{"p":"smile.util","c":"SparseArray","l":"stream()"},{"p":"smile.io","c":"HadoopInput","l":"stream(String)","u":"stream(java.lang.String)"},{"p":"smile.io","c":"Input","l":"stream(String)","u":"stream(java.lang.String)"},{"p":"smile.manifold","c":"IsotonicMDS","l":"stress"},{"p":"smile.manifold","c":"SammonMapping","l":"stress"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"stride()"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"stride()"},{"p":"smile.deep.tensor","c":"Layout","l":"Strided"},{"p":"smile.data.type","c":"DataType.ID","l":"String"},{"p":"smile.data.type","c":"DataTypes","l":"StringType"},{"p":"smile.data","c":"DataFrame","l":"stringVector(Enum<?>)","u":"stringVector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"stringVector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"stringVector(int)"},{"p":"smile.data","c":"DataFrame","l":"stringVector(String)","u":"stringVector(java.lang.String)"},{"p":"smile.nlp.stemmer","c":"PorterStemmer","l":"stripPluralParticiple(String)","u":"stripPluralParticiple(java.lang.String)"},{"p":"smile.plot.vega","c":"Background","l":"stroke(String)","u":"stroke(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"stroke(String)","u":"stroke(java.lang.String)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"stroke(String)","u":"stroke(java.lang.String)"},{"p":"smile.plot.vega","c":"Background","l":"strokeCap(String)","u":"strokeCap(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"strokeCap(String)","u":"strokeCap(java.lang.String)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"strokeCap(String)","u":"strokeCap(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"strokeColor(String)","u":"strokeColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Background","l":"strokeDash(double, double)","u":"strokeDash(double,double)"},{"p":"smile.plot.vega","c":"Mark","l":"strokeDash(double, double)","u":"strokeDash(double,double)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"strokeDash(double, double)","u":"strokeDash(double,double)"},{"p":"smile.plot.vega","c":"Mark","l":"strokeDashOffset(double)"},{"p":"smile.plot.vega","c":"Background","l":"strokeDashOffset(int)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"strokeDashOffset(int)"},{"p":"smile.plot.vega","c":"Background","l":"strokeJoin(String)","u":"strokeJoin(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"strokeJoin(String)","u":"strokeJoin(java.lang.String)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"strokeJoin(String)","u":"strokeJoin(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"strokeMiterLimit(double)"},{"p":"smile.plot.vega","c":"Background","l":"strokeMiterLimit(int)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"strokeMiterLimit(int)"},{"p":"smile.plot.vega","c":"Background","l":"strokeOpacity(double)"},{"p":"smile.plot.vega","c":"Mark","l":"strokeOpacity(double)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"strokeOpacity(double)"},{"p":"smile.plot.vega","c":"Mark","l":"strokeWidth(double)"},{"p":"smile.plot.vega","c":"Background","l":"strokeWidth(int)"},{"p":"smile.plot.vega","c":"ViewConfig","l":"strokeWidth(int)"},{"p":"smile.data.type","c":"DataType.ID","l":"Struct"},{"p":"smile.data.type","c":"DataTypes","l":"struct(List<StructField>)","u":"struct(java.util.List)"},{"p":"smile.data.type","c":"DataTypes","l":"struct(ResultSet)","u":"struct(java.sql.ResultSet)"},{"p":"smile.data.type","c":"DataTypes","l":"struct(ResultSetMetaData, String)","u":"struct(java.sql.ResultSetMetaData,java.lang.String)"},{"p":"smile.data.type","c":"DataTypes","l":"struct(StructField...)","u":"struct(smile.data.type.StructField...)"},{"p":"smile.data.type","c":"StructField","l":"StructField(String, DataType)","u":"%3Cinit%3E(java.lang.String,smile.data.type.DataType)"},{"p":"smile.data.type","c":"StructField","l":"StructField(String, DataType, Measure)","u":"%3Cinit%3E(java.lang.String,smile.data.type.DataType,smile.data.measure.Measure)"},{"p":"smile.data.type","c":"StructType","l":"StructType(List<StructField>)","u":"%3Cinit%3E(java.util.List)"},{"p":"smile.data.type","c":"StructType","l":"StructType(StructField...)","u":"%3Cinit%3E(smile.data.type.StructField...)"},{"p":"smile.data","c":"DataFrame","l":"structure()"},{"p":"smile.math","c":"Histogram","l":"sturges(int)"},{"p":"smile.plot.vega","c":"Axis","l":"style(String...)","u":"style(java.lang.String...)"},{"p":"smile.plot.vega","c":"Background","l":"style(String...)","u":"style(java.lang.String...)"},{"p":"smile.plot.vega","c":"Mark","l":"style(String...)","u":"style(java.lang.String...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub_(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub_(float)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub_(Tensor)","u":"sub_(smile.deep.tensor.Tensor)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub_(Tensor, double)","u":"sub_(smile.deep.tensor.Tensor,double)"},{"p":"smile.util","c":"Array2D","l":"sub(Array2D)","u":"sub(smile.util.Array2D)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"sub(BigMatrix)","u":"sub(smile.math.matrix.BigMatrix)"},{"p":"smile.math","c":"Complex","l":"sub(Complex)","u":"sub(smile.math.Complex)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub(double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"sub(double)"},{"p":"smile.math.matrix","c":"Matrix","l":"sub(double)"},{"p":"smile.util","c":"Array2D","l":"sub(double)"},{"p":"smile.math","c":"MathEx","l":"sub(double[], double[])","u":"sub(double[],double[])"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub(float)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"sub(float)"},{"p":"smile.util","c":"IntArray2D","l":"sub(int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"sub(int, int, double)","u":"sub(int,int,double)"},{"p":"smile.math.matrix","c":"Matrix","l":"sub(int, int, double)","u":"sub(int,int,double)"},{"p":"smile.util","c":"Array2D","l":"sub(int, int, double)","u":"sub(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"sub(int, int, float)","u":"sub(int,int,float)"},{"p":"smile.util","c":"IntArray2D","l":"sub(int, int, int)","u":"sub(int,int,int)"},{"p":"smile.util","c":"IntArray2D","l":"sub(IntArray2D)","u":"sub(smile.util.IntArray2D)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"sub(Matrix)","u":"sub(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"sub(Matrix)","u":"sub(smile.math.matrix.Matrix)"},{"p":"smile.data.formula","c":"Terms","l":"sub(String, String)","u":"sub(java.lang.String,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"sub(String, Term)","u":"sub(java.lang.String,smile.data.formula.Term)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub(Tensor)","u":"sub(smile.deep.tensor.Tensor)"},{"p":"smile.deep.tensor","c":"Tensor","l":"sub(Tensor, double)","u":"sub(smile.deep.tensor.Tensor,double)"},{"p":"smile.data.formula","c":"Terms","l":"sub(Term, String)","u":"sub(smile.data.formula.Term,java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"sub(Term, Term)","u":"sub(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.data.formula","c":"Sub","l":"Sub(Term, Term)","u":"%3Cinit%3E(smile.data.formula.Term,smile.data.formula.Term)"},{"p":"smile.graph","c":"AdjacencyList","l":"subgraph(int[])"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"subgraph(int[])"},{"p":"smile.graph","c":"Graph","l":"subgraph(int[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"submatrix(int, int, int, int)","u":"submatrix(int,int,int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"submatrix(int, int, int, int)","u":"submatrix(int,int,int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"submatrix(int, int, int, int)","u":"submatrix(int,int,int,int)"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation.Method","l":"SUM"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation.Method","l":"SUM"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"SUM"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"SUM"},{"p":"smile.deep.tensor","c":"Tensor","l":"sum()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"sum()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"sum()"},{"p":"smile.math.matrix","c":"Matrix","l":"sum()"},{"p":"smile.util","c":"Array2D","l":"sum()"},{"p":"smile.util","c":"IntArray2D","l":"sum()"},{"p":"smile.math","c":"MathEx","l":"sum(byte[])"},{"p":"smile.math","c":"MathEx","l":"sum(double[])"},{"p":"smile.math","c":"MathEx","l":"sum(float[])"},{"p":"smile.math","c":"MathEx","l":"sum(int[])"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"sum(int[], int[])","u":"sum(int[],int[])"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"sum(int[], int[])","u":"sum(int[],int[])"},{"p":"smile.math.kernel","c":"SumKernel","l":"SumKernel(MercerKernel<T>, MercerKernel<T>)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,smile.math.kernel.MercerKernel)"},{"p":"smile.data","c":"DataFrame","l":"summary()"},{"p":"smile.feature.selection","c":"SumSquaresRatio","l":"SumSquaresRatio(String, double)","u":"%3Cinit%3E(java.lang.String,double)"},{"p":"smile.association","c":"AssociationRule","l":"support"},{"p":"smile.association","c":"ItemSet","l":"support"},{"p":"smile.base.svm","c":"SupportVector","l":"SupportVector(int, T, int, double, double, double, double, double)","u":"%3Cinit%3E(int,T,int,double,double,double,double,double)"},{"p":"smile.plot.swing","c":"Surface","l":"Surface(double[][][])","u":"%3Cinit%3E(double[][][])"},{"p":"smile.plot.swing","c":"Surface","l":"Surface(double[][][], Color[])","u":"%3Cinit%3E(double[][][],java.awt.Color[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"svd()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"svd()"},{"p":"smile.math.matrix","c":"Matrix","l":"svd()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"svd(boolean, boolean)","u":"svd(boolean,boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"svd(boolean, boolean)","u":"svd(boolean,boolean)"},{"p":"smile.math.matrix","c":"Matrix","l":"svd(boolean, boolean)","u":"svd(boolean,boolean)"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"SVD(double[], Matrix, Matrix)","u":"%3Cinit%3E(double[],smile.math.matrix.Matrix,smile.math.matrix.Matrix)"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"SVD(DoublePointer, BigMatrix, BigMatrix)","u":"%3Cinit%3E(org.bytedeco.javacpp.DoublePointer,smile.math.matrix.BigMatrix,smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"SVD(float[], Matrix, Matrix)","u":"%3Cinit%3E(float[],smile.math.matrix.fp32.Matrix,smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix.fp32","c":"ARPACK","l":"svd(IMatrix, int)","u":"svd(smile.math.matrix.fp32.IMatrix,int)"},{"p":"smile.math.matrix","c":"ARPACK","l":"svd(IMatrix, int)","u":"svd(smile.math.matrix.IMatrix,int)"},{"p":"smile.math.matrix","c":"ARPACK","l":"svd(IMatrix, int, int, double)","u":"svd(smile.math.matrix.IMatrix,int,int,double)"},{"p":"smile.math.matrix.fp32","c":"ARPACK","l":"svd(IMatrix, int, int, float)","u":"svd(smile.math.matrix.fp32.IMatrix,int,int,float)"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"SVD(int, int, double[])","u":"%3Cinit%3E(int,int,double[])"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"SVD(int, int, DoublePointer)","u":"%3Cinit%3E(int,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"SVD(int, int, float[])","u":"%3Cinit%3E(int,int,float[])"},{"p":"smile.regression","c":"SVM","l":"SVM()","u":"%3Cinit%3E()"},{"p":"smile.anomaly","c":"SVM","l":"SVM(MercerKernel<T>, T[], double[], double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[],double)"},{"p":"smile.classification","c":"SVM","l":"SVM(MercerKernel<T>, T[], double[], double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,T[],double[],double)"},{"p":"smile.base.svm","c":"SVR","l":"SVR(MercerKernel<T>, double, double, double)","u":"%3Cinit%3E(smile.math.kernel.MercerKernel,double,double,double)"},{"p":"smile.math.blas","c":"BLAS","l":"swap(double[], double[])","u":"swap(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"swap(double[], double[])","u":"swap(double[],double[])"},{"p":"smile.math","c":"MathEx","l":"swap(double[], int, int)","u":"swap(double[],int,int)"},{"p":"smile.sort","c":"Sort","l":"swap(double[], int, int)","u":"swap(double[],int,int)"},{"p":"smile.math","c":"MathEx","l":"swap(E[], E[])","u":"swap(E[],E[])"},{"p":"smile.math.blas","c":"BLAS","l":"swap(float[], float[])","u":"swap(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"swap(float[], float[])","u":"swap(float[],float[])"},{"p":"smile.math","c":"MathEx","l":"swap(float[], int, int)","u":"swap(float[],int,int)"},{"p":"smile.sort","c":"Sort","l":"swap(float[], int, int)","u":"swap(float[],int,int)"},{"p":"smile.math.blas","c":"BLAS","l":"swap(int, double[], int, double[], int)","u":"swap(int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"swap(int, double[], int, double[], int)","u":"swap(int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"swap(int, float[], int, float[], int)","u":"swap(int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"swap(int, float[], int, float[], int)","u":"swap(int,float[],int,float[],int)"},{"p":"smile.math","c":"MathEx","l":"swap(int[], int, int)","u":"swap(int[],int,int)"},{"p":"smile.sort","c":"Sort","l":"swap(int[], int, int)","u":"swap(int[],int,int)"},{"p":"smile.math","c":"MathEx","l":"swap(int[], int[])","u":"swap(int[],int[])"},{"p":"smile.math","c":"MathEx","l":"swap(Object[], int, int)","u":"swap(java.lang.Object[],int,int)"},{"p":"smile.sort","c":"Sort","l":"swap(Object[], int, int)","u":"swap(java.lang.Object[],int,int)"},{"p":"smile.math.matrix.fp32","c":"ARPACK","l":"syev(IMatrix, ARPACK.SymmOption, int)","u":"syev(smile.math.matrix.fp32.IMatrix,smile.math.matrix.fp32.ARPACK.SymmOption,int)"},{"p":"smile.math.matrix","c":"ARPACK","l":"syev(IMatrix, ARPACK.SymmOption, int)","u":"syev(smile.math.matrix.IMatrix,smile.math.matrix.ARPACK.SymmOption,int)"},{"p":"smile.math.matrix","c":"ARPACK","l":"syev(IMatrix, ARPACK.SymmOption, int, int, double)","u":"syev(smile.math.matrix.IMatrix,smile.math.matrix.ARPACK.SymmOption,int,int,double)"},{"p":"smile.math.matrix.fp32","c":"ARPACK","l":"syev(IMatrix, ARPACK.SymmOption, int, int, float)","u":"syev(smile.math.matrix.fp32.IMatrix,smile.math.matrix.fp32.ARPACK.SymmOption,int,int,float)"},{"p":"smile.math.blas","c":"LAPACK","l":"syev(Layout, EVDJob, UPLO, int, double[], int, double[])","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,double[],int,double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syev(Layout, EVDJob, UPLO, int, double[], int, double[])","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,double[],int,double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"syev(Layout, EVDJob, UPLO, int, DoubleBuffer, int, DoubleBuffer)","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syev(Layout, EVDJob, UPLO, int, DoubleBuffer, int, DoubleBuffer)","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"syev(Layout, EVDJob, UPLO, int, float[], int, float[])","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,float[],int,float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syev(Layout, EVDJob, UPLO, int, float[], int, float[])","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,float[],int,float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"syev(Layout, EVDJob, UPLO, int, FloatBuffer, int, FloatBuffer)","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syev(Layout, EVDJob, UPLO, int, FloatBuffer, int, FloatBuffer)","u":"syev(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"syevd(Layout, EVDJob, UPLO, int, double[], int, double[])","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,double[],int,double[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevd(Layout, EVDJob, UPLO, int, double[], int, double[])","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,double[],int,double[])"},{"p":"smile.math.blas","c":"LAPACK","l":"syevd(Layout, EVDJob, UPLO, int, DoubleBuffer, int, DoubleBuffer)","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevd(Layout, EVDJob, UPLO, int, DoubleBuffer, int, DoubleBuffer)","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"syevd(Layout, EVDJob, UPLO, int, DoublePointer, int, DoublePointer)","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevd(Layout, EVDJob, UPLO, int, DoublePointer, int, DoublePointer)","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer)"},{"p":"smile.math.blas","c":"LAPACK","l":"syevd(Layout, EVDJob, UPLO, int, float[], int, float[])","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,float[],int,float[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevd(Layout, EVDJob, UPLO, int, float[], int, float[])","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,float[],int,float[])"},{"p":"smile.math.blas","c":"LAPACK","l":"syevd(Layout, EVDJob, UPLO, int, FloatBuffer, int, FloatBuffer)","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevd(Layout, EVDJob, UPLO, int, FloatBuffer, int, FloatBuffer)","u":"syevd(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, double[], int, double, double, int, int, double, int[], double[], double[], int, int[])","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,double[],int,double,double,int,int,double,int[],double[],double[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, double[], int, double, double, int, int, double, int[], double[], double[], int, int[])","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,double[],int,double,double,int,int,double,int[],double[],double[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, DoubleBuffer, int, double, double, int, int, double, IntBuffer, DoubleBuffer, DoubleBuffer, int, IntBuffer)","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int,double,double,int,int,double,java.nio.IntBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, DoubleBuffer, int, double, double, int, int, double, IntBuffer, DoubleBuffer, DoubleBuffer, int, IntBuffer)","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,java.nio.DoubleBuffer,int,double,double,int,int,double,java.nio.IntBuffer,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas","c":"LAPACK","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, float[], int, float, float, int, int, float, int[], float[], float[], int, int[])","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,float[],int,float,float,int,int,float,int[],float[],float[],int,int[])"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, float[], int, float, float, int, int, float, int[], float[], float[], int, int[])","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,float[],int,float,float,int,int,float,int[],float[],float[],int,int[])"},{"p":"smile.math.blas","c":"LAPACK","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, FloatBuffer, int, float, float, int, int, float, IntBuffer, FloatBuffer, FloatBuffer, int, IntBuffer)","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int,float,float,int,int,float,java.nio.IntBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syevr(Layout, EVDJob, EigenRange, UPLO, int, FloatBuffer, int, float, float, int, int, float, IntBuffer, FloatBuffer, FloatBuffer, int, IntBuffer)","u":"syevr(smile.math.blas.Layout,smile.math.blas.EVDJob,smile.math.blas.EigenRange,smile.math.blas.UPLO,int,java.nio.FloatBuffer,int,float,float,int,int,float,java.nio.IntBuffer,java.nio.FloatBuffer,java.nio.FloatBuffer,int,java.nio.IntBuffer)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"SYM"},{"p":"smile.plot.vega","c":"Legend","l":"symbolLimit(int)"},{"p":"smile.wavelet","c":"SymletWavelet","l":"SymletWavelet(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.blas","c":"BLAS","l":"symm(Layout, Side, UPLO, int, int, double, double[], int, double[], int, double, double[], int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symm(Layout, Side, UPLO, int, int, double, double[], int, double[], int, double, double[], int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"symm(Layout, Side, UPLO, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symm(Layout, Side, UPLO, int, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"symm(Layout, Side, UPLO, int, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symm(Layout, Side, UPLO, int, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"symm(Layout, Side, UPLO, int, int, float, float[], int, float[], int, float, float[], int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symm(Layout, Side, UPLO, int, int, float, float[], int, float[], int, float, float[], int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"symm(Layout, Side, UPLO, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symm(Layout, Side, UPLO, int, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"symm(smile.math.blas.Layout,smile.math.blas.Side,smile.math.blas.UPLO,int,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"SymmMatrix(UPLO, double[][])","u":"%3Cinit%3E(smile.math.blas.UPLO,double[][])"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"SymmMatrix(UPLO, float[][])","u":"%3Cinit%3E(smile.math.blas.UPLO,float[][])"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"SymmMatrix(UPLO, int)","u":"%3Cinit%3E(smile.math.blas.UPLO,int)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"SymmMatrix(UPLO, int)","u":"%3Cinit%3E(smile.math.blas.UPLO,int)"},{"p":"smile.math.blas","c":"BLAS","l":"symv(Layout, UPLO, int, double, double[], int, double[], int, double, double[], int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symv(Layout, UPLO, int, double, double[], int, double[], int, double, double[], int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],int,double[],int,double,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"symv(Layout, UPLO, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symv(Layout, UPLO, int, double, DoubleBuffer, int, DoubleBuffer, int, double, DoubleBuffer, int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int,double,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"symv(Layout, UPLO, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symv(Layout, UPLO, int, double, DoublePointer, int, DoublePointer, int, double, DoublePointer, int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int,double,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"symv(Layout, UPLO, int, float, float[], int, float[], int, float, float[], int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symv(Layout, UPLO, int, float, float[], int, float[], int, float, float[], int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],int,float[],int,float,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"symv(Layout, UPLO, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"symv(Layout, UPLO, int, float, FloatBuffer, int, FloatBuffer, int, float, FloatBuffer, int)","u":"symv(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,float,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"syr(Layout, UPLO, int, double, double[], int, double[], int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syr(Layout, UPLO, int, double, double[], int, double[], int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,double[],int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"syr(Layout, UPLO, int, double, DoubleBuffer, int, DoubleBuffer, int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syr(Layout, UPLO, int, double, DoubleBuffer, int, DoubleBuffer, int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"syr(Layout, UPLO, int, double, DoublePointer, int, DoublePointer, int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syr(Layout, UPLO, int, double, DoublePointer, int, DoublePointer, int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,double,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"syr(Layout, UPLO, int, float, float[], int, float[], int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syr(Layout, UPLO, int, float, float[], int, float[], int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,float[],int,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"syr(Layout, UPLO, int, float, FloatBuffer, int, FloatBuffer, int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"syr(Layout, UPLO, int, float, FloatBuffer, int, FloatBuffer, int)","u":"syr(smile.math.blas.Layout,smile.math.blas.UPLO,int,float,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sysv(Layout, UPLO, int, int, double[], int, int[], double[], int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sysv(Layout, UPLO, int, int, double[], int, int[], double[], int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,double[],int,int[],double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sysv(Layout, UPLO, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sysv(Layout, UPLO, int, int, DoubleBuffer, int, IntBuffer, DoubleBuffer, int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.DoubleBuffer,int,java.nio.IntBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sysv(Layout, UPLO, int, int, DoublePointer, int, IntPointer, DoublePointer, int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sysv(Layout, UPLO, int, int, DoublePointer, int, IntPointer, DoublePointer, int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.IntPointer,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sysv(Layout, UPLO, int, int, float[], int, int[], float[], int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sysv(Layout, UPLO, int, int, float[], int, int[], float[], int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,float[],int,int[],float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"sysv(Layout, UPLO, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"sysv(Layout, UPLO, int, int, FloatBuffer, int, IntBuffer, FloatBuffer, int)","u":"sysv(smile.math.blas.Layout,smile.math.blas.UPLO,int,int,java.nio.FloatBuffer,int,java.nio.IntBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"t"},{"p":"smile.feature.extraction","c":"GHA","l":"t"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"t"},{"p":"smile.stat.hypothesis","c":"TTest","l":"t"},{"p":"smile.vq","c":"BIRCH","l":"T"},{"p":"smile.validation.metric","c":"ContingencyTable","l":"table"},{"p":"smile.swing","c":"Table","l":"Table()","u":"%3Cinit%3E()"},{"p":"smile.swing","c":"Table","l":"Table(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"smile.swing","c":"Table","l":"Table(Object[][], Object[])","u":"%3Cinit%3E(java.lang.Object[][],java.lang.Object[])"},{"p":"smile.swing","c":"Table","l":"Table(TableModel)","u":"%3Cinit%3E(javax.swing.table.TableModel)"},{"p":"smile.swing","c":"Table","l":"Table(TableModel, TableColumnModel)","u":"%3Cinit%3E(javax.swing.table.TableModel,javax.swing.table.TableColumnModel)"},{"p":"smile.swing","c":"Table","l":"Table(TableModel, TableColumnModel, ListSelectionModel)","u":"%3Cinit%3E(javax.swing.table.TableModel,javax.swing.table.TableColumnModel,javax.swing.ListSelectionModel)"},{"p":"smile.swing.table","c":"TableColumnSettings","l":"TableColumnSettings(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.data","c":"SQL","l":"tables()"},{"p":"smile.nlp.pos","c":"HMMPOSTagger","l":"tag(String[])","u":"tag(java.lang.String[])"},{"p":"smile.nlp.pos","c":"POSTagger","l":"tag(String[])","u":"tag(java.lang.String[])"},{"p":"smile.math","c":"Complex","l":"tan()"},{"p":"smile.data.formula","c":"Terms","l":"tan(String)","u":"tan(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"tan(Term)","u":"tan(smile.data.formula.Term)"},{"p":"smile.base.mlp.activation","c":"ActivationFunction","l":"tanh()"},{"p":"smile.base.mlp","c":"ActivationFunction","l":"tanh()"},{"p":"smile.base.mlp.activation","c":"Tanh","l":"Tanh()","u":"%3Cinit%3E()"},{"p":"smile.deep.activation","c":"Tanh","l":"Tanh(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"smile.base.mlp","c":"Layer","l":"tanh(int)"},{"p":"smile.base.mlp","c":"Layer","l":"tanh(int, double)","u":"tanh(int,double)"},{"p":"smile.deep.layer","c":"Layer","l":"tanh(int, int)","u":"tanh(int,int)"},{"p":"smile.data.formula","c":"Terms","l":"tanh(String)","u":"tanh(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"tanh(Term)","u":"tanh(smile.data.formula.Term)"},{"p":"smile.deep.activation","c":"TanhShrink","l":"TanhShrink()","u":"%3Cinit%3E()"},{"p":"smile.deep.layer","c":"Layer","l":"tanhShrink(int, int)","u":"tanhShrink(int,int)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"target"},{"p":"smile.deep","c":"SampleBatch","l":"target()"},{"p":"smile.math.matrix","c":"BigMatrix.QR","l":"tau"},{"p":"smile.math.matrix.fp32","c":"Matrix.QR","l":"tau"},{"p":"smile.math.matrix","c":"Matrix.QR","l":"tau"},{"p":"smile.taxonomy","c":"TaxonomicDistance","l":"TaxonomicDistance(Taxonomy)","u":"%3Cinit%3E(smile.taxonomy.Taxonomy)"},{"p":"smile.taxonomy","c":"Taxonomy","l":"Taxonomy(String...)","u":"%3Cinit%3E(java.lang.String...)"},{"p":"smile.stat.distribution","c":"TDistribution","l":"TDistribution(int)","u":"%3Cinit%3E(int)"},{"p":"smile.plot.vega","c":"Mark","l":"tension(double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"Tensor(Tensor)","u":"%3Cinit%3E(org.bytedeco.pytorch.Tensor)"},{"p":"smile.nlp","c":"Corpus","l":"terms()"},{"p":"smile.nlp","c":"SimpleCorpus","l":"terms()"},{"p":"smile.plot.swing","c":"Palette","l":"terrain(int)"},{"p":"smile.plot.swing","c":"Palette","l":"terrain(int, float)","u":"terrain(int,float)"},{"p":"smile.classification","c":"AdaBoost","l":"test(DataFrame)","u":"test(smile.data.DataFrame)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"test(DataFrame)","u":"test(smile.data.DataFrame)"},{"p":"smile.classification","c":"RandomForest","l":"test(DataFrame)","u":"test(smile.data.DataFrame)"},{"p":"smile.regression","c":"GradientTreeBoost","l":"test(DataFrame)","u":"test(smile.data.DataFrame)"},{"p":"smile.regression","c":"RandomForest","l":"test(DataFrame)","u":"test(smile.data.DataFrame)"},{"p":"smile.stat","c":"Hypothesis.t","l":"test(double, int)","u":"test(double,int)"},{"p":"smile.stat.hypothesis","c":"TTest","l":"test(double, int)","u":"test(double,int)"},{"p":"smile.stat","c":"Hypothesis.KS","l":"test(double[], Distribution)","u":"test(double[],smile.stat.distribution.Distribution)"},{"p":"smile.stat.hypothesis","c":"KSTest","l":"test(double[], Distribution)","u":"test(double[],smile.stat.distribution.Distribution)"},{"p":"smile.stat","c":"Hypothesis.t","l":"test(double[], double)","u":"test(double[],double)"},{"p":"smile.stat.hypothesis","c":"TTest","l":"test(double[], double)","u":"test(double[],double)"},{"p":"smile.stat","c":"Hypothesis.cor","l":"test(double[], double[])","u":"test(double[],double[])"},{"p":"smile.stat","c":"Hypothesis.F","l":"test(double[], double[])","u":"test(double[],double[])"},{"p":"smile.stat.hypothesis","c":"FTest","l":"test(double[], double[])","u":"test(double[],double[])"},{"p":"smile.stat","c":"Hypothesis.KS","l":"test(double[], double[])","u":"test(double[],double[])"},{"p":"smile.stat.hypothesis","c":"KSTest","l":"test(double[], double[])","u":"test(double[],double[])"},{"p":"smile.stat","c":"Hypothesis.t","l":"test(double[], double[])","u":"test(double[],double[])"},{"p":"smile.stat.hypothesis","c":"TTest","l":"test(double[], double[])","u":"test(double[],double[])"},{"p":"smile.stat.hypothesis","c":"TTest","l":"test(double[], double[], boolean)","u":"test(double[],double[],boolean)"},{"p":"smile.stat","c":"Hypothesis.cor","l":"test(double[], double[], String)","u":"test(double[],double[],java.lang.String)"},{"p":"smile.stat","c":"Hypothesis.t","l":"test(double[], double[], String)","u":"test(double[],double[],java.lang.String)"},{"p":"smile.stat","c":"Hypothesis.chisq","l":"test(int[], double[])","u":"test(int[],double[])"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"test(int[], double[])","u":"test(int[],double[])"},{"p":"smile.stat.hypothesis","c":"FTest","l":"test(int[], double[])","u":"test(int[],double[])"},{"p":"smile.stat","c":"Hypothesis.chisq","l":"test(int[], double[], int)","u":"test(int[],double[],int)"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"test(int[], double[], int)","u":"test(int[],double[],int)"},{"p":"smile.stat","c":"Hypothesis.chisq","l":"test(int[], int[])","u":"test(int[],int[])"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"test(int[], int[])","u":"test(int[],int[])"},{"p":"smile.stat","c":"Hypothesis.chisq","l":"test(int[], int[], int)","u":"test(int[],int[],int)"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"test(int[], int[], int)","u":"test(int[],int[],int)"},{"p":"smile.stat","c":"Hypothesis.chisq","l":"test(int[][])"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"test(int[][])"},{"p":"smile.stat.hypothesis","c":"TTest","l":"testPaired(double[], double[])","u":"testPaired(double[],double[])"},{"p":"smile.nlp.relevance","c":"Relevance","l":"text"},{"p":"smile.hash","c":"SimHash","l":"text()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"text(Path)","u":"text(java.nio.file.Path)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"text(Path)","u":"text(java.nio.file.Path)"},{"p":"smile.nlp","c":"Text","l":"Text(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.nlp","c":"Text","l":"Text(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"smile.nlp","c":"Text","l":"Text(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"smile.plot.swing","c":"TextPlot","l":"TextPlot(Label...)","u":"%3Cinit%3E(smile.plot.swing.Label...)"},{"p":"smile.nlp","c":"SimpleText","l":"tf(String)","u":"tf(java.lang.String)"},{"p":"smile.nlp","c":"TextTerms","l":"tf(String)","u":"tf(java.lang.String)"},{"p":"smile.nlp.relevance","c":"TFIDF","l":"TFIDF()","u":"%3Cinit%3E()"},{"p":"smile.nlp.relevance","c":"TFIDF","l":"TFIDF(double)","u":"%3Cinit%3E(double)"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"theta"},{"p":"smile.plot.vega","c":"Mark","l":"theta(double)"},{"p":"smile.plot.vega","c":"Mark","l":"theta2(double)"},{"p":"smile.plot.vega","c":"Mark","l":"theta2Offset(double)"},{"p":"smile.plot.vega","c":"Mark","l":"thetaOffset(double)"},{"p":"smile.math.rbf","c":"ThinPlateRadialBasis","l":"ThinPlateRadialBasis()","u":"%3Cinit%3E()"},{"p":"smile.math.rbf","c":"ThinPlateRadialBasis","l":"ThinPlateRadialBasis(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"ThinPlateSpline","l":"ThinPlateSpline(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"ThinPlateSplineKernel(double)","u":"%3Cinit%3E(double)"},{"p":"smile.math.kernel","c":"ThinPlateSplineKernel","l":"ThinPlateSplineKernel(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"smile.plot.vega","c":"Axis","l":"tickBand(String)","u":"tickBand(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"tickCap(String)","u":"tickCap(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"tickColor(String)","u":"tickColor(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"tickCount(int)"},{"p":"smile.plot.vega","c":"Legend","l":"tickCount(int)"},{"p":"smile.plot.vega","c":"Legend","l":"tickCount(String)","u":"tickCount(java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"ticks(boolean)"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"Tiktoken(Pattern, Map<Bytes, Integer>, String, String, String...)","u":"%3Cinit%3E(java.util.regex.Pattern,java.util.Map,java.lang.String,java.lang.String,java.lang.String...)"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"tiktoken(String, Pattern)","u":"tiktoken(java.lang.String,java.util.regex.Pattern)"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"tiktoken(String, Pattern, String, String, String...)","u":"tiktoken(java.lang.String,java.util.regex.Pattern,java.lang.String,java.lang.String,java.lang.String...)"},{"p":"smile.data.type","c":"DataType.ID","l":"Time"},{"p":"smile.util","c":"Regex","l":"TIME"},{"p":"smile.data.type","c":"DataTypes","l":"time(String)","u":"time(java.lang.String)"},{"p":"smile.plot.vega","c":"FormatConfig","l":"timeFormat(String)","u":"timeFormat(java.lang.String)"},{"p":"smile.plot.vega","c":"FormatConfig","l":"timeFormatType(String)","u":"timeFormatType(java.lang.String)"},{"p":"smile.data.type","c":"DataTypes","l":"TimeType"},{"p":"smile.data.type","c":"TimeType","l":"TimeType(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.plot.vega","c":"FacetField","l":"timeUnit(String)","u":"timeUnit(java.lang.String)"},{"p":"smile.plot.vega","c":"Field","l":"timeUnit(String)","u":"timeUnit(java.lang.String)"},{"p":"smile.plot.vega","c":"Predicate","l":"timeUnit(String)","u":"timeUnit(java.lang.String)"},{"p":"smile.plot.vega","c":"Transform","l":"timeUnit(String, String, String)","u":"timeUnit(java.lang.String,java.lang.String,java.lang.String)"},{"p":"smile.nlp","c":"Text","l":"title"},{"p":"smile.plot.vega","c":"Axis","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.plot.vega","c":"Concat","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.plot.vega","c":"Facet","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.plot.vega","c":"Field","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.plot.vega","c":"Repeat","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.plot.vega","c":"VegaLite","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"title(String)","u":"title(java.lang.String)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"tm(BigMatrix)","u":"tm(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"tm(Matrix)","u":"tm(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"tm(Matrix)","u":"tm(smile.math.matrix.Matrix)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"TO"},{"p":"smile.deep","c":"Model","l":"to(Device)","u":"to(smile.deep.tensor.Device)"},{"p":"smile.deep.tensor","c":"Tensor","l":"to(Device)","u":"to(smile.deep.tensor.Device)"},{"p":"smile.llm","c":"PositionalEncoding","l":"to(Device)","u":"to(smile.deep.tensor.Device)"},{"p":"smile.llm","c":"Transformer","l":"to(Device)","u":"to(smile.deep.tensor.Device)"},{"p":"smile.deep.tensor","c":"Tensor","l":"to(Device, ScalarType)","u":"to(smile.deep.tensor.Device,smile.deep.tensor.ScalarType)"},{"p":"smile.deep.tensor","c":"Tensor","l":"to(ScalarType)","u":"to(smile.deep.tensor.ScalarType)"},{"p":"smile.data.vector","c":"Vector","l":"toArray()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"toArray()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"toArray()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"toArray()"},{"p":"smile.math.matrix","c":"Matrix","l":"toArray()"},{"p":"smile.sort","c":"HeapSelect","l":"toArray()"},{"p":"smile.util","c":"DoubleArrayList","l":"toArray()"},{"p":"smile.util","c":"IntArrayList","l":"toArray()"},{"p":"smile.util","c":"IntHashSet","l":"toArray()"},{"p":"smile.data","c":"DataFrame","l":"toArray(boolean, CategoricalEncoder, String...)","u":"toArray(boolean,smile.data.CategoricalEncoder,java.lang.String...)"},{"p":"smile.data","c":"Tuple","l":"toArray(boolean, CategoricalEncoder, String...)","u":"toArray(boolean,smile.data.CategoricalEncoder,java.lang.String...)"},{"p":"smile.util","c":"DoubleArrayList","l":"toArray(double[])"},{"p":"smile.util","c":"IntArrayList","l":"toArray(int[])"},{"p":"smile.data","c":"DataFrame","l":"toArray(String...)","u":"toArray(java.lang.String...)"},{"p":"smile.data","c":"Tuple","l":"toArray(String...)","u":"toArray(java.lang.String...)"},{"p":"smile.sort","c":"HeapSelect","l":"toArray(T[])"},{"p":"smile.plot.swing","c":"Canvas","l":"toBufferedImage(int, int)","u":"toBufferedImage(int,int)"},{"p":"smile.data.vector","c":"Vector","l":"toDate()"},{"p":"smile.data.vector","c":"StringVector","l":"toDate(DateTimeFormatter)","u":"toDate(java.time.format.DateTimeFormatter)"},{"p":"smile.data.vector","c":"StringVector","l":"toDate(String)","u":"toDate(java.lang.String)"},{"p":"smile.data.vector","c":"Vector","l":"toDateTime()"},{"p":"smile.data.vector","c":"StringVector","l":"toDateTime(DateTimeFormatter)","u":"toDateTime(java.time.format.DateTimeFormatter)"},{"p":"smile.data.vector","c":"StringVector","l":"toDateTime(String)","u":"toDateTime(java.lang.String)"},{"p":"smile.data.vector","c":"BaseVector","l":"toDoubleArray()"},{"p":"smile.data.vector","c":"BaseVector","l":"toDoubleArray(double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"toeplitz(double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"toeplitz(double[])"},{"p":"smile.math.matrix","c":"BigMatrix","l":"toeplitz(double[], double[])","u":"toeplitz(double[],double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"toeplitz(double[], double[])","u":"toeplitz(double[],double[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"toeplitz(float[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"toeplitz(float[], float[])","u":"toeplitz(float[],float[])"},{"p":"smile.data.vector","c":"BaseVector","l":"toIntArray()"},{"p":"smile.data.vector","c":"BaseVector","l":"toIntArray(int[])"},{"p":"smile.llm.tokenizer","c":"SentencePiece","l":"tokenize(String)","u":"tokenize(java.lang.String)"},{"p":"smile.llm.tokenizer","c":"Tiktoken","l":"tokenize(String)","u":"tokenize(java.lang.String)"},{"p":"smile.llm.tokenizer","c":"Tokenizer","l":"tokenize(String)","u":"tokenize(java.lang.String)"},{"p":"smile.data","c":"DataFrame","l":"toList()"},{"p":"smile.data","c":"Dataset","l":"toList()"},{"p":"smile.data","c":"BinarySparseDataset","l":"toMatrix()"},{"p":"smile.data","c":"DataFrame","l":"toMatrix()"},{"p":"smile.data","c":"SparseDataset","l":"toMatrix()"},{"p":"smile.graph","c":"AdjacencyList","l":"toMatrix()"},{"p":"smile.graph","c":"AdjacencyMatrix","l":"toMatrix()"},{"p":"smile.graph","c":"Graph","l":"toMatrix()"},{"p":"smile.data","c":"DataFrame","l":"toMatrix(boolean, CategoricalEncoder, String)","u":"toMatrix(boolean,smile.data.CategoricalEncoder,java.lang.String)"},{"p":"smile.base.cart","c":"NominalSplit","l":"toNode(Node, Node)","u":"toNode(smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.base.cart","c":"OrdinalSplit","l":"toNode(Node, Node)","u":"toNode(smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.base.cart","c":"Split","l":"toNode(Node, Node)","u":"toNode(smile.base.cart.Node,smile.base.cart.Node)"},{"p":"smile.plot.swing","c":"Plot","l":"toolbar()"},{"p":"smile.plot.vega","c":"Mark","l":"tooltip(boolean)"},{"p":"smile.plot.swing","c":"BoxPlot","l":"tooltip(double[])"},{"p":"smile.plot.swing","c":"Heatmap","l":"tooltip(double[])"},{"p":"smile.plot.swing","c":"Hexmap","l":"tooltip(double[])"},{"p":"smile.plot.swing","c":"Plot","l":"tooltip(double[])"},{"p":"smile.plot.vega","c":"Mark","l":"tooltip(String)","u":"tooltip(java.lang.String)"},{"p":"smile.plot.vega","c":"Config","l":"tooltipFormat()"},{"p":"smile.deep.tensor","c":"Tensor","l":"topk(int)"},{"p":"smile.deep.tensor","c":"Tensor","l":"topk(int, int, boolean, boolean)","u":"topk(int,int,boolean,boolean)"},{"p":"smile.plot.swing","c":"Palette","l":"topo(int)"},{"p":"smile.plot.swing","c":"Palette","l":"topo(int, float)","u":"topo(int,float)"},{"p":"smile.plot.vega","c":"Data","l":"topojson(String, String, String)","u":"topojson(java.lang.String,java.lang.String,java.lang.String)"},{"p":"smile.plot.vega","c":"Axis","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Background","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Config","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Data","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"DensityTransform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"FacetField","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Field","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"FormatConfig","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Legend","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"LoessTransform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"LookupData","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Mark","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"PivotTransform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Projection","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"QuantileTransform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"StackTransform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"Transform","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"VegaLite","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"ViewConfig","l":"toPrettyString()"},{"p":"smile.plot.vega","c":"WindowTransform","l":"toPrettyString()"},{"p":"smile.association","c":"AssociationRule","l":"toString()"},{"p":"smile.association","c":"ItemSet","l":"toString()"},{"p":"smile.base.cart","c":"CART","l":"toString()"},{"p":"smile.base.cart","c":"Split","l":"toString()"},{"p":"smile.base.mlp","c":"HiddenLayer","l":"toString()"},{"p":"smile.base.mlp","c":"HiddenLayerBuilder","l":"toString()"},{"p":"smile.base.mlp","c":"InputLayer","l":"toString()"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"toString()"},{"p":"smile.base.mlp.optimizer","c":"Adam","l":"toString()"},{"p":"smile.base.mlp.optimizer","c":"RMSProp","l":"toString()"},{"p":"smile.base.mlp.optimizer","c":"SGD","l":"toString()"},{"p":"smile.base.mlp","c":"OutputLayer","l":"toString()"},{"p":"smile.base.mlp","c":"OutputLayerBuilder","l":"toString()"},{"p":"smile.base.svm","c":"KernelMachine","l":"toString()"},{"p":"smile.classification","c":"IsotonicRegressionScaling","l":"toString()"},{"p":"smile.clustering","c":"CentroidClustering","l":"toString()"},{"p":"smile.clustering.linkage","c":"CompleteLinkage","l":"toString()"},{"p":"smile.clustering.linkage","c":"SingleLinkage","l":"toString()"},{"p":"smile.clustering.linkage","c":"UPGMALinkage","l":"toString()"},{"p":"smile.clustering.linkage","c":"UPGMCLinkage","l":"toString()"},{"p":"smile.clustering.linkage","c":"WardLinkage","l":"toString()"},{"p":"smile.clustering.linkage","c":"WPGMALinkage","l":"toString()"},{"p":"smile.clustering.linkage","c":"WPGMCLinkage","l":"toString()"},{"p":"smile.clustering","c":"MEC","l":"toString()"},{"p":"smile.clustering","c":"PartitionClustering","l":"toString()"},{"p":"smile.data","c":"AbstractTuple","l":"toString()"},{"p":"smile.data.formula","c":"AbstractBiFunction","l":"toString()"},{"p":"smile.data.formula","c":"AbstractFunction","l":"toString()"},{"p":"smile.data.formula","c":"Date","l":"toString()"},{"p":"smile.data.formula","c":"FactorCrossing","l":"toString()"},{"p":"smile.data.formula","c":"FactorInteraction","l":"toString()"},{"p":"smile.data.formula","c":"Formula","l":"toString()"},{"p":"smile.data.formula","c":"Operator","l":"toString()"},{"p":"smile.data","c":"IndexDataFrame","l":"toString()"},{"p":"smile.data.measure","c":"IntervalScale","l":"toString()"},{"p":"smile.data.measure","c":"NominalScale","l":"toString()"},{"p":"smile.data.measure","c":"OrdinalScale","l":"toString()"},{"p":"smile.data.measure","c":"RatioScale","l":"toString()"},{"p":"smile.data","c":"SampleInstance","l":"toString()"},{"p":"smile.data","c":"SQL","l":"toString()"},{"p":"smile.data.transform","c":"ColumnTransform","l":"toString()"},{"p":"smile.data.type","c":"ArrayType","l":"toString()"},{"p":"smile.data.type","c":"BooleanType","l":"toString()"},{"p":"smile.data.type","c":"ByteType","l":"toString()"},{"p":"smile.data.type","c":"CharType","l":"toString()"},{"p":"smile.data.type","c":"DateTimeType","l":"toString()"},{"p":"smile.data.type","c":"DateType","l":"toString()"},{"p":"smile.data.type","c":"DecimalType","l":"toString()"},{"p":"smile.data.type","c":"DoubleType","l":"toString()"},{"p":"smile.data.type","c":"FloatType","l":"toString()"},{"p":"smile.data.type","c":"IntegerType","l":"toString()"},{"p":"smile.data.type","c":"LongType","l":"toString()"},{"p":"smile.data.type","c":"ObjectType","l":"toString()"},{"p":"smile.data.type","c":"ShortType","l":"toString()"},{"p":"smile.data.type","c":"StringType","l":"toString()"},{"p":"smile.data.type","c":"StructField","l":"toString()"},{"p":"smile.data.type","c":"StructType","l":"toString()"},{"p":"smile.data.type","c":"TimeType","l":"toString()"},{"p":"smile.deep.layer","c":"LayerBlock","l":"toString()"},{"p":"smile.deep.metric","c":"Accuracy","l":"toString()"},{"p":"smile.deep.metric","c":"Precision","l":"toString()"},{"p":"smile.deep.metric","c":"Recall","l":"toString()"},{"p":"smile.deep","c":"Model","l":"toString()"},{"p":"smile.deep","c":"SampleBatch","l":"toString()"},{"p":"smile.deep.tensor","c":"Device","l":"toString()"},{"p":"smile.deep.tensor","c":"Tensor","l":"toString()"},{"p":"smile.feature.imputation","c":"SimpleImputer","l":"toString()"},{"p":"smile.feature.selection","c":"InformationValue","l":"toString()"},{"p":"smile.feature.selection","c":"SignalNoiseRatio","l":"toString()"},{"p":"smile.feature.selection","c":"SumSquaresRatio","l":"toString()"},{"p":"smile.feature.transform","c":"Normalizer","l":"toString()"},{"p":"smile.gap","c":"BitString","l":"toString()"},{"p":"smile.glm","c":"GLM","l":"toString()"},{"p":"smile.interpolation","c":"BicubicInterpolation","l":"toString()"},{"p":"smile.interpolation","c":"BilinearInterpolation","l":"toString()"},{"p":"smile.interpolation","c":"CubicSplineInterpolation1D","l":"toString()"},{"p":"smile.interpolation","c":"CubicSplineInterpolation2D","l":"toString()"},{"p":"smile.interpolation","c":"KrigingInterpolation","l":"toString()"},{"p":"smile.interpolation","c":"KrigingInterpolation1D","l":"toString()"},{"p":"smile.interpolation","c":"KrigingInterpolation2D","l":"toString()"},{"p":"smile.interpolation","c":"LaplaceInterpolation","l":"toString()"},{"p":"smile.interpolation","c":"LinearInterpolation","l":"toString()"},{"p":"smile.interpolation","c":"RBFInterpolation","l":"toString()"},{"p":"smile.interpolation","c":"RBFInterpolation1D","l":"toString()"},{"p":"smile.interpolation","c":"RBFInterpolation2D","l":"toString()"},{"p":"smile.interpolation","c":"ShepardInterpolation","l":"toString()"},{"p":"smile.interpolation","c":"ShepardInterpolation1D","l":"toString()"},{"p":"smile.interpolation","c":"ShepardInterpolation2D","l":"toString()"},{"p":"smile.interpolation.variogram","c":"ExponentialVariogram","l":"toString()"},{"p":"smile.interpolation.variogram","c":"GaussianVariogram","l":"toString()"},{"p":"smile.interpolation.variogram","c":"PowerVariogram","l":"toString()"},{"p":"smile.interpolation.variogram","c":"SphericalVariogram","l":"toString()"},{"p":"smile.llm","c":"Transformer.Options","l":"toString()"},{"p":"smile.math","c":"Complex","l":"toString()"},{"p":"smile.math.distance","c":"ChebyshevDistance","l":"toString()"},{"p":"smile.math.distance","c":"CorrelationDistance","l":"toString()"},{"p":"smile.math.distance","c":"DynamicTimeWarping","l":"toString()"},{"p":"smile.math.distance","c":"EditDistance","l":"toString()"},{"p":"smile.math.distance","c":"EuclideanDistance","l":"toString()"},{"p":"smile.math.distance","c":"HammingDistance","l":"toString()"},{"p":"smile.math.distance","c":"JaccardDistance","l":"toString()"},{"p":"smile.math.distance","c":"JensenShannonDistance","l":"toString()"},{"p":"smile.math.distance","c":"LeeDistance","l":"toString()"},{"p":"smile.math.distance","c":"MahalanobisDistance","l":"toString()"},{"p":"smile.math.distance","c":"ManhattanDistance","l":"toString()"},{"p":"smile.math.distance","c":"MinkowskiDistance","l":"toString()"},{"p":"smile.math.distance","c":"SparseChebyshevDistance","l":"toString()"},{"p":"smile.math.distance","c":"SparseEuclideanDistance","l":"toString()"},{"p":"smile.math.distance","c":"SparseManhattanDistance","l":"toString()"},{"p":"smile.math.distance","c":"SparseMinkowskiDistance","l":"toString()"},{"p":"smile.math.kernel","c":"BinarySparseLinearKernel","l":"toString()"},{"p":"smile.math.kernel","c":"Gaussian","l":"toString()"},{"p":"smile.math.kernel","c":"HellingerKernel","l":"toString()"},{"p":"smile.math.kernel","c":"HyperbolicTangent","l":"toString()"},{"p":"smile.math.kernel","c":"Laplacian","l":"toString()"},{"p":"smile.math.kernel","c":"LinearKernel","l":"toString()"},{"p":"smile.math.kernel","c":"Matern","l":"toString()"},{"p":"smile.math.kernel","c":"PearsonKernel","l":"toString()"},{"p":"smile.math.kernel","c":"Polynomial","l":"toString()"},{"p":"smile.math.kernel","c":"SparseLinearKernel","l":"toString()"},{"p":"smile.math.kernel","c":"ThinPlateSpline","l":"toString()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"toString()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix.Entry","l":"toString()"},{"p":"smile.math.matrix","c":"IMatrix","l":"toString()"},{"p":"smile.math.matrix","c":"SparseMatrix.Entry","l":"toString()"},{"p":"smile.math.rbf","c":"GaussianRadialBasis","l":"toString()"},{"p":"smile.math.rbf","c":"InverseMultiquadricRadialBasis","l":"toString()"},{"p":"smile.math.rbf","c":"MultiquadricRadialBasis","l":"toString()"},{"p":"smile.math.rbf","c":"ThinPlateRadialBasis","l":"toString()"},{"p":"smile.neighbor","c":"BKTree","l":"toString()"},{"p":"smile.neighbor","c":"CoverTree","l":"toString()"},{"p":"smile.neighbor","c":"KDTree","l":"toString()"},{"p":"smile.neighbor","c":"LinearSearch","l":"toString()"},{"p":"smile.neighbor","c":"LSH","l":"toString()"},{"p":"smile.neighbor","c":"MPLSH","l":"toString()"},{"p":"smile.neighbor","c":"Neighbor","l":"toString()"},{"p":"smile.nlp","c":"Bigram","l":"toString()"},{"p":"smile.nlp.collocation","c":"Bigram","l":"toString()"},{"p":"smile.nlp.collocation","c":"NGram","l":"toString()"},{"p":"smile.nlp","c":"NGram","l":"toString()"},{"p":"smile.nlp","c":"SimpleText","l":"toString()"},{"p":"smile.plot.swing","c":"Base","l":"toString()"},{"p":"smile.plot.vega","c":"Axis","l":"toString()"},{"p":"smile.plot.vega","c":"Background","l":"toString()"},{"p":"smile.plot.vega","c":"Config","l":"toString()"},{"p":"smile.plot.vega","c":"Data","l":"toString()"},{"p":"smile.plot.vega","c":"DensityTransform","l":"toString()"},{"p":"smile.plot.vega","c":"FacetField","l":"toString()"},{"p":"smile.plot.vega","c":"Field","l":"toString()"},{"p":"smile.plot.vega","c":"FormatConfig","l":"toString()"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"toString()"},{"p":"smile.plot.vega","c":"Legend","l":"toString()"},{"p":"smile.plot.vega","c":"LoessTransform","l":"toString()"},{"p":"smile.plot.vega","c":"LookupData","l":"toString()"},{"p":"smile.plot.vega","c":"Mark","l":"toString()"},{"p":"smile.plot.vega","c":"PivotTransform","l":"toString()"},{"p":"smile.plot.vega","c":"Projection","l":"toString()"},{"p":"smile.plot.vega","c":"QuantileTransform","l":"toString()"},{"p":"smile.plot.vega","c":"RegressionTransform","l":"toString()"},{"p":"smile.plot.vega","c":"SortField","l":"toString()"},{"p":"smile.plot.vega","c":"StackTransform","l":"toString()"},{"p":"smile.plot.vega","c":"Transform","l":"toString()"},{"p":"smile.plot.vega","c":"VegaLite","l":"toString()"},{"p":"smile.plot.vega","c":"ViewConfig","l":"toString()"},{"p":"smile.plot.vega","c":"WindowTransform","l":"toString()"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"toString()"},{"p":"smile.regression","c":"GaussianProcessRegression.JointPrediction","l":"toString()"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"toString()"},{"p":"smile.regression","c":"LinearModel","l":"toString()"},{"p":"smile.sequence","c":"CRFLabeler","l":"toString()"},{"p":"smile.sequence","c":"HMM","l":"toString()"},{"p":"smile.sequence","c":"HMMLabeler","l":"toString()"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"toString()"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"FDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"Mixture","l":"toString()"},{"p":"smile.stat.distribution","c":"MultivariateGaussianDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"MultivariateMixture","l":"toString()"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"TDistribution","l":"toString()"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"toString()"},{"p":"smile.stat.hypothesis","c":"ChiSqTest","l":"toString()"},{"p":"smile.stat.hypothesis","c":"CorTest","l":"toString()"},{"p":"smile.stat.hypothesis","c":"FTest","l":"toString()"},{"p":"smile.stat.hypothesis","c":"KSTest","l":"toString()"},{"p":"smile.stat.hypothesis","c":"TTest","l":"toString()"},{"p":"smile.taxonomy","c":"Concept","l":"toString()"},{"p":"smile.taxonomy","c":"TaxonomicDistance","l":"toString()"},{"p":"smile.timeseries","c":"AR","l":"toString()"},{"p":"smile.timeseries","c":"ARMA","l":"toString()"},{"p":"smile.timeseries","c":"BoxTest","l":"toString()"},{"p":"smile.util","c":"Array2D","l":"toString()"},{"p":"smile.util","c":"Bytes","l":"toString()"},{"p":"smile.util","c":"DoubleArrayList","l":"toString()"},{"p":"smile.util","c":"IntArray2D","l":"toString()"},{"p":"smile.util","c":"IntArrayList","l":"toString()"},{"p":"smile.util","c":"IntPair","l":"toString()"},{"p":"smile.util","c":"SparseArray.Entry","l":"toString()"},{"p":"smile.util","c":"SparseArray","l":"toString()"},{"p":"smile.util","c":"Tuple2","l":"toString()"},{"p":"smile.validation","c":"ClassificationMetrics","l":"toString()"},{"p":"smile.validation","c":"ClassificationValidation","l":"toString()"},{"p":"smile.validation","c":"ClassificationValidations","l":"toString()"},{"p":"smile.validation.metric","c":"Accuracy","l":"toString()"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation","l":"toString()"},{"p":"smile.validation.metric","c":"AdjustedRandIndex","l":"toString()"},{"p":"smile.validation.metric","c":"AUC","l":"toString()"},{"p":"smile.validation.metric","c":"ConfusionMatrix","l":"toString()"},{"p":"smile.validation.metric","c":"Error","l":"toString()"},{"p":"smile.validation.metric","c":"Fallout","l":"toString()"},{"p":"smile.validation.metric","c":"FDR","l":"toString()"},{"p":"smile.validation.metric","c":"FScore","l":"toString()"},{"p":"smile.validation.metric","c":"LogLoss","l":"toString()"},{"p":"smile.validation.metric","c":"MAD","l":"toString()"},{"p":"smile.validation.metric","c":"MatthewsCorrelation","l":"toString()"},{"p":"smile.validation.metric","c":"MSE","l":"toString()"},{"p":"smile.validation.metric","c":"MutualInformation","l":"toString()"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation","l":"toString()"},{"p":"smile.validation.metric","c":"Precision","l":"toString()"},{"p":"smile.validation.metric","c":"R2","l":"toString()"},{"p":"smile.validation.metric","c":"RandIndex","l":"toString()"},{"p":"smile.validation.metric","c":"Recall","l":"toString()"},{"p":"smile.validation.metric","c":"RMSE","l":"toString()"},{"p":"smile.validation.metric","c":"RSS","l":"toString()"},{"p":"smile.validation.metric","c":"Sensitivity","l":"toString()"},{"p":"smile.validation.metric","c":"Specificity","l":"toString()"},{"p":"smile.validation","c":"RegressionMetrics","l":"toString()"},{"p":"smile.validation","c":"RegressionValidation","l":"toString()"},{"p":"smile.validation","c":"RegressionValidations","l":"toString()"},{"p":"smile.vision.layer","c":"Conv2dNormActivation.Options","l":"toString()"},{"p":"smile.vision.layer","c":"Conv2dNormActivation","l":"toString()"},{"p":"smile.vision.layer","c":"MBConvConfig","l":"toString()"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"toString(boolean)"},{"p":"smile.math.matrix","c":"IMatrix","l":"toString(boolean)"},{"p":"smile.util","c":"Array2D","l":"toString(boolean)"},{"p":"smile.util","c":"IntArray2D","l":"toString(boolean)"},{"p":"smile.feature.selection","c":"InformationValue","l":"toString(InformationValue[])","u":"toString(smile.feature.selection.InformationValue[])"},{"p":"smile.data","c":"DataFrame","l":"toString(int)"},{"p":"smile.data","c":"Dataset","l":"toString(int)"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"toString(int)"},{"p":"smile.data","c":"Tuple","l":"toString(int)"},{"p":"smile.data.vector","c":"BooleanVector","l":"toString(int)"},{"p":"smile.data.vector","c":"ByteVector","l":"toString(int)"},{"p":"smile.data.vector","c":"CharVector","l":"toString(int)"},{"p":"smile.data.vector","c":"DoubleVector","l":"toString(int)"},{"p":"smile.data.vector","c":"FloatVector","l":"toString(int)"},{"p":"smile.data.vector","c":"IntVector","l":"toString(int)"},{"p":"smile.data.vector","c":"LongVector","l":"toString(int)"},{"p":"smile.data.vector","c":"ShortVector","l":"toString(int)"},{"p":"smile.data.vector","c":"StringVector","l":"toString(int)"},{"p":"smile.data.vector","c":"Vector","l":"toString(int)"},{"p":"smile.data","c":"DataFrame","l":"toString(int, boolean)","u":"toString(int,boolean)"},{"p":"smile.data","c":"DataFrame","l":"toString(int, int)","u":"toString(int,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"toString(int, int)","u":"toString(int,int)"},{"p":"smile.math.matrix","c":"IMatrix","l":"toString(int, int)","u":"toString(int,int)"},{"p":"smile.util","c":"Array2D","l":"toString(int, int)","u":"toString(int,int)"},{"p":"smile.util","c":"IntArray2D","l":"toString(int, int)","u":"toString(int,int)"},{"p":"smile.data","c":"DataFrame","l":"toString(int, String)","u":"toString(int,java.lang.String)"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.measure","c":"Measure","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.measure","c":"NumericalMeasure","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"ArrayType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"DataType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"DateTimeType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"DateType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"DoubleType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"FloatType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"ObjectType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"StructField","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"StructType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data.type","c":"TimeType","l":"toString(Object)","u":"toString(java.lang.Object)"},{"p":"smile.data","c":"Tuple","l":"toString(String)","u":"toString(java.lang.String)"},{"p":"smile.base.cart","c":"InternalNode","l":"toString(StructType, boolean)","u":"toString(smile.data.type.StructType,boolean)"},{"p":"smile.base.cart","c":"NominalNode","l":"toString(StructType, boolean)","u":"toString(smile.data.type.StructType,boolean)"},{"p":"smile.base.cart","c":"OrdinalNode","l":"toString(StructType, boolean)","u":"toString(smile.data.type.StructType,boolean)"},{"p":"smile.base.cart","c":"DecisionNode","l":"toString(StructType, StructField, InternalNode, int, BigInteger, List<String>)","u":"toString(smile.data.type.StructType,smile.data.type.StructField,smile.base.cart.InternalNode,int,java.math.BigInteger,java.util.List)"},{"p":"smile.base.cart","c":"InternalNode","l":"toString(StructType, StructField, InternalNode, int, BigInteger, List<String>)","u":"toString(smile.data.type.StructType,smile.data.type.StructField,smile.base.cart.InternalNode,int,java.math.BigInteger,java.util.List)"},{"p":"smile.base.cart","c":"Node","l":"toString(StructType, StructField, InternalNode, int, BigInteger, List<String>)","u":"toString(smile.data.type.StructType,smile.data.type.StructField,smile.base.cart.InternalNode,int,java.math.BigInteger,java.util.List)"},{"p":"smile.base.cart","c":"RegressionNode","l":"toString(StructType, StructField, InternalNode, int, BigInteger, List<String>)","u":"toString(smile.data.type.StructType,smile.data.type.StructField,smile.base.cart.InternalNode,int,java.math.BigInteger,java.util.List)"},{"p":"smile.data.vector","c":"BaseVector","l":"toStringArray()"},{"p":"smile.data.vector","c":"BaseVector","l":"toStringArray(String[])","u":"toStringArray(java.lang.String[])"},{"p":"smile.data","c":"DataFrame","l":"toStrings(int)"},{"p":"smile.data","c":"DataFrame","l":"toStrings(int, boolean)","u":"toStrings(int,boolean)"},{"p":"smile.vision.transform","c":"Transform","l":"toTensor(float[], float[], BufferedImage...)","u":"toTensor(float[],float[],java.awt.image.BufferedImage...)"},{"p":"smile.data.vector","c":"Vector","l":"toTime()"},{"p":"smile.data.vector","c":"StringVector","l":"toTime(DateTimeFormatter)","u":"toTime(java.time.format.DateTimeFormatter)"},{"p":"smile.data.vector","c":"StringVector","l":"toTime(String)","u":"toTime(java.lang.String)"},{"p":"smile.feature.selection","c":"InformationValue","l":"toTransform(InformationValue[])","u":"toTransform(smile.feature.selection.InformationValue[])"},{"p":"smile.gap","c":"Selection","l":"Tournament(int, double)","u":"Tournament(int,double)"},{"p":"smile.math.blas","c":"BLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, double[], double[], int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,double[],double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, double[], double[], int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,double[],double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, DoubleBuffer, DoubleBuffer, int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, DoubleBuffer, DoubleBuffer, int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.DoubleBuffer,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, float[], float[], int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,float[],float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, float[], float[], int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,float[],float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, FloatBuffer, FloatBuffer, int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"tpmv(Layout, UPLO, Transpose, Diag, int, FloatBuffer, FloatBuffer, int)","u":"tpmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.FloatBuffer,java.nio.FloatBuffer,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"trace()"},{"p":"smile.math.matrix","c":"IMatrix","l":"trace()"},{"p":"smile.deep","c":"Model","l":"train()"},{"p":"smile.deep","c":"Model","l":"train(int, Optimizer, Loss, Dataset)","u":"train(int,smile.deep.Optimizer,smile.deep.Loss,smile.deep.Dataset)"},{"p":"smile.deep","c":"Model","l":"train(int, Optimizer, Loss, Dataset, Dataset, String, Metric...)","u":"train(int,smile.deep.Optimizer,smile.deep.Loss,smile.deep.Dataset,smile.deep.Dataset,java.lang.String,smile.deep.metric.Metric...)"},{"p":"smile.plot.vega","c":"VegaLite","l":"transform()"},{"p":"smile.vision","c":"VisionModel","l":"transform()"},{"p":"smile.base.mlp","c":"HiddenLayer","l":"transform(double[])"},{"p":"smile.base.mlp","c":"InputLayer","l":"transform(double[])"},{"p":"smile.base.mlp","c":"Layer","l":"transform(double[])"},{"p":"smile.base.mlp","c":"OutputLayer","l":"transform(double[])"},{"p":"smile.wavelet","c":"Wavelet","l":"transform(double[])"},{"p":"smile.llm","c":"Transformer","l":"Transformer(int)","u":"%3Cinit%3E(int)"},{"p":"smile.llm","c":"Transformer","l":"Transformer(Transformer.Options)","u":"%3Cinit%3E(smile.llm.Transformer.Options)"},{"p":"smile.plot.vega","c":"Axis","l":"translate(double)"},{"p":"smile.plot.vega","c":"Projection","l":"translate(double, double)","u":"translate(double,double)"},{"p":"smile.math.blas","c":"Transpose","l":"TRANSPOSE"},{"p":"smile.math.matrix","c":"BigMatrix","l":"transpose()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"transpose()"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"transpose()"},{"p":"smile.math.matrix","c":"Matrix","l":"transpose()"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"transpose()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"transpose(boolean)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"transpose(boolean)"},{"p":"smile.math.matrix","c":"Matrix","l":"transpose(boolean)"},{"p":"smile.math","c":"MathEx","l":"transpose(double[][])"},{"p":"smile.deep.tensor","c":"Tensor","l":"transpose(long, long)","u":"transpose(long,long)"},{"p":"smile.classification","c":"RandomForest.Model","l":"tree"},{"p":"smile.regression","c":"RandomForest.Model","l":"tree"},{"p":"smile.clustering","c":"HierarchicalClustering","l":"tree()"},{"p":"smile.anomaly","c":"IsolationForest","l":"trees()"},{"p":"smile.classification","c":"AdaBoost","l":"trees()"},{"p":"smile.classification","c":"GradientTreeBoost","l":"trees()"},{"p":"smile.classification","c":"RandomForest","l":"trees()"},{"p":"smile.feature.importance","c":"TreeSHAP","l":"trees()"},{"p":"smile.regression","c":"GradientTreeBoost","l":"trees()"},{"p":"smile.regression","c":"RandomForest","l":"trees()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"triangular()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"triangular()"},{"p":"smile.math.matrix","c":"Matrix","l":"triangular()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"triangular(Diag)","u":"triangular(smile.math.blas.Diag)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"triangular(Diag)","u":"triangular(smile.math.blas.Diag)"},{"p":"smile.math.matrix","c":"Matrix","l":"triangular(Diag)","u":"triangular(smile.math.blas.Diag)"},{"p":"smile.nlp","c":"Trie","l":"Trie()","u":"%3Cinit%3E()"},{"p":"smile.nlp","c":"Trie","l":"Trie(int)","u":"%3Cinit%3E(int)"},{"p":"smile.util","c":"DoubleArrayList","l":"trim()"},{"p":"smile.util","c":"IntArrayList","l":"trim()"},{"p":"smile.classification","c":"AdaBoost","l":"trim(int)"},{"p":"smile.classification","c":"GradientTreeBoost","l":"trim(int)"},{"p":"smile.classification","c":"RandomForest","l":"trim(int)"},{"p":"smile.regression","c":"GradientTreeBoost","l":"trim(int)"},{"p":"smile.regression","c":"RandomForest","l":"trim(int)"},{"p":"smile.deep","c":"Loss","l":"tripleMarginRanking(Tensor, Tensor, Tensor)","u":"tripleMarginRanking(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.math.blas","c":"BLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, double[], int, double[], int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, double[], int, double[], int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, DoubleBuffer, int, DoubleBuffer, int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, DoubleBuffer, int, DoubleBuffer, int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, DoublePointer, int, DoublePointer, int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, DoublePointer, int, DoublePointer, int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"BLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, float[], int, float[], int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, float[], int, float[], int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,float[],int,float[],int)"},{"p":"smile.math.blas","c":"BLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, FloatBuffer, int, FloatBuffer, int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trmv(Layout, UPLO, Transpose, Diag, int, FloatBuffer, int, FloatBuffer, int)","u":"trmv(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, double[], int, double[], int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,double[],int,double[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, double[], int, double[], int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,double[],int,double[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, DoubleBuffer, int, DoubleBuffer, int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,java.nio.DoubleBuffer,int,java.nio.DoubleBuffer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, DoublePointer, int, DoublePointer, int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, DoublePointer, int, DoublePointer, int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,org.bytedeco.javacpp.DoublePointer,int,org.bytedeco.javacpp.DoublePointer,int)"},{"p":"smile.math.blas","c":"LAPACK","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, float[], int, float[], int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,float[],int,float[],int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, float[], int, float[], int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,float[],int,float[],int)"},{"p":"smile.math.blas","c":"LAPACK","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, FloatBuffer, int, FloatBuffer, int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.math.blas.openblas","c":"OpenBLAS","l":"trtrs(Layout, UPLO, Transpose, Diag, int, int, FloatBuffer, int, FloatBuffer, int)","u":"trtrs(smile.math.blas.Layout,smile.math.blas.UPLO,smile.math.blas.Transpose,smile.math.blas.Diag,int,int,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int)"},{"p":"smile.base.cart","c":"InternalNode","l":"trueChild()"},{"p":"smile.validation","c":"ClassificationValidation","l":"truth"},{"p":"smile.validation","c":"RegressionValidation","l":"truth"},{"p":"smile.manifold","c":"TSNE","l":"TSNE(double[][], int)","u":"%3Cinit%3E(double[][],int)"},{"p":"smile.manifold","c":"TSNE","l":"TSNE(double[][], int, double, double, int)","u":"%3Cinit%3E(double[][],int,double,double,int)"},{"p":"smile.plot.vega","c":"Data","l":"tsv(String, Map<String, String>)","u":"tsv(java.lang.String,java.util.Map)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"tt(BigMatrix)","u":"tt(smile.math.matrix.BigMatrix)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"tt(Matrix)","u":"tt(smile.math.matrix.fp32.Matrix)"},{"p":"smile.math.matrix","c":"Matrix","l":"tt(Matrix)","u":"tt(smile.math.matrix.Matrix)"},{"p":"smile.regression","c":"LinearModel","l":"ttest()"},{"p":"smile.timeseries","c":"AR","l":"ttest()"},{"p":"smile.timeseries","c":"ARMA","l":"ttest()"},{"p":"smile.stat.hypothesis","c":"TTest","l":"TTest(String, double, double, double)","u":"%3Cinit%3E(java.lang.String,double,double,double)"},{"p":"smile.util","c":"Tuple2","l":"Tuple2(T1, T2)","u":"%3Cinit%3E(T1,T2)"},{"p":"smile.plot.swing","c":"Palette","l":"TURQUOISE"},{"p":"smile.math.matrix","c":"IMatrix","l":"tv(double, double[], double, double[])","u":"tv(double,double[],double,double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"tv(double[])"},{"p":"smile.math.matrix","c":"IMatrix","l":"tv(double[], double[])","u":"tv(double[],double[])"},{"p":"smile.math.matrix","c":"BandMatrix","l":"tv(double[], int, int)","u":"tv(double[],int,int)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"tv(double[], int, int)","u":"tv(double[],int,int)"},{"p":"smile.math.matrix","c":"IMatrix","l":"tv(double[], int, int)","u":"tv(double[],int,int)"},{"p":"smile.math.matrix","c":"Matrix","l":"tv(double[], int, int)","u":"tv(double[],int,int)"},{"p":"smile.math.matrix","c":"SparseMatrix","l":"tv(double[], int, int)","u":"tv(double[],int,int)"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"tv(double[], int, int)","u":"tv(double[],int,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"tv(float, float[], float, float[])","u":"tv(float,float[],float,float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"tv(float[])"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"tv(float[], float[])","u":"tv(float[],float[])"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"tv(float[], int, int)","u":"tv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"tv(float[], int, int)","u":"tv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"tv(float[], int, int)","u":"tv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix","l":"tv(float[], int, int)","u":"tv(float[],int,int)"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"tv(float[], int, int)","u":"tv(float[],int,int)"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"TWCNB"},{"p":"smile.gap","c":"Crossover","l":"TWO_POINT"},{"p":"smile.data.type","c":"StructField","l":"type"},{"p":"smile.timeseries","c":"BoxTest","l":"type"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"type()"},{"p":"smile.data.vector","c":"BaseVector","l":"type()"},{"p":"smile.data.vector","c":"BooleanVector","l":"type()"},{"p":"smile.data.vector","c":"ByteVector","l":"type()"},{"p":"smile.data.vector","c":"CharVector","l":"type()"},{"p":"smile.data.vector","c":"DoubleVector","l":"type()"},{"p":"smile.data.vector","c":"FloatVector","l":"type()"},{"p":"smile.data.vector","c":"IntVector","l":"type()"},{"p":"smile.data.vector","c":"LongVector","l":"type()"},{"p":"smile.data.vector","c":"ShortVector","l":"type()"},{"p":"smile.deep.tensor","c":"Device","l":"type()"},{"p":"smile.data.type","c":"StructType","l":"type(int)"},{"p":"smile.plot.vega","c":"FacetField","l":"type(String)","u":"type(java.lang.String)"},{"p":"smile.plot.vega","c":"Field","l":"type(String)","u":"type(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"type(String)","u":"type(java.lang.String)"},{"p":"smile.data","c":"DataFrame","l":"types()"},{"p":"smile.data","c":"Tuple","l":"types()"},{"p":"smile.data.type","c":"StructType","l":"types()"},{"p":"smile.neighbor.lsh","c":"PrH","l":"u"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"U"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"U"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"U"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"UH"},{"p":"smile.data.formula","c":"Terms","l":"ulp(String)","u":"ulp(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"ulp(Term)","u":"ulp(smile.data.formula.Term)"},{"p":"smile.manifold","c":"UMAP","l":"UMAP(int[], double[][], AdjacencyList)","u":"%3Cinit%3E(int[],double[][],smile.graph.AdjacencyList)"},{"p":"smile.vq","c":"SOM","l":"umatrix()"},{"p":"smile.data.type","c":"DataType","l":"unboxed()"},{"p":"smile.data.type","c":"StructType","l":"unboxed()"},{"p":"smile.util","c":"Strings","l":"unescape(String)","u":"unescape(java.lang.String)"},{"p":"smile.gap","c":"Crossover","l":"UNIFORM"},{"p":"smile.data","c":"DataFrame","l":"union(DataFrame...)","u":"union(smile.data.DataFrame...)"},{"p":"smile.data","c":"IndexDataFrame","l":"union(DataFrame...)","u":"union(smile.data.DataFrame...)"},{"p":"smile.nlp","c":"SimpleText","l":"unique()"},{"p":"smile.nlp","c":"TextTerms","l":"unique()"},{"p":"smile.math","c":"MathEx","l":"unique(int[])"},{"p":"smile.math","c":"MathEx","l":"unique(String[])","u":"unique(java.lang.String[])"},{"p":"smile.math.blas","c":"Diag","l":"UNIT"},{"p":"smile.data","c":"SparseDataset","l":"unitize()"},{"p":"smile.math","c":"MathEx","l":"unitize(double[])"},{"p":"smile.data","c":"SparseDataset","l":"unitize1()"},{"p":"smile.math","c":"MathEx","l":"unitize1(double[])"},{"p":"smile.math","c":"MathEx","l":"unitize2(double[])"},{"p":"smile.math.random","c":"UniversalGenerator","l":"UniversalGenerator()","u":"%3Cinit%3E()"},{"p":"smile.math.random","c":"UniversalGenerator","l":"UniversalGenerator(int)","u":"%3Cinit%3E(int)"},{"p":"smile.math.random","c":"UniversalGenerator","l":"UniversalGenerator(long)","u":"%3Cinit%3E(long)"},{"p":"smile.deep.tensor","c":"Tensor","l":"unsqueeze(long)"},{"p":"smile.feature.extraction","c":"GHA","l":"update(DataFrame)","u":"update(smile.data.DataFrame)"},{"p":"smile.regression","c":"LinearModel","l":"update(DataFrame)","u":"update(smile.data.DataFrame)"},{"p":"smile.regression","c":"Regression","l":"update(Dataset<T, Double>)","u":"update(smile.data.Dataset)"},{"p":"smile.classification","c":"Classifier","l":"update(Dataset<T, Integer>)","u":"update(smile.data.Dataset)"},{"p":"smile.math.matrix","c":"SparseMatrix.Entry","l":"update(double)"},{"p":"smile.util","c":"SparseArray.Entry","l":"update(double)"},{"p":"smile.feature.extraction","c":"GHA","l":"update(double[])"},{"p":"smile.vq","c":"BIRCH","l":"update(double[])"},{"p":"smile.vq","c":"GrowingNeuralGas","l":"update(double[])"},{"p":"smile.vq","c":"NeuralGas","l":"update(double[])"},{"p":"smile.vq","c":"NeuralMap","l":"update(double[])"},{"p":"smile.vq","c":"SOM","l":"update(double[])"},{"p":"smile.vq","c":"VectorQuantizer","l":"update(double[])"},{"p":"smile.regression","c":"LinearModel","l":"update(double[], double)","u":"update(double[],double)"},{"p":"smile.regression","c":"MLP","l":"update(double[], double)","u":"update(double[],double)"},{"p":"smile.vq.hebb","c":"Neuron","l":"update(double[], double)","u":"update(double[],double)"},{"p":"smile.regression","c":"LinearModel","l":"update(double[], double, double)","u":"update(double[],double,double)"},{"p":"smile.neighbor","c":"MutableLSH","l":"update(double[], E)","u":"update(double[],E)"},{"p":"smile.classification","c":"LogisticRegression.Binomial","l":"update(double[], int)","u":"update(double[],int)"},{"p":"smile.classification","c":"LogisticRegression.Multinomial","l":"update(double[], int)","u":"update(double[],int)"},{"p":"smile.classification","c":"MLP","l":"update(double[], int)","u":"update(double[],int)"},{"p":"smile.feature.extraction","c":"GHA","l":"update(double[][])"},{"p":"smile.regression","c":"MLP","l":"update(double[][], double[])","u":"update(double[][],double[])"},{"p":"smile.classification","c":"MLP","l":"update(double[][], int[])","u":"update(double[][],int[])"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix.Entry","l":"update(float)"},{"p":"smile.base.mlp","c":"MultilayerPerceptron","l":"update(int)"},{"p":"smile.manifold","c":"TSNE","l":"update(int)"},{"p":"smile.math","c":"Complex.Array","l":"update(int, Complex)","u":"update(int,smile.math.Complex)"},{"p":"smile.math","c":"Complex.Array","l":"update(int, double)","u":"update(int,double)"},{"p":"smile.base.mlp","c":"InputLayer","l":"update(int, double, double, double, double, double)","u":"update(int,double,double,double,double,double)"},{"p":"smile.base.mlp","c":"Layer","l":"update(int, double, double, double, double, double)","u":"update(int,double,double,double,double,double)"},{"p":"smile.math.matrix","c":"IMatrix","l":"update(int, int, double)","u":"update(int,int,double)"},{"p":"smile.math.matrix.fp32","c":"IMatrix","l":"update(int, int, float)","u":"update(int,int,float)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"update(int[], int)","u":"update(int[],int)"},{"p":"smile.classification","c":"Maxent.Binomial","l":"update(int[], int)","u":"update(int[],int)"},{"p":"smile.classification","c":"Maxent.Multinomial","l":"update(int[], int)","u":"update(int[],int)"},{"p":"smile.sequence","c":"HMM","l":"update(int[][], int)","u":"update(int[][],int)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"update(int[][], int[])","u":"update(int[][],int[])"},{"p":"smile.base.mlp.optimizer","c":"Adam","l":"update(Layer, int, int)","u":"update(smile.base.mlp.Layer,int,int)"},{"p":"smile.base.mlp.optimizer","c":"Optimizer","l":"update(Layer, int, int)","u":"update(smile.base.mlp.Layer,int,int)"},{"p":"smile.base.mlp.optimizer","c":"RMSProp","l":"update(Layer, int, int)","u":"update(smile.base.mlp.Layer,int,int)"},{"p":"smile.base.mlp.optimizer","c":"SGD","l":"update(Layer, int, int)","u":"update(smile.base.mlp.Layer,int,int)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"update(SparseArray, int)","u":"update(smile.util.SparseArray,int)"},{"p":"smile.classification","c":"SparseLogisticRegression.Binomial","l":"update(SparseArray, int)","u":"update(smile.util.SparseArray,int)"},{"p":"smile.classification","c":"SparseLogisticRegression.Multinomial","l":"update(SparseArray, int)","u":"update(smile.util.SparseArray,int)"},{"p":"smile.classification","c":"DiscreteNaiveBayes","l":"update(SparseArray[], int[])","u":"update(smile.util.SparseArray[],int[])"},{"p":"smile.data","c":"SQL","l":"update(String)","u":"update(java.lang.String)"},{"p":"smile.regression","c":"Regression","l":"update(T, double)","u":"update(T,double)"},{"p":"smile.classification","c":"Classifier","l":"update(T, int)","u":"update(T,int)"},{"p":"smile.regression","c":"Regression","l":"update(T[], double[])","u":"update(T[],double[])"},{"p":"smile.classification","c":"Classifier","l":"update(T[], int[])","u":"update(T[],int[])"},{"p":"smile.sequence","c":"HMMLabeler","l":"update(T[][], int)","u":"update(T[][],int)"},{"p":"smile.sequence","c":"HMM","l":"update(T[][], int, ToIntFunction<T>)","u":"update(T[][],int,java.util.function.ToIntFunction)"},{"p":"smile.deep.metric","c":"Accuracy","l":"update(Tensor, Tensor)","u":"update(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.deep.metric","c":"Metric","l":"update(Tensor, Tensor)","u":"update(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.deep.metric","c":"Precision","l":"update(Tensor, Tensor)","u":"update(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.deep.metric","c":"Recall","l":"update(Tensor, Tensor)","u":"update(smile.deep.tensor.Tensor,smile.deep.tensor.Tensor)"},{"p":"smile.feature.extraction","c":"GHA","l":"update(Tuple)","u":"update(smile.data.Tuple)"},{"p":"smile.regression","c":"LinearModel","l":"update(Tuple)","u":"update(smile.data.Tuple)"},{"p":"smile.clustering.linkage","c":"UPGMALinkage","l":"UPGMALinkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"UPGMALinkage","l":"UPGMALinkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.clustering.linkage","c":"UPGMCLinkage","l":"UPGMCLinkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"UPGMCLinkage","l":"UPGMCLinkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.math.matrix","c":"BandMatrix","l":"uplo()"},{"p":"smile.math.matrix","c":"BigMatrix","l":"uplo()"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"uplo()"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"uplo()"},{"p":"smile.math.matrix.fp32","c":"SymmMatrix","l":"uplo()"},{"p":"smile.math.matrix","c":"Matrix","l":"uplo()"},{"p":"smile.math.matrix","c":"SymmMatrix","l":"uplo()"},{"p":"smile.math.matrix","c":"BandMatrix","l":"uplo(UPLO)","u":"uplo(smile.math.blas.UPLO)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"uplo(UPLO)","u":"uplo(smile.math.blas.UPLO)"},{"p":"smile.math.matrix.fp32","c":"BandMatrix","l":"uplo(UPLO)","u":"uplo(smile.math.blas.UPLO)"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"uplo(UPLO)","u":"uplo(smile.math.blas.UPLO)"},{"p":"smile.math.matrix","c":"Matrix","l":"uplo(UPLO)","u":"uplo(smile.math.blas.UPLO)"},{"p":"smile.math.blas","c":"UPLO","l":"UPPER"},{"p":"smile.util","c":"Regex","l":"URL"},{"p":"smile.plot.vega","c":"Data","l":"url(String)","u":"url(java.lang.String)"},{"p":"smile.plot.vega","c":"Concat","l":"usermeta(JsonNode)","u":"usermeta(com.fasterxml.jackson.databind.JsonNode)"},{"p":"smile.plot.vega","c":"Facet","l":"usermeta(JsonNode)","u":"usermeta(com.fasterxml.jackson.databind.JsonNode)"},{"p":"smile.plot.vega","c":"Repeat","l":"usermeta(JsonNode)","u":"usermeta(com.fasterxml.jackson.databind.JsonNode)"},{"p":"smile.plot.vega","c":"VegaLite","l":"usermeta(JsonNode)","u":"usermeta(com.fasterxml.jackson.databind.JsonNode)"},{"p":"smile.plot.vega","c":"View","l":"usermeta(JsonNode)","u":"usermeta(com.fasterxml.jackson.databind.JsonNode)"},{"p":"smile.plot.vega","c":"Concat","l":"usermeta(Object)","u":"usermeta(java.lang.Object)"},{"p":"smile.plot.vega","c":"Facet","l":"usermeta(Object)","u":"usermeta(java.lang.Object)"},{"p":"smile.plot.vega","c":"Repeat","l":"usermeta(Object)","u":"usermeta(java.lang.Object)"},{"p":"smile.plot.vega","c":"VegaLite","l":"usermeta(Object)","u":"usermeta(java.lang.Object)"},{"p":"smile.plot.vega","c":"View","l":"usermeta(Object)","u":"usermeta(java.lang.Object)"},{"p":"smile.math.matrix","c":"BigMatrix.SVD","l":"V"},{"p":"smile.math.matrix.fp32","c":"Matrix.SVD","l":"V"},{"p":"smile.math.matrix","c":"Matrix.SVD","l":"V"},{"p":"smile.graph","c":"Graph.Edge","l":"v1"},{"p":"smile.graph","c":"Graph.Edge","l":"v2"},{"p":"smile.vision","c":"EfficientNet","l":"V2L()"},{"p":"smile.vision","c":"EfficientNet","l":"V2L(String)","u":"V2L(java.lang.String)"},{"p":"smile.vision","c":"EfficientNet","l":"V2M()"},{"p":"smile.vision","c":"EfficientNet","l":"V2M(String)","u":"V2M(java.lang.String)"},{"p":"smile.vision","c":"EfficientNet","l":"V2S()"},{"p":"smile.vision","c":"EfficientNet","l":"V2S(String)","u":"V2S(java.lang.String)"},{"p":"smile.data.formula","c":"Terms","l":"val(boolean)"},{"p":"smile.data.formula","c":"Terms","l":"val(byte)"},{"p":"smile.data.formula","c":"Terms","l":"val(char)"},{"p":"smile.data.formula","c":"Terms","l":"val(double)"},{"p":"smile.data.formula","c":"Terms","l":"val(float)"},{"p":"smile.data.formula","c":"Terms","l":"val(int)"},{"p":"smile.data.formula","c":"Terms","l":"val(long)"},{"p":"smile.data.formula","c":"Terms","l":"val(Object)","u":"val(java.lang.Object)"},{"p":"smile.data.formula","c":"Terms","l":"val(short)"},{"p":"smile.plot.vega","c":"Predicate","l":"valid(String)","u":"valid(java.lang.String)"},{"p":"smile.neighbor","c":"Neighbor","l":"value"},{"p":"smile.util","c":"MutableInt","l":"value"},{"p":"smile.math.blas","c":"EigenRange","l":"VALUE"},{"p":"smile.deep.tensor","c":"DeviceType","l":"value()"},{"p":"smile.plot.vega","c":"ImputeTransform","l":"value(JsonNode)","u":"value(com.fasterxml.jackson.databind.JsonNode)"},{"p":"smile.util","c":"IntSet","l":"valueOf(int)"},{"p":"smile.base.cart","c":"Loss.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.base.cart","c":"Loss","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.base.cart","c":"SplitRule","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.base.mlp","c":"Cost","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.base.mlp","c":"OutputFunction","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data","c":"CategoricalEncoder","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.formula","c":"DateFeature","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.measure","c":"Measure","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.measure","c":"NumericalMeasure","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"ArrayType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"BooleanType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"ByteType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"CharType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"DataType.ID","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"DataType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"DateTimeType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"DateType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"DecimalType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"DoubleType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"FloatType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"IntegerType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"LongType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"ObjectType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"ShortType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"StringType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"StructField","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"StructType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.data.type","c":"TimeType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.deep.metric","c":"Averaging","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.deep.tensor","c":"DeviceType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.deep.tensor","c":"Layout","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.deep.tensor","c":"ScalarType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.feature.transform","c":"Normalizer.Norm","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.gap","c":"Crossover","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.io","c":"JSON.Mode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"Diag","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"EigenRange","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"EVDJob","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"Layout","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"Side","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"SVDJob","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"Transpose","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.blas","c":"UPLO","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.matrix","c":"ARPACK.SymmOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.math.matrix.fp32","c":"ARPACK.SymmOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.nlp.dictionary","c":"EnglishDictionary","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.plot.swing","c":"Line.Style","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.timeseries","c":"AR.Method","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.timeseries","c":"BoxTest.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation.Method","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation.Method","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"smile.util","c":"IntSet","l":"values"},{"p":"smile.base.cart","c":"Loss.Type","l":"values()"},{"p":"smile.base.cart","c":"SplitRule","l":"values()"},{"p":"smile.base.mlp","c":"Cost","l":"values()"},{"p":"smile.base.mlp","c":"OutputFunction","l":"values()"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"values()"},{"p":"smile.data","c":"CategoricalEncoder","l":"values()"},{"p":"smile.data.formula","c":"DateFeature","l":"values()"},{"p":"smile.data.measure","c":"CategoricalMeasure","l":"values()"},{"p":"smile.data.type","c":"DataType.ID","l":"values()"},{"p":"smile.deep.metric","c":"Averaging","l":"values()"},{"p":"smile.deep.tensor","c":"DeviceType","l":"values()"},{"p":"smile.deep.tensor","c":"Layout","l":"values()"},{"p":"smile.deep.tensor","c":"ScalarType","l":"values()"},{"p":"smile.feature.transform","c":"Normalizer.Norm","l":"values()"},{"p":"smile.gap","c":"Crossover","l":"values()"},{"p":"smile.io","c":"JSON.Mode","l":"values()"},{"p":"smile.math.blas","c":"Diag","l":"values()"},{"p":"smile.math.blas","c":"EigenRange","l":"values()"},{"p":"smile.math.blas","c":"EVDJob","l":"values()"},{"p":"smile.math.blas","c":"Layout","l":"values()"},{"p":"smile.math.blas","c":"Side","l":"values()"},{"p":"smile.math.blas","c":"SVDJob","l":"values()"},{"p":"smile.math.blas","c":"Transpose","l":"values()"},{"p":"smile.math.blas","c":"UPLO","l":"values()"},{"p":"smile.math.matrix","c":"ARPACK.AsymmOption","l":"values()"},{"p":"smile.math.matrix","c":"ARPACK.SymmOption","l":"values()"},{"p":"smile.math.matrix.fp32","c":"ARPACK.AsymmOption","l":"values()"},{"p":"smile.math.matrix.fp32","c":"ARPACK.SymmOption","l":"values()"},{"p":"smile.neighbor","c":"MutableLSH","l":"values()"},{"p":"smile.nlp.dictionary","c":"EnglishDictionary","l":"values()"},{"p":"smile.nlp.dictionary","c":"EnglishStopWords","l":"values()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"values()"},{"p":"smile.plot.swing","c":"Line.Style","l":"values()"},{"p":"smile.timeseries","c":"AR.Method","l":"values()"},{"p":"smile.timeseries","c":"BoxTest.Type","l":"values()"},{"p":"smile.validation.metric","c":"AdjustedMutualInformation.Method","l":"values()"},{"p":"smile.validation.metric","c":"NormalizedMutualInformation.Method","l":"values()"},{"p":"smile.plot.vega","c":"Data","l":"values(List<T>)","u":"values(java.util.List)"},{"p":"smile.plot.vega","c":"Data","l":"values(String)","u":"values(java.lang.String)"},{"p":"smile.plot.vega","c":"Legend","l":"values(String...)","u":"values(java.lang.String...)"},{"p":"smile.plot.vega","c":"Data","l":"values(T[])"},{"p":"smile.neighbor.lsh","c":"NeighborHashValueModel","l":"var"},{"p":"smile.math","c":"MathEx","l":"var(double[])"},{"p":"smile.math","c":"MathEx","l":"var(float[])"},{"p":"smile.math","c":"MathEx","l":"var(int[])"},{"p":"smile.data.formula","c":"AbstractBiFunction","l":"variables()"},{"p":"smile.data.formula","c":"AbstractFunction","l":"variables()"},{"p":"smile.data.formula","c":"Constant","l":"variables()"},{"p":"smile.data.formula","c":"Date","l":"variables()"},{"p":"smile.data.formula","c":"FactorCrossing","l":"variables()"},{"p":"smile.data.formula","c":"FactorInteraction","l":"variables()"},{"p":"smile.data.formula","c":"Term","l":"variables()"},{"p":"smile.feature.extraction","c":"PCA","l":"variance()"},{"p":"smile.feature.extraction","c":"ProbabilisticPCA","l":"variance()"},{"p":"smile.stat.distribution","c":"BernoulliDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"BetaDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"BinomialDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"ChiSquareDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"DiscreteMixture","l":"variance()"},{"p":"smile.stat.distribution","c":"Distribution","l":"variance()"},{"p":"smile.stat.distribution","c":"EmpiricalDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"ExponentialDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"FDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"GammaDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"GaussianDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"GeometricDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"HyperGeometricDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"KernelDensity","l":"variance()"},{"p":"smile.stat.distribution","c":"LogisticDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"LogNormalDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"Mixture","l":"variance()"},{"p":"smile.stat.distribution","c":"NegativeBinomialDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"PoissonDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"ShiftedGeometricDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"TDistribution","l":"variance()"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"variance()"},{"p":"smile.timeseries","c":"AR","l":"variance()"},{"p":"smile.timeseries","c":"ARMA","l":"variance()"},{"p":"smile.glm.model","c":"Model","l":"variance(double)"},{"p":"smile.feature.extraction","c":"PCA","l":"varianceProportion()"},{"p":"smile.manifold","c":"KPCA","l":"variances()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"VB"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"VBD"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"VBG"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"VBN"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"VBP"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"VBZ"},{"p":"smile.data","c":"DataFrame","l":"vector(Enum<?>)","u":"vector(java.lang.Enum)"},{"p":"smile.data","c":"DataFrame","l":"vector(int)"},{"p":"smile.data","c":"IndexDataFrame","l":"vector(int)"},{"p":"smile.data","c":"DataFrame","l":"vector(String)","u":"vector(java.lang.String)"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"vectors"},{"p":"smile.math.blas","c":"EVDJob","l":"VECTORS"},{"p":"smile.base.svm","c":"KernelMachine","l":"vectors()"},{"p":"smile.plot.vega","c":"VegaLite","l":"VegaLite()","u":"%3Cinit%3E()"},{"p":"smile.plot.vega","c":"Concat","l":"vertical(VegaLite...)","u":"vertical(smile.plot.vega.VegaLite...)"},{"p":"smile.plot.vega","c":"View","l":"View()","u":"%3Cinit%3E()"},{"p":"smile.plot.vega","c":"View","l":"View(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"smile.plot.vega","c":"VegaLite","l":"viewConfig()"},{"p":"smile.plot.swing","c":"Palette","l":"VIOLET_RED"},{"p":"smile.vision","c":"VisionModel","l":"VisionModel(LayerBlock, Transform)","u":"%3Cinit%3E(smile.deep.layer.LayerBlock,smile.vision.transform.Transform)"},{"p":"smile.graph","c":"Visitor","l":"visit(int)"},{"p":"smile.sequence","c":"CRFLabeler","l":"viterbi(T[])"},{"p":"smile.sequence","c":"CRF","l":"viterbi(Tuple[])","u":"viterbi(smile.data.Tuple[])"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"Vl"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"Vl"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"Vl"},{"p":"smile.classification","c":"RandomForest","l":"vote(Tuple, double[])","u":"vote(smile.data.Tuple,double[])"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"Vr"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"Vr"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"Vr"},{"p":"smile.neighbor","c":"LSH","l":"w"},{"p":"smile.regression","c":"GaussianProcessRegression","l":"w"},{"p":"smile.vq.hebb","c":"Neuron","l":"w"},{"p":"smile.nlp","c":"Bigram","l":"w1"},{"p":"smile.nlp","c":"Bigram","l":"w2"},{"p":"smile.nlp.pos","c":"HMMPOSTagger","l":"walkin(File, List<File>)","u":"walkin(java.io.File,java.util.List)"},{"p":"smile.clustering.linkage","c":"WardLinkage","l":"WardLinkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"WardLinkage","l":"WardLinkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.wavelet","c":"Wavelet","l":"Wavelet(double[])","u":"%3Cinit%3E(double[])"},{"p":"smile.classification","c":"DiscreteNaiveBayes.Model","l":"WCNB"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"WDT"},{"p":"smile.data.formula","c":"DateFeature","l":"WEEK_OF_MONTH"},{"p":"smile.data.formula","c":"DateFeature","l":"WEEK_OF_YEAR"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"WeibullDistribution(double)","u":"%3Cinit%3E(double)"},{"p":"smile.stat.distribution","c":"WeibullDistribution","l":"WeibullDistribution(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"smile.base.mlp","c":"Layer","l":"weight"},{"p":"smile.classification","c":"RandomForest.Model","l":"weight"},{"p":"smile.graph","c":"Graph.Edge","l":"weight"},{"p":"smile.deep.metric","c":"Averaging","l":"Weighted"},{"p":"smile.base.mlp","c":"Layer","l":"weightGradient"},{"p":"smile.base.mlp","c":"Layer","l":"weightGradientMoment1"},{"p":"smile.base.mlp","c":"Layer","l":"weightGradientMoment2"},{"p":"smile.base.svm","c":"KernelMachine","l":"weights()"},{"p":"smile.base.mlp","c":"Layer","l":"weightUpdate"},{"p":"smile.deep.tensor","c":"Tensor","l":"where(Tensor, double, double)","u":"where(smile.deep.tensor.Tensor,double,double)"},{"p":"smile.deep.tensor","c":"Tensor","l":"where(Tensor, int, int)","u":"where(smile.deep.tensor.Tensor,int,int)"},{"p":"smile.math","c":"MathEx","l":"whichMax(double[])"},{"p":"smile.math","c":"MathEx","l":"whichMax(double[][])"},{"p":"smile.math","c":"MathEx","l":"whichMax(float[])"},{"p":"smile.math","c":"MathEx","l":"whichMax(int[])"},{"p":"smile.math","c":"MathEx","l":"whichMin(double[])"},{"p":"smile.math","c":"MathEx","l":"whichMin(double[][])"},{"p":"smile.math","c":"MathEx","l":"whichMin(float[])"},{"p":"smile.math","c":"MathEx","l":"whichMin(int[])"},{"p":"smile.plot.swing","c":"Palette","l":"WHITE"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"wi"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"wi"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"wi"},{"p":"smile.manifold","c":"LaplacianEigenmap","l":"width"},{"p":"smile.plot.vega","c":"Mark","l":"width(double)"},{"p":"smile.plot.vega","c":"Layer","l":"width(int)"},{"p":"smile.plot.vega","c":"View","l":"width(int)"},{"p":"smile.plot.vega","c":"Layer","l":"width(String)","u":"width(java.lang.String)"},{"p":"smile.plot.vega","c":"View","l":"width(String)","u":"width(java.lang.String)"},{"p":"smile.plot.vega","c":"Layer","l":"widthStep(int)"},{"p":"smile.plot.vega","c":"View","l":"widthStep(int)"},{"p":"smile.plot.swing","c":"Canvas","l":"window()"},{"p":"smile.plot.swing","c":"PlotGrid","l":"window()"},{"p":"smile.plot.swing","c":"PlotPanel","l":"window()"},{"p":"smile.plot.vega","c":"Transform","l":"window(WindowTransformField...)","u":"window(smile.plot.vega.WindowTransformField...)"},{"p":"smile.plot.vega","c":"WindowTransformField","l":"WindowTransformField(String, String, double, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,double,java.lang.String)"},{"p":"smile.math","c":"Scaler","l":"winsor(double[])"},{"p":"smile.math","c":"Scaler","l":"winsor(double[], double, double)","u":"winsor(double[],double,double)"},{"p":"smile.feature.transform","c":"WinsorScaler","l":"WinsorScaler()","u":"%3Cinit%3E()"},{"p":"smile.plot.swing","c":"Wireframe","l":"Wireframe(double[][], int[][], Color)","u":"%3Cinit%3E(double[][],int[][],java.awt.Color)"},{"p":"smile.feature.selection","c":"InformationValue","l":"woe"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"Word2Vec(String[], float[][])","u":"%3Cinit%3E(java.lang.String[],float[][])"},{"p":"smile.nlp.embedding","c":"Word2Vec","l":"words"},{"p":"smile.nlp","c":"NGram","l":"words"},{"p":"smile.nlp","c":"SimpleText","l":"words()"},{"p":"smile.nlp","c":"TextTerms","l":"words()"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"WP"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"WP$"},{"p":"smile.clustering.linkage","c":"WPGMALinkage","l":"WPGMALinkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"WPGMALinkage","l":"WPGMALinkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.clustering.linkage","c":"WPGMCLinkage","l":"WPGMCLinkage(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"smile.clustering.linkage","c":"WPGMCLinkage","l":"WPGMCLinkage(int, float[])","u":"%3Cinit%3E(int,float[])"},{"p":"smile.math.matrix","c":"BigMatrix.EVD","l":"wr"},{"p":"smile.math.matrix.fp32","c":"Matrix.EVD","l":"wr"},{"p":"smile.math.matrix","c":"Matrix.EVD","l":"wr"},{"p":"smile.nlp.pos","c":"PennTreebankPOS","l":"WRB"},{"p":"smile.io","c":"Arrow","l":"write(DataFrame, Path)","u":"write(smile.data.DataFrame,java.nio.file.Path)"},{"p":"smile.io","c":"CSV","l":"write(DataFrame, Path)","u":"write(smile.data.DataFrame,java.nio.file.Path)"},{"p":"smile.io","c":"Arff","l":"write(DataFrame, Path, String)","u":"write(smile.data.DataFrame,java.nio.file.Path,java.lang.String)"},{"p":"smile.base.cart","c":"CART","l":"x"},{"p":"smile.math.matrix.fp32","c":"SparseMatrix.Entry","l":"x"},{"p":"smile.math.matrix","c":"SparseMatrix.Entry","l":"x"},{"p":"smile.regression","c":"GaussianProcessRegression.JointPrediction","l":"x"},{"p":"smile.util","c":"SparseArray.Entry","l":"x"},{"p":"smile.data","c":"SampleInstance","l":"x()"},{"p":"smile.timeseries","c":"AR","l":"x()"},{"p":"smile.timeseries","c":"ARMA","l":"x()"},{"p":"smile.data.formula","c":"Formula","l":"x(DataFrame)","u":"x(smile.data.DataFrame)"},{"p":"smile.plot.vega","c":"Legend","l":"x(double)"},{"p":"smile.plot.vega","c":"Mark","l":"x(double)"},{"p":"smile.plot.vega","c":"Mark","l":"x(String)","u":"x(java.lang.String)"},{"p":"smile.data.formula","c":"Formula","l":"x(Tuple)","u":"x(smile.data.Tuple)"},{"p":"smile.plot.vega","c":"Mark","l":"x2(double)"},{"p":"smile.plot.vega","c":"Mark","l":"x2(String)","u":"x2(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"x2Offset(double)"},{"p":"smile.math.matrix","c":"BigMatrix","l":"xAx(double[])"},{"p":"smile.math.matrix","c":"Matrix","l":"xAx(double[])"},{"p":"smile.math.matrix.fp32","c":"Matrix","l":"xAx(float[])"},{"p":"smile.clustering","c":"XMeans","l":"XMeans(double, double[][], int[])","u":"%3Cinit%3E(double,double[][],int[])"},{"p":"smile.plot.vega","c":"Mark","l":"xOffset(double)"},{"p":"smile.classification","c":"ClassLabels","l":"y"},{"p":"smile.clustering","c":"PartitionClustering","l":"y"},{"p":"smile.data","c":"SampleInstance","l":"y()"},{"p":"smile.data.formula","c":"Formula","l":"y(DataFrame)","u":"y(smile.data.DataFrame)"},{"p":"smile.plot.vega","c":"Legend","l":"y(double)"},{"p":"smile.plot.vega","c":"Mark","l":"y(double)"},{"p":"smile.plot.vega","c":"Mark","l":"y(String)","u":"y(java.lang.String)"},{"p":"smile.data.formula","c":"Formula","l":"y(Tuple)","u":"y(smile.data.Tuple)"},{"p":"smile.plot.vega","c":"Mark","l":"y2(double)"},{"p":"smile.plot.vega","c":"Mark","l":"y2(String)","u":"y2(java.lang.String)"},{"p":"smile.plot.vega","c":"Mark","l":"y2Offset(double)"},{"p":"smile.data.formula","c":"DateFeature","l":"YEAR"},{"p":"smile.plot.swing","c":"Palette","l":"YELLOW"},{"p":"smile.data.formula","c":"Formula","l":"yint(Tuple)","u":"yint(smile.data.Tuple)"},{"p":"smile.plot.vega","c":"Mark","l":"yOffset(double)"},{"p":"smile.timeseries","c":"AR.Method","l":"YuleWalker"},{"p":"smile.swing.table","c":"DateCellEditor","l":"YYYYMMDD"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"YYYYMMDD"},{"p":"smile.swing.table","c":"DateCellEditor","l":"YYYYMMDD_HHMM"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"YYYYMMDD_HHMM"},{"p":"smile.swing.table","c":"DateCellEditor","l":"YYYYMMDD_HHMMSS"},{"p":"smile.swing.table","c":"DateCellRenderer","l":"YYYYMMDD_HHMMSS"},{"p":"smile.plot.vega","c":"Field","l":"zero(boolean)"},{"p":"smile.deep.tensor","c":"Tensor","l":"zeros(long...)"},{"p":"smile.deep.tensor","c":"Tensor","l":"zeros(Tensor.Options, long...)","u":"zeros(smile.deep.tensor.Tensor.Options,long...)"},{"p":"smile.plot.vega","c":"Axis","l":"zindex(int)"},{"p":"smile.plot.vega","c":"Legend","l":"zindex(int)"},{"p":"smile.plot.swing","c":"Line","l":"zipWithIndex(double[])"},{"p":"smile.plot.swing","c":"PlotPanel","l":"zoom(boolean)"},{"p":"smile.glm","c":"GLM","l":"ztest"},{"p":"smile.glm","c":"GLM","l":"ztest()"}];updateSearchResults();